{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/app/api/cep/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nexport async function GET(request: NextRequest) {\n  const { searchParams } = new URL(request.url)\n  const cep = searchParams.get('cep')\n  \n  if (!cep) {\n    return NextResponse.json(\n      { error: 'CEP é obrigatório' },\n      { status: 400 }\n    )\n  }\n\n  // Limpar CEP (apenas números)\n  const cepLimpo = cep.replace(/\\D/g, '')\n  \n  if (cepLimpo.length !== 8) {\n    return NextResponse.json(\n      { error: 'CEP deve ter 8 dígitos' },\n      { status: 400 }\n    )\n  }\n\n  try {\n    const response = await fetch(`https://brasilapi.com.br/api/cep/v1/${cepLimpo}`)\n    \n    if (!response.ok) {\n      if (response.status === 404) {\n        return NextResponse.json(\n          { error: 'CEP não encontrado' },\n          { status: 404 }\n        )\n      }\n      if (response.status === 504 || response.status === 502 || response.status === 503) {\n        return NextResponse.json(\n          { error: 'Serviço temporariamente indisponível. Tente novamente em alguns segundos.' },\n          { status: 503 }\n        )\n      }\n      throw new Error(`HTTP ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    return NextResponse.json({\n      success: true,\n      endereco: {\n        cep: data.cep,\n        logradouro: data.street,\n        bairro: data.neighborhood,\n        cidade: data.city,\n        uf: data.state,\n        ddd: data.ddd\n      }\n    })\n  } catch (error) {\n    console.error('Erro ao buscar CEP:', error)\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,OAAoB;IAC5C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,MAAM,aAAa,GAAG,CAAC;IAE7B,IAAI,CAAC,KAAK;QACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAoB,GAC7B;YAAE,QAAQ;QAAI;IAElB;IAEA,8BAA8B;IAC9B,MAAM,WAAW,IAAI,OAAO,CAAC,OAAO;IAEpC,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAC,oCAAoC,EAAE,UAAU;QAE9E,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,OAAO;gBAAqB,GAC9B;oBAAE,QAAQ;gBAAI;YAElB;YACA,IAAI,SAAS,MAAM,KAAK,OAAO,SAAS,MAAM,KAAK,OAAO,SAAS,MAAM,KAAK,KAAK;gBACjF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,OAAO;gBAA4E,GACrF;oBAAE,QAAQ;gBAAI;YAElB;YACA,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,SAAS,MAAM,EAAE;QAC3C;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,UAAU;gBACR,KAAK,KAAK,GAAG;gBACb,YAAY,KAAK,MAAM;gBACvB,QAAQ,KAAK,YAAY;gBACzB,QAAQ,KAAK,IAAI;gBACjB,IAAI,KAAK,KAAK;gBACd,KAAK,KAAK,GAAG;YACf;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}