{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/app/api/fipe/marcas/%5Btipo%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ tipo: string }> }\n) {\n  try {\n    const { tipo } = await params;\n    \n    // Map Portuguese types to English for the new API v2\n    const typeMap: { [key: string]: string } = {\n      'carros': 'cars',\n      'motos': 'motorcycles', \n      'caminhoes': 'trucks'\n    };\n    \n    const vehicleType = typeMap[tipo];\n    if (!vehicleType) {\n      return NextResponse.json(\n        { \n          error: 'Tipo de veículo inválido. Use: carros, motos ou caminhoes',\n          code: 'INVALID_VEHICLE_TYPE' \n        },\n        { status: 400 }\n      );\n    }\n\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 15000);\n\n    try {\n      // Usar a nova API v2 da FIPE\n      const response = await fetch(\n        `https://fipe.parallelum.com.br/api/v2/${vehicleType}/brands`,\n        {\n          signal: controller.signal,\n          headers: {\n            'User-Agent': 'DespaSys/1.0 (Sistema de Gestão)',\n            'Accept': 'application/json',\n          },\n        }\n      );\n\n      clearTimeout(timeoutId);\n\n      if (response.status === 404) {\n        return NextResponse.json(\n          { \n            error: 'Marcas não encontradas para este tipo de veículo',\n            code: 'BRANDS_NOT_FOUND' \n          },\n          { status: 404 }\n        );\n      }\n\n      if (response.status === 504) {\n        return NextResponse.json(\n          { \n            error: 'Serviço FIPE temporariamente indisponível. Tente novamente em alguns minutos.',\n            code: 'SERVICE_UNAVAILABLE' \n          },\n          { status: 503 }\n        );\n      }\n\n      if (!response.ok) {\n        return NextResponse.json(\n          { \n            error: 'Erro ao buscar marcas FIPE',\n            code: 'API_ERROR' \n          },\n          { status: response.status }\n        );\n      }\n\n      const data = await response.json();\n      \n      // Convert v2 format (code/name) to v1 format (valor/nome) for compatibility\n      const marcas = data.map((item: any) => ({\n        valor: item.code,\n        nome: item.name\n      }));\n      \n      return NextResponse.json({ \n        marcas,\n        tipo: vehicleType,\n        total: marcas.length,\n        timestamp: new Date().toISOString(),\n        source: 'FIPE API v2'\n      });\n\n    } catch (fetchError) {\n      clearTimeout(timeoutId);\n      throw fetchError;\n    }\n\n  } catch (error) {\n    console.error('Erro na API FIPE marcas:', error);\n    \n    if (error instanceof Error && error.name === 'AbortError') {\n      return NextResponse.json(\n        { \n          error: 'Timeout: Serviço FIPE demorou muito para responder. Tente novamente.',\n          code: 'TIMEOUT' \n        },\n        { status: 408 }\n      );\n    }\n\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        code: 'INTERNAL_ERROR' \n      },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAAyC;IAEjD,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;QAEvB,qDAAqD;QACrD,MAAM,UAAqC;YACzC,UAAU;YACV,SAAS;YACT,aAAa;QACf;QAEA,MAAM,cAAc,OAAO,CAAC,KAAK;QACjC,IAAI,CAAC,aAAa;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,OAAO;gBACP,MAAM;YACR,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,aAAa,IAAI;QACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI;QAEvD,IAAI;YACF,6BAA6B;YAC7B,MAAM,WAAW,MAAM,MACrB,CAAC,sCAAsC,EAAE,YAAY,OAAO,CAAC,EAC7D;gBACE,QAAQ,WAAW,MAAM;gBACzB,SAAS;oBACP,cAAc;oBACd,UAAU;gBACZ;YACF;YAGF,aAAa;YAEb,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBACE,OAAO;oBACP,MAAM;gBACR,GACA;oBAAE,QAAQ;gBAAI;YAElB;YAEA,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBACE,OAAO;oBACP,MAAM;gBACR,GACA;oBAAE,QAAQ;gBAAI;YAElB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBACE,OAAO;oBACP,MAAM;gBACR,GACA;oBAAE,QAAQ,SAAS,MAAM;gBAAC;YAE9B;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,4EAA4E;YAC5E,MAAM,SAAS,KAAK,GAAG,CAAC,CAAC,OAAc,CAAC;oBACtC,OAAO,KAAK,IAAI;oBAChB,MAAM,KAAK,IAAI;gBACjB,CAAC;YAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB;gBACA,MAAM;gBACN,OAAO,OAAO,MAAM;gBACpB,WAAW,IAAI,OAAO,WAAW;gBACjC,QAAQ;YACV;QAEF,EAAE,OAAO,YAAY;YACnB,aAAa;YACb,MAAM;QACR;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAE1C,IAAI,iBAAiB,SAAS,MAAM,IAAI,KAAK,cAAc;YACzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,OAAO;gBACP,MAAM;YACR,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,OAAO;YACP,MAAM;QACR,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}