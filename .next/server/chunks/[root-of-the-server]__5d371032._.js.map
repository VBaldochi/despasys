{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/app/api/fipe/preco/%5Bcodigo%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ codigo: string }> }\n) {\n  try {\n    const { codigo } = await params;\n    \n    if (!codigo) {\n      return NextResponse.json(\n        { error: 'Código do veículo é obrigatório' },\n        { status: 400 }\n      );\n    }\n\n    // Parse código para extrair tipo, marca, modelo e ano\n    // Formato esperado: cars/brands/59/models/5940/years/2014-3\n    const url = new URL(request.url);\n    const tipo = url.searchParams.get('tipo') || 'cars';\n    const marca = url.searchParams.get('marca');\n    const modelo = url.searchParams.get('modelo');\n    const ano = url.searchParams.get('ano');\n\n    // Try new FIPE API v2 first\n    try {\n      let fipeUrl = '';\n      \n      if (marca && modelo && ano) {\n        // Use full path if we have all parameters\n        fipeUrl = `https://fipe.parallelum.com.br/api/v2/${tipo}/brands/${marca}/models/${modelo}/years/${ano}`;\n      } else {\n        // Fallback: try to use codigo as fipe code\n        fipeUrl = `https://fipe.parallelum.com.br/api/v2/${tipo}/${codigo}/years`;\n      }\n\n      const response = await fetch(fipeUrl, {\n        headers: {\n          'Accept': 'application/json',\n          'User-Agent': 'Mozilla/5.0 (compatible; DespaSys/1.0)',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        \n        // Format response to match expected structure\n        return NextResponse.json({\n          valor: data.price || data.valor,\n          marca: data.brand || data.marca,\n          modelo: data.model || data.modelo,\n          anoModelo: data.modelYear || data.anoModelo,\n          combustivel: data.fuel || data.combustivel,\n          codigoFipe: data.codeFipe || data.codigoFipe,\n          mesReferencia: data.referenceMonth || data.mesReferencia,\n          tipoVeiculo: data.vehicleType || data.tipoVeiculo,\n          siglaCombustivel: data.fuelAcronym || data.siglaCombustivel,\n          source: 'FIPE API v2',\n          timestamp: new Date().toISOString()\n        });\n      }\n    } catch (fipeError) {\n      console.warn('New FIPE API v2 failed, trying BrasilAPI fallback:', fipeError);\n    }\n\n    // Fallback to BrasilAPI\n    const fallbackResponse = await fetch(\n      `https://brasilapi.com.br/api/fipe/preco/v1/${codigo}`,\n      {\n        headers: {\n          'Accept': 'application/json',\n          'User-Agent': 'Mozilla/5.0 (compatible; DespaSys/1.0)',\n        },\n      }\n    );\n\n    if (!fallbackResponse.ok) {\n      return NextResponse.json(\n        { error: 'Erro ao consultar preço do veículo' },\n        { status: fallbackResponse.status }\n      );\n    }\n\n    const fallbackData = await fallbackResponse.json();\n    \n    return NextResponse.json({\n      ...fallbackData,\n      source: 'BrasilAPI (fallback)',\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Erro ao consultar preço FIPE:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA2C;IAEnD,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;QAEzB,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkC,GAC3C;gBAAE,QAAQ;YAAI;QAElB;QAEA,sDAAsD;QACtD,4DAA4D;QAC5D,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;QAC/B,MAAM,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC,WAAW;QAC7C,MAAM,QAAQ,IAAI,YAAY,CAAC,GAAG,CAAC;QACnC,MAAM,SAAS,IAAI,YAAY,CAAC,GAAG,CAAC;QACpC,MAAM,MAAM,IAAI,YAAY,CAAC,GAAG,CAAC;QAEjC,4BAA4B;QAC5B,IAAI;YACF,IAAI,UAAU;YAEd,IAAI,SAAS,UAAU,KAAK;gBAC1B,0CAA0C;gBAC1C,UAAU,CAAC,sCAAsC,EAAE,KAAK,QAAQ,EAAE,MAAM,QAAQ,EAAE,OAAO,OAAO,EAAE,KAAK;YACzG,OAAO;gBACL,2CAA2C;gBAC3C,UAAU,CAAC,sCAAsC,EAAE,KAAK,CAAC,EAAE,OAAO,MAAM,CAAC;YAC3E;YAEA,MAAM,WAAW,MAAM,MAAM,SAAS;gBACpC,SAAS;oBACP,UAAU;oBACV,cAAc;gBAChB;YACF;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,8CAA8C;gBAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACvB,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK;oBAC/B,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK;oBAC/B,QAAQ,KAAK,KAAK,IAAI,KAAK,MAAM;oBACjC,WAAW,KAAK,SAAS,IAAI,KAAK,SAAS;oBAC3C,aAAa,KAAK,IAAI,IAAI,KAAK,WAAW;oBAC1C,YAAY,KAAK,QAAQ,IAAI,KAAK,UAAU;oBAC5C,eAAe,KAAK,cAAc,IAAI,KAAK,aAAa;oBACxD,aAAa,KAAK,WAAW,IAAI,KAAK,WAAW;oBACjD,kBAAkB,KAAK,WAAW,IAAI,KAAK,gBAAgB;oBAC3D,QAAQ;oBACR,WAAW,IAAI,OAAO,WAAW;gBACnC;YACF;QACF,EAAE,OAAO,WAAW;YAClB,QAAQ,IAAI,CAAC,sDAAsD;QACrE;QAEA,wBAAwB;QACxB,MAAM,mBAAmB,MAAM,MAC7B,CAAC,2CAA2C,EAAE,QAAQ,EACtD;YACE,SAAS;gBACP,UAAU;gBACV,cAAc;YAChB;QACF;QAGF,IAAI,CAAC,iBAAiB,EAAE,EAAE;YACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqC,GAC9C;gBAAE,QAAQ,iBAAiB,MAAM;YAAC;QAEtC;QAEA,MAAM,eAAe,MAAM,iBAAiB,IAAI;QAEhD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,GAAG,YAAY;YACf,QAAQ;YACR,WAAW,IAAI,OAAO,WAAW;QACnC;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}