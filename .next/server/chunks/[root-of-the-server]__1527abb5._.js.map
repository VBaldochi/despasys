{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: process.env.NODE_ENV === 'development' ? ['warn', 'error'] : ['error'],\n  datasources: {\n    db: {\n      url: process.env.DATABASE_URL\n    }\n  },\n  // Configurações de conexão otimizadas\n  transactionOptions: {\n    timeout: 10000, // 10 segundos\n    maxWait: 5000,  // 5 segundos max wait\n  }\n})\n\n// Função para executar queries com retry automático\nexport async function executeWithRetry<T>(\n  operation: () => Promise<T>,\n  maxRetries = 3,\n  delay = 1000\n): Promise<T> {\n  let lastError: Error\n  \n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      return await operation()\n    } catch (error: any) {\n      lastError = error\n      \n      // Se for erro de conexão, tentar reconectar\n      if (error.code === 'P1017' || error.message?.includes('closed')) {\n        console.warn(`Database connection closed (attempt ${attempt}/${maxRetries}), reconnecting...`)\n        try {\n          await prisma.$disconnect()\n          await new Promise(resolve => setTimeout(resolve, delay))\n          await prisma.$connect()\n        } catch (reconnectError) {\n          console.warn('Reconnection failed:', reconnectError)\n        }\n      } else {\n        console.warn(`Database operation failed (attempt ${attempt}/${maxRetries}):`, error.message)\n      }\n      \n      if (attempt === maxRetries) {\n        throw lastError\n      }\n      \n      // Exponential backoff\n      await new Promise(resolve => setTimeout(resolve, delay * attempt))\n    }\n  }\n  \n  throw lastError!\n}\n\n// Configurar graceful shutdown apenas uma vez\nif (typeof window === 'undefined') {\n  let shutdownHandlersAdded = false\n  \n  if (!shutdownHandlersAdded) {\n    shutdownHandlersAdded = true\n    \n    process.on('SIGINT', async () => {\n      console.log('Received SIGINT, disconnecting from database...')\n      await prisma.$disconnect()\n      process.exit(0)\n    })\n    \n    process.on('SIGTERM', async () => {\n      console.log('Received SIGTERM, disconnecting from database...')\n      await prisma.$disconnect()\n      process.exit(0)\n    })\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,CAAC;IAC/D,KAAK,uCAAyC;QAAC;QAAQ;KAAQ,GAAG;IAClE,aAAa;QACX,IAAI;YACF,KAAK,QAAQ,GAAG,CAAC,YAAY;QAC/B;IACF;IACA,sCAAsC;IACtC,oBAAoB;QAClB,SAAS;QACT,SAAS;IACX;AACF;AAGO,eAAe,iBACpB,SAA2B,EAC3B,aAAa,CAAC,EACd,QAAQ,IAAI;IAEZ,IAAI;IAEJ,IAAK,IAAI,UAAU,GAAG,WAAW,YAAY,UAAW;QACtD,IAAI;YACF,OAAO,MAAM;QACf,EAAE,OAAO,OAAY;YACnB,YAAY;YAEZ,4CAA4C;YAC5C,IAAI,MAAM,IAAI,KAAK,WAAW,MAAM,OAAO,EAAE,SAAS,WAAW;gBAC/D,QAAQ,IAAI,CAAC,CAAC,oCAAoC,EAAE,QAAQ,CAAC,EAAE,WAAW,kBAAkB,CAAC;gBAC7F,IAAI;oBACF,MAAM,OAAO,WAAW;oBACxB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;oBACjD,MAAM,OAAO,QAAQ;gBACvB,EAAE,OAAO,gBAAgB;oBACvB,QAAQ,IAAI,CAAC,wBAAwB;gBACvC;YACF,OAAO;gBACL,QAAQ,IAAI,CAAC,CAAC,mCAAmC,EAAE,QAAQ,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,MAAM,OAAO;YAC7F;YAEA,IAAI,YAAY,YAAY;gBAC1B,MAAM;YACR;YAEA,sBAAsB;YACtB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,QAAQ;QAC3D;IACF;IAEA,MAAM;AACR;AAEA,8CAA8C;AAC9C,wCAAmC;IACjC,IAAI,wBAAwB;IAE5B,IAAI,CAAC,uBAAuB;QAC1B,wBAAwB;QAExB,QAAQ,EAAE,CAAC,UAAU;YACnB,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO,WAAW;YACxB,QAAQ,IAAI,CAAC;QACf;QAEA,QAAQ,EAAE,CAAC,WAAW;YACpB,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO,WAAW;YACxB,QAAQ,IAAI,CAAC;QACf;IACF;AACF;AAEA,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/auth.ts"],"sourcesContent":["import { NextAuthOptions } from 'next-auth'\nimport CredentialsProvider from 'next-auth/providers/credentials'\nimport { PrismaAdapter } from '@auth/prisma-adapter'\nimport { prisma } from './prisma'\nimport bcrypt from 'bcryptjs'\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    CredentialsProvider({\n      name: 'credentials',\n      credentials: {\n        email: { label: 'Email', type: 'email' },\n        password: { label: 'Password', type: 'password' },\n        tenantDomain: { label: 'Tenant', type: 'text' }\n      },\n      async authorize(credentials: Record<string, string> | undefined) {\n        if (!credentials?.email || !credentials?.password || !credentials?.tenantDomain) {\n          return null\n        }\n\n        try {\n          // Buscar tenant primeiro\n          const tenant = await (prisma as any).tenant.findUnique({\n            where: { domain: credentials.tenantDomain }\n          })\n\n          if (!tenant) {\n            console.error('Tenant não encontrado:', credentials.tenantDomain)\n            return null\n          }\n\n          if (tenant.status !== 'ACTIVE' && tenant.status !== 'TRIAL') {\n            console.error('Tenant inativo:', tenant.status)\n            return null\n          }\n\n          // Buscar usuário do tenant\n          const user = await (prisma as any).user.findFirst({\n            where: {\n              email: credentials.email,\n              tenantId: tenant.id,\n              status: 'ATIVO'\n            },\n            include: {\n              tenant: {\n                select: {\n                  id: true,\n                  name: true,\n                  domain: true,\n                  plan: true\n                }\n              }\n            }\n          })\n\n          if (!user) {\n            console.error('Usuário não encontrado:', credentials.email)\n            return null\n          }\n\n          // Verificar senha\n          if (!user.password) {\n            console.error('Usuário sem senha')\n            return null\n          }\n\n          const isPasswordValid = await bcrypt.compare(credentials.password, user.password)\n\n          if (!isPasswordValid) {\n            console.error('Senha inválida')\n            return null\n          }\n\n          // Retornar dados do usuário para a sessão\n          return {\n            id: user.id,\n            email: user.email,\n            name: user.name,\n            role: user.role,\n            tenantId: (user as any).tenantId,\n            tenant: (user as any).tenant\n          } as any\n        } catch (error) {\n          console.error('Erro na autenticação:', error)\n          return null\n        }\n      }\n    })\n  ],\n  session: {\n    strategy: 'jwt',\n    maxAge: 24 * 60 * 60, // 24 horas\n    updateAge: 60 * 60, // Atualizar a cada 1 hora\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.role = user.role\n        token.tenantId = user.tenantId\n        token.tenant = user.tenant\n      }\n      return token\n    },\n    async session({ session, token }) {\n      if (token) {\n        session.user.id = token.sub || ''\n        session.user.role = token.role as string\n        session.user.tenantId = token.tenantId as string\n        session.user.tenant = token.tenant as any\n      }\n      return session\n    }\n  },\n  pages: {\n    signIn: '/auth/login',\n    error: '/auth/login'\n  },\n  secret: process.env.NEXTAUTH_SECRET\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/cache.ts"],"sourcesContent":["// Cache simples em memória para desenvolvimento\ninterface CacheItem {\n  data: any\n  expiry: number\n}\n\nclass SimpleCache {\n  private cache = new Map<string, CacheItem>()\n  private defaultTTL = 1000 * 60 * 5 // 5 minutos\n\n  set(key: string, data: any, ttl?: number): void {\n    const expiry = Date.now() + (ttl || this.defaultTTL)\n    this.cache.set(key, { data, expiry })\n  }\n\n  get<T>(key: string): T | null {\n    const item = this.cache.get(key)\n    \n    if (!item) {\n      return null\n    }\n\n    if (Date.now() > item.expiry) {\n      this.cache.delete(key)\n      return null\n    }\n\n    return item.data as T\n  }\n\n  delete(key: string): void {\n    this.cache.delete(key)\n  }\n\n  clear(): void {\n    this.cache.clear()\n  }\n\n  // Limpeza automática de itens expirados\n  cleanup(): void {\n    const now = Date.now()\n    for (const [key, item] of this.cache.entries()) {\n      if (now > item.expiry) {\n        this.cache.delete(key)\n      }\n    }\n  }\n}\n\nexport const cache = new SimpleCache()\n\n// Limpeza automática a cada 10 minutos\nif (typeof window === 'undefined') {\n  setInterval(() => {\n    cache.cleanup()\n  }, 1000 * 60 * 10)\n}\n\nexport function getCacheKey(prefix: string, tenantId: string, ...args: string[]): string {\n  return `${prefix}:${tenantId}:${args.join(':')}`\n}\n"],"names":[],"mappings":"AAAA,gDAAgD;;;;;AAMhD,MAAM;IACI,QAAQ,IAAI,MAAwB;IACpC,aAAa,OAAO,KAAK,EAAE,YAAY;KAAb;IAElC,IAAI,GAAW,EAAE,IAAS,EAAE,GAAY,EAAQ;QAC9C,MAAM,SAAS,KAAK,GAAG,KAAK,CAAC,OAAO,IAAI,CAAC,UAAU;QACnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;YAAE;YAAM;QAAO;IACrC;IAEA,IAAO,GAAW,EAAY;QAC5B,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAE5B,IAAI,CAAC,MAAM;YACT,OAAO;QACT;QAEA,IAAI,KAAK,GAAG,KAAK,KAAK,MAAM,EAAE;YAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAClB,OAAO;QACT;QAEA,OAAO,KAAK,IAAI;IAClB;IAEA,OAAO,GAAW,EAAQ;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IACpB;IAEA,QAAc;QACZ,IAAI,CAAC,KAAK,CAAC,KAAK;IAClB;IAEA,wCAAwC;IACxC,UAAgB;QACd,MAAM,MAAM,KAAK,GAAG;QACpB,KAAK,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI;YAC9C,IAAI,MAAM,KAAK,MAAM,EAAE;gBACrB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACpB;QACF;IACF;AACF;AAEO,MAAM,QAAQ,IAAI;AAEzB,uCAAuC;AACvC,wCAAmC;IACjC,YAAY;QACV,MAAM,OAAO;IACf,GAAG,OAAO,KAAK;AACjB;AAEO,SAAS,YAAY,MAAc,EAAE,QAAgB,EAAE,GAAG,IAAc;IAC7E,OAAO,GAAG,OAAO,CAAC,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM;AAClD","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/app/api/dashboard/stats/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { getServerSession } from 'next-auth'\nimport { authOptions } from '@/lib/auth'\nimport { prisma, executeWithRetry } from '@/lib/prisma'\nimport { cache, getCacheKey } from '@/lib/cache'\n\nexport async function GET() {\n  try {\n    const session = await getServerSession(authOptions)\n    \n    if (!session || !session.user.tenantId) {\n      return NextResponse.json({ error: 'Não autorizado' }, { status: 401 })\n    }\n\n    const tenantId = session.user.tenantId\n    const cacheKey = getCacheKey('dashboard-stats', tenantId)\n\n    // Verificar cache primeiro\n    const cachedStats = cache.get(cacheKey)\n    if (cachedStats) {\n      return NextResponse.json(cachedStats)\n    }\n\n    // Buscar estatísticas em paralelo\n    const [\n      customersCount,\n      processesCount,\n      vehiclesCount,\n      usersCount\n    ] = await executeWithRetry(async () => {\n      return await Promise.all([\n        (prisma as any).customer.count({ where: { tenantId } }),\n        (prisma as any).process.count({ where: { tenantId } }),\n        (prisma as any).veiculo.count({ where: { tenantId } }),\n        (prisma as any).user.count({ where: { tenantId } })\n      ])\n    })\n\n    const stats = {\n      totalClientes: customersCount,\n      processosAtivos: processesCount,\n      veiculos: vehiclesCount,\n      usuarios: usersCount\n    }\n\n    // Cache por 2 minutos\n    cache.set(cacheKey, stats, 1000 * 60 * 2)\n\n    return NextResponse.json(stats)\n  } catch (error) {\n    console.error('Erro ao buscar estatísticas:', error)\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,uIAAA,CAAA,mBAAgB,AAAD,EAAE,oHAAA,CAAA,cAAW;QAElD,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACtE;QAEA,MAAM,WAAW,QAAQ,IAAI,CAAC,QAAQ;QACtC,MAAM,WAAW,CAAA,GAAA,qHAAA,CAAA,cAAW,AAAD,EAAE,mBAAmB;QAEhD,2BAA2B;QAC3B,MAAM,cAAc,qHAAA,CAAA,QAAK,CAAC,GAAG,CAAC;QAC9B,IAAI,aAAa;YACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAC3B;QAEA,kCAAkC;QAClC,MAAM,CACJ,gBACA,gBACA,eACA,WACD,GAAG,MAAM,CAAA,GAAA,sHAAA,CAAA,mBAAgB,AAAD,EAAE;YACzB,OAAO,MAAM,QAAQ,GAAG,CAAC;gBACtB,sHAAA,CAAA,SAAM,CAAS,QAAQ,CAAC,KAAK,CAAC;oBAAE,OAAO;wBAAE;oBAAS;gBAAE;gBACpD,sHAAA,CAAA,SAAM,CAAS,OAAO,CAAC,KAAK,CAAC;oBAAE,OAAO;wBAAE;oBAAS;gBAAE;gBACnD,sHAAA,CAAA,SAAM,CAAS,OAAO,CAAC,KAAK,CAAC;oBAAE,OAAO;wBAAE;oBAAS;gBAAE;gBACnD,sHAAA,CAAA,SAAM,CAAS,IAAI,CAAC,KAAK,CAAC;oBAAE,OAAO;wBAAE;oBAAS;gBAAE;aAClD;QACH;QAEA,MAAM,QAAQ;YACZ,eAAe;YACf,iBAAiB;YACjB,UAAU;YACV,UAAU;QACZ;QAEA,sBAAsB;QACtB,qHAAA,CAAA,QAAK,CAAC,GAAG,CAAC,UAAU,OAAO,OAAO,KAAK;QAEvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}