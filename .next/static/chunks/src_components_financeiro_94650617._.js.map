{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/financeiro/TransacoesList.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { \n  PlusIcon, \n  MagnifyingGlassIcon, \n  FunnelIcon,\n  EyeIcon,\n  PencilIcon,\n  CheckIcon,\n  XMarkIcon\n} from '@heroicons/react/24/outline';\n\ninterface Transacao {\n  id: string;\n  numero: string;\n  descricao: string;\n  categoria: string;\n  valor: number;\n  tipo: 'RECEITA' | 'DESPESA';\n  status: 'PENDENTE' | 'PAGO' | 'VENCIDO' | 'CANCELADO';\n  dataVencimento: string;\n  dataPagamento?: string;\n  cliente?: { id: string; name: string };\n  processo?: { id: string; numero: string };\n}\n\ninterface TransacoesListProps {\n  onNovaTransacao?: () => void;\n}\n\nexport default function TransacoesList({ onNovaTransacao }: TransacoesListProps) {\n  const { data: session } = useSession();\n  const [transacoes, setTransacoes] = useState<Transacao[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const [filtroTipo, setFiltroTipo] = useState('');\n  const [filtroStatus, setFiltroStatus] = useState('');\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [showFilters, setShowFilters] = useState(false);\n\n  useEffect(() => {\n    if (session) {\n      console.log('Buscando transações...');\n      fetchTransacoes();\n    }\n  }, [session, search, filtroTipo, filtroStatus, page]);\n\n  const fetchTransacoes = async () => {\n    try {\n      const params = new URLSearchParams({\n        page: page.toString(),\n        limit: '10'\n      });\n\n      if (search) params.append('search', search);\n      if (filtroTipo) params.append('tipo', filtroTipo);\n      if (filtroStatus) params.append('status', filtroStatus);\n\n      console.log('Fazendo requisição para:', `/api/financeiro/transacoes?${params}`);\n      const response = await fetch(`/api/financeiro/transacoes?${params}`);\n      console.log('Response status:', response.status);\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Transações recebidas:', data);\n        setTransacoes(data.transacoes);\n        setTotal(data.pagination.total);\n      } else {\n        console.error('Erro na resposta:', response.status);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar transações:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('pt-BR');\n  };\n\n  const getStatusColor = (status: string) => {\n    const colors = {\n      PENDENTE: 'bg-yellow-100 text-yellow-800',\n      PAGO: 'bg-green-100 text-green-800',\n      VENCIDO: 'bg-red-100 text-red-800',\n      CANCELADO: 'bg-gray-100 text-gray-800'\n    };\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getTipoColor = (tipo: string) => {\n    return tipo === 'RECEITA' ? 'text-green-600' : 'text-red-600';\n  };\n\n  const marcarComoPago = async (transacaoId: string) => {\n    try {\n      const response = await fetch(`/api/financeiro/transacoes/${transacaoId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: 'PAGO',\n          dataPagamento: new Date().toISOString()\n        })\n      });\n\n      if (response.ok) {\n        fetchTransacoes(); // Recarregar lista\n      }\n    } catch (error) {\n      console.error('Erro ao marcar como pago:', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"animate-pulse space-y-4\">\n        {[1, 2, 3, 4, 5].map((i) => (\n          <div key={i} className=\"h-16 bg-gray-200 rounded-lg\"></div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">Transações</h2>\n        <button\n          onClick={onNovaTransacao}\n          className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2\"\n        >\n          <PlusIcon className=\"h-5 w-5\" />\n          Nova Transação\n        </button>\n      </div>\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"flex flex-col lg:flex-row gap-4\">\n          {/* Busca */}\n          <div className=\"flex-1\">\n            <div className=\"relative\">\n              <MagnifyingGlassIcon className=\"h-5 w-5 absolute left-3 top-3 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Buscar por descrição, categoria ou cliente...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              />\n            </div>\n          </div>\n\n          {/* Botão Filtros */}\n          <button\n            onClick={() => setShowFilters(!showFilters)}\n            className=\"flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\n          >\n            <FunnelIcon className=\"h-5 w-5\" />\n            Filtros\n          </button>\n        </div>\n\n        {/* Filtros Expandidos */}\n        {showFilters && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4 pt-4 border-t border-gray-200\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Tipo\n              </label>\n              <select\n                value={filtroTipo}\n                onChange={(e) => setFiltroTipo(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Todos</option>\n                <option value=\"RECEITA\">Receita</option>\n                <option value=\"DESPESA\">Despesa</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Status\n              </label>\n              <select\n                value={filtroStatus}\n                onChange={(e) => setFiltroStatus(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Todos</option>\n                <option value=\"PENDENTE\">Pendente</option>\n                <option value=\"PAGO\">Pago</option>\n                <option value=\"VENCIDO\">Vencido</option>\n                <option value=\"CANCELADO\">Cancelado</option>\n              </select>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Lista de Transações */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Transação\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Valor\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Vencimento\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Cliente/Processo\n                </th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Ações\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {transacoes.map((transacao) => (\n                <tr key={transacao.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4\">\n                    <div>\n                      <div className=\"font-medium text-gray-900\">\n                        {transacao.descricao}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        {transacao.categoria} • {transacao.numero}\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className={`font-bold ${getTipoColor(transacao.tipo)}`}>\n                      {transacao.tipo === 'RECEITA' ? '+' : '-'} {formatCurrency(transacao.valor)}\n                    </div>\n                    <div className=\"text-sm text-gray-500\">\n                      {transacao.tipo}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-900\">\n                    {formatDate(transacao.dataVencimento)}\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(transacao.status)}`}>\n                      {transacao.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-900\">\n                    {transacao.cliente && (\n                      <div>{transacao.cliente.name}</div>\n                    )}\n                    {transacao.processo && (\n                      <div className=\"text-gray-500\">{transacao.processo.numero}</div>\n                    )}\n                  </td>\n                  <td className=\"px-6 py-4 text-right text-sm font-medium\">\n                    <div className=\"flex items-center justify-end gap-2\">\n                      {transacao.status === 'PENDENTE' && (\n                        <button\n                          onClick={() => marcarComoPago(transacao.id)}\n                          className=\"text-green-600 hover:text-green-900\"\n                          title=\"Marcar como pago\"\n                        >\n                          <CheckIcon className=\"h-5 w-5\" />\n                        </button>\n                      )}\n                      <button\n                        className=\"text-blue-600 hover:text-blue-900\"\n                        title=\"Visualizar\"\n                      >\n                        <EyeIcon className=\"h-5 w-5\" />\n                      </button>\n                      <button\n                        className=\"text-gray-600 hover:text-gray-900\"\n                        title=\"Editar\"\n                      >\n                        <PencilIcon className=\"h-5 w-5\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {transacoes.length === 0 && (\n          <div className=\"text-center py-12\">\n            <p className=\"text-gray-500\">Nenhuma transação encontrada</p>\n          </div>\n        )}\n      </div>\n\n      {/* Paginação */}\n      {total > 10 && (\n        <div className=\"flex justify-between items-center\">\n          <p className=\"text-sm text-gray-700\">\n            Mostrando {(page - 1) * 10 + 1} até {Math.min(page * 10, total)} de {total} resultados\n          </p>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={() => setPage(Math.max(1, page - 1))}\n              disabled={page === 1}\n              className=\"px-3 py-2 border border-gray-300 rounded-lg disabled:opacity-50\"\n            >\n              Anterior\n            </button>\n            <button\n              onClick={() => setPage(page + 1)}\n              disabled={page * 10 >= total}\n              className=\"px-3 py-2 border border-gray-300 rounded-lg disabled:opacity-50\"\n            >\n              Próximo\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 744, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/financeiro/NovaTransacaoModal.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\ninterface Customer {\n  id: string;\n  name: string;\n}\n\ninterface Process {\n  id: string;\n  numero: string;\n}\n\ninterface NovaTransacaoModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: () => void;\n}\n\nexport default function NovaTransacaoModal({ isOpen, onClose, onSuccess }: NovaTransacaoModalProps) {\n  const categorias = {\n    RECEITA: [\n      { value: 'Serviços Prestados', requiresCustomer: true, requiresProcess: true },\n      { value: 'Emolumentos', requiresCustomer: true, requiresProcess: true },\n      { value: 'Taxas Administrativas', requiresCustomer: true, requiresProcess: false },\n      { value: 'Consultoria', requiresCustomer: true, requiresProcess: false },\n      { value: 'Outros Serviços', requiresCustomer: false, requiresProcess: false }\n    ],\n    DESPESA: [\n      { value: 'Emolumentos Cartório', requiresCustomer: false, requiresProcess: true },\n      { value: 'Taxas DETRAN', requiresCustomer: false, requiresProcess: true },\n      { value: 'Despesas Operacionais', requiresCustomer: false, requiresProcess: false },\n      { value: 'Material de Escritório', requiresCustomer: false, requiresProcess: false },\n      { value: 'Telecomunicações', requiresCustomer: false, requiresProcess: false },\n      { value: 'Combustível', requiresCustomer: false, requiresProcess: false },\n      { value: 'Aluguel', requiresCustomer: false, requiresProcess: false },\n      { value: 'Energia Elétrica', requiresCustomer: false, requiresProcess: false },\n      { value: 'Água', requiresCustomer: false, requiresProcess: false },\n      { value: 'Internet', requiresCustomer: false, requiresProcess: false },\n      { value: 'Outros', requiresCustomer: false, requiresProcess: false }\n    ]\n  };\n\n  const [formData, setFormData] = useState({\n    tipo: 'RECEITA',\n    categoria: '',\n    descricao: '',\n    valor: '',\n    dataVencimento: '',\n    customerId: '',\n    processoId: '',\n    metodoPagamento: '',\n    observacoes: ''\n  });\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [processes, setProcesses] = useState<Process[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Obter configuração da categoria selecionada\n  const selectedCategoryConfig = formData.categoria \n    ? categorias[formData.tipo as keyof typeof categorias]?.find(cat => cat.value === formData.categoria)\n    : null;\n  \n  const showCustomerField = selectedCategoryConfig?.requiresCustomer || false;\n  const showProcessField = selectedCategoryConfig?.requiresProcess || false;\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchCustomers();\n      fetchProcesses();\n    }\n  }, [isOpen]);\n\n  const fetchCustomers = async () => {\n    try {\n      console.log('Buscando clientes...');\n      const response = await fetch('/api/customers');\n      console.log('Response status:', response.status);\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Clientes recebidos:', data);\n        // A API retorna diretamente o array de customers\n        setCustomers(Array.isArray(data) ? data : []);\n      } else {\n        console.error('Erro na resposta:', response.status);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar clientes:', error);\n    }\n  };\n\n  const fetchProcesses = async () => {\n    try {\n      console.log('Buscando processos...');\n      const response = await fetch('/api/processes');\n      console.log('Response status processos:', response.status);\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Processos recebidos:', data);\n        // A API pode retornar diretamente o array ou em data.processes\n        setProcesses(Array.isArray(data) ? data : (data.processes || []));\n      } else {\n        console.error('Erro na resposta processos:', response.status);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar processos:', error);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.categoria) newErrors.categoria = 'Categoria é obrigatória';\n    if (!formData.descricao) newErrors.descricao = 'Descrição é obrigatória';\n    if (!formData.valor || parseFloat(formData.valor) <= 0) {\n      newErrors.valor = 'Valor deve ser maior que zero';\n    }\n    if (!formData.dataVencimento) newErrors.dataVencimento = 'Data de vencimento é obrigatória';\n\n    // Validar campos condicionais baseados na categoria\n    if (selectedCategoryConfig?.requiresCustomer && !formData.customerId) {\n      newErrors.customerId = 'Cliente é obrigatório para esta categoria';\n    }\n    if (selectedCategoryConfig?.requiresProcess && !formData.processoId) {\n      newErrors.processoId = 'Processo é obrigatório para esta categoria';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setLoading(true);\n    try {\n      // Limpar campos que não são necessários baseado na categoria\n      const submitData = {\n        ...formData,\n        valor: parseFloat(formData.valor),\n        customerId: showCustomerField ? (formData.customerId || null) : null,\n        processoId: showProcessField ? (formData.processoId || null) : null\n      };\n\n      const response = await fetch('/api/financeiro/transacoes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(submitData)\n      });\n\n      if (response.ok) {\n        onSuccess();\n        onClose();\n        // Reset form\n        setFormData({\n          tipo: 'RECEITA',\n          categoria: '',\n          descricao: '',\n          valor: '',\n          dataVencimento: '',\n          customerId: '',\n          processoId: '',\n          metodoPagamento: '',\n          observacoes: ''\n        });\n      } else {\n        const error = await response.json();\n        alert(error.error || 'Erro ao criar transação');\n      }\n    } catch (error) {\n      console.error('Erro ao criar transação:', error);\n      alert('Erro ao criar transação');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    \n    setFormData(prev => {\n      const newData = { ...prev, [name]: value };\n      \n      // Se mudou a categoria, limpar cliente e processo se não são necessários\n      if (name === 'categoria') {\n        const categoryConfig = categorias[prev.tipo as keyof typeof categorias]\n          .find(cat => cat.value === value);\n        \n        if (!categoryConfig?.requiresCustomer) {\n          newData.customerId = '';\n        }\n        if (!categoryConfig?.requiresProcess) {\n          newData.processoId = '';\n        }\n      }\n      \n      return newData;\n    });\n    \n    // Limpar erro quando campo for preenchido\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Nova Transação</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n          {/* Tipo */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Tipo *\n            </label>\n            <select\n              name=\"tipo\"\n              value={formData.tipo}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"RECEITA\">Receita</option>\n              <option value=\"DESPESA\">Despesa</option>\n            </select>\n          </div>\n\n          {/* Categoria */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Categoria *\n            </label>\n            <select\n              name=\"categoria\"\n              value={formData.categoria}\n              onChange={handleChange}\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                errors.categoria ? 'border-red-500' : 'border-gray-300'\n              }`}\n            >\n              <option value=\"\">Selecione uma categoria</option>\n              {categorias[formData.tipo as keyof typeof categorias].map((cat) => (\n                <option key={cat.value} value={cat.value}>{cat.value}</option>\n              ))}\n            </select>\n            {errors.categoria && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.categoria}</p>\n            )}\n          </div>\n\n          {/* Descrição */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Descrição *\n            </label>\n            <input\n              type=\"text\"\n              name=\"descricao\"\n              value={formData.descricao}\n              onChange={handleChange}\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                errors.descricao ? 'border-red-500' : 'border-gray-300'\n              }`}\n              placeholder=\"Ex: Serviço de transferência de veículo\"\n            />\n            {errors.descricao && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.descricao}</p>\n            )}\n          </div>\n\n          {/* Valor e Data */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Valor *\n              </label>\n              <input\n                type=\"number\"\n                name=\"valor\"\n                value={formData.valor}\n                onChange={handleChange}\n                step=\"0.01\"\n                min=\"0\"\n                className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                  errors.valor ? 'border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"0,00\"\n              />\n              {errors.valor && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.valor}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Data de Vencimento *\n              </label>\n              <input\n                type=\"date\"\n                name=\"dataVencimento\"\n                value={formData.dataVencimento}\n                onChange={handleChange}\n                className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                  errors.dataVencimento ? 'border-red-500' : 'border-gray-300'\n                }`}\n              />\n              {errors.dataVencimento && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.dataVencimento}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Cliente e Processo - condicionais */}\n          {(showCustomerField || showProcessField) && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {/* Cliente */}\n              {showCustomerField && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Cliente {selectedCategoryConfig?.requiresCustomer ? '*' : ''}\n                  </label>\n                  <select\n                    name=\"customerId\"\n                    value={formData.customerId}\n                    onChange={handleChange}\n                    className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.customerId ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  >\n                    <option value=\"\">Selecione um cliente</option>\n                    {customers.map((customer) => (\n                      <option key={customer.id} value={customer.id}>\n                        {customer.name}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.customerId && (\n                    <p className=\"text-red-500 text-sm mt-1\">{errors.customerId}</p>\n                  )}\n                  {customers.length === 0 && (\n                    <p className=\"text-sm text-gray-500 mt-1\">Nenhum cliente encontrado</p>\n                  )}\n                </div>\n              )}\n\n              {/* Processo */}\n              {showProcessField && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Processo {selectedCategoryConfig?.requiresProcess ? '*' : ''}\n                  </label>\n                  <select\n                    name=\"processoId\"\n                    value={formData.processoId}\n                    onChange={handleChange}\n                    className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.processoId ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  >\n                    <option value=\"\">Selecione um processo</option>\n                    {processes.map((process) => (\n                      <option key={process.id} value={process.id}>\n                        {process.numero}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.processoId && (\n                    <p className=\"text-red-500 text-sm mt-1\">{errors.processoId}</p>\n                  )}\n                  {processes.length === 0 && (\n                    <p className=\"text-sm text-gray-500 mt-1\">Nenhum processo encontrado</p>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Método de Pagamento */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Método de Pagamento\n            </label>\n            <select\n              name=\"metodoPagamento\"\n              value={formData.metodoPagamento}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">Selecione o método</option>\n              <option value=\"dinheiro\">Dinheiro</option>\n              <option value=\"pix\">PIX</option>\n              <option value=\"cartao_credito\">Cartão de Crédito</option>\n              <option value=\"cartao_debito\">Cartão de Débito</option>\n              <option value=\"transferencia\">Transferência Bancária</option>\n              <option value=\"boleto\">Boleto</option>\n            </select>\n          </div>\n\n          {/* Observações */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Observações\n            </label>\n            <textarea\n              name=\"observacoes\"\n              value={formData.observacoes}\n              onChange={handleChange}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Informações adicionais...\"\n            />\n          </div>\n\n          {/* Botões */}\n          <div className=\"flex justify-end gap-4 pt-4 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\n            >\n              Cancelar\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {loading ? 'Criando...' : 'Criar Transação'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1561, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/financeiro/FinanceiroDashboard.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { \n  CurrencyDollarIcon, \n  BanknotesIcon, \n  ExclamationCircleIcon,\n  ChartBarIcon,\n  PlusIcon\n} from '@heroicons/react/24/outline';\nimport TransacoesList from './TransacoesList';\nimport NovaTransacaoModal from './NovaTransacaoModal';\n\ninterface FinanceData {\n  totalReceitas: number;\n  totalDespesas: number;\n  saldoAtual: number;\n  contasPendentes: number;\n  contasVencidas: number;\n  transacoesRecentes: any[];\n}\n\nexport default function FinanceiroDashboard() {\n  const { data: session } = useSession();\n  const [financeData, setFinanceData] = useState<FinanceData>({\n    totalReceitas: 0,\n    totalDespesas: 0,\n    saldoAtual: 0,\n    contasPendentes: 0,\n    contasVencidas: 0,\n    transacoesRecentes: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'transacoes'>('dashboard');\n\n  useEffect(() => {\n    if (session) {\n      fetchFinanceData();\n    }\n  }, [session]);\n\n  const fetchFinanceData = async () => {\n    try {\n      const response = await fetch('/api/financeiro/dashboard');\n      if (response.ok) {\n        const data = await response.json();\n        setFinanceData(data);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar dados financeiros:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  };\n\n  const handleNovaTransacao = () => {\n    setShowModal(true);\n  };\n\n  const handleModalSuccess = () => {\n    fetchFinanceData();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"animate-pulse\">\n        <div className=\"h-8 bg-gray-200 rounded w-64 mb-6\"></div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          {[1, 2, 3, 4].map((i) => (\n            <div key={i} className=\"h-32 bg-gray-200 rounded-lg\"></div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Financeiro</h1>\n        <button \n          onClick={handleNovaTransacao}\n          className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2\"\n        >\n          <PlusIcon className=\"h-5 w-5\" />\n          Nova Transação\n        </button>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"-mb-px flex space-x-8\">\n          <button\n            onClick={() => setActiveTab('dashboard')}\n            className={`py-2 px-1 border-b-2 font-medium text-sm ${\n              activeTab === 'dashboard'\n                ? 'border-blue-500 text-blue-600'\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n          >\n            Dashboard\n          </button>\n          <button\n            onClick={() => setActiveTab('transacoes')}\n            className={`py-2 px-1 border-b-2 font-medium text-sm ${\n              activeTab === 'transacoes'\n                ? 'border-blue-500 text-blue-600'\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n          >\n            Transações\n          </button>\n        </nav>\n      </div>\n\n      {/* Content */}\n      {activeTab === 'dashboard' ? (\n        <>\n          {/* Cards de Resumo */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {/* Saldo Atual */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-green-100 rounded-lg\">\n                  <BanknotesIcon className=\"h-6 w-6 text-green-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Saldo Atual</p>\n                  <p className={`text-2xl font-bold ${financeData.saldoAtual >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                    {formatCurrency(financeData.saldoAtual)}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Total Receitas */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-blue-100 rounded-lg\">\n                  <CurrencyDollarIcon className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Receitas (mês)</p>\n                  <p className=\"text-2xl font-bold text-blue-600\">\n                    {formatCurrency(financeData.totalReceitas)}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Total Despesas */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-red-100 rounded-lg\">\n                  <ChartBarIcon className=\"h-6 w-6 text-red-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Despesas (mês)</p>\n                  <p className=\"text-2xl font-bold text-red-600\">\n                    {formatCurrency(financeData.totalDespesas)}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Contas Vencidas */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                  <ExclamationCircleIcon className=\"h-6 w-6 text-yellow-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Contas Vencidas</p>\n                  <p className=\"text-2xl font-bold text-yellow-600\">\n                    {financeData.contasVencidas}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Transações Recentes */}\n          <div className=\"bg-white rounded-lg shadow\">\n            <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">Transações Recentes</h2>\n              <button\n                onClick={() => setActiveTab('transacoes')}\n                className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n              >\n                Ver todas\n              </button>\n            </div>\n            <div className=\"p-6\">\n              {financeData.transacoesRecentes.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {financeData.transacoesRecentes.slice(0, 5).map((transacao) => (\n                    <div key={transacao.id} className=\"flex items-center justify-between border-b border-gray-100 pb-4 last:border-b-0\">\n                      <div>\n                        <p className=\"font-medium text-gray-900\">{transacao.descricao}</p>\n                        <p className=\"text-sm text-gray-500\">{transacao.categoria}</p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className={`font-bold ${transacao.tipo === 'RECEITA' ? 'text-green-600' : 'text-red-600'}`}>\n                          {transacao.tipo === 'RECEITA' ? '+' : '-'} {formatCurrency(transacao.valor)}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {new Date(transacao.dataVencimento).toLocaleDateString('pt-BR')}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-gray-500 text-center py-8\">Nenhuma transação encontrada</p>\n              )}\n            </div>\n          </div>\n        </>\n      ) : (\n        <TransacoesList onNovaTransacao={handleNovaTransacao} />\n      )}\n\n      {/* Modal */}\n      <NovaTransacaoModal\n        isOpen={showModal}\n        onClose={() => setShowModal(false)}\n        onSuccess={handleModalSuccess}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}