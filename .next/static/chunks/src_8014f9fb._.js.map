{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/cep.ts"],"sourcesContent":["// Serviços de integração com CEP da BrasilAPI\n// Útil para validação de endereços e auto-preenchimento\n\nexport interface CepResponse {\n  cep: string;\n  logradouro: string;\n  bairro: string;\n  cidade: string;\n  uf: string;\n  ddd: string;\n}\n\nexport interface EnderecoCep {\n  cep: string;\n  state: string;\n  city: string;\n  neighborhood: string | null;\n  street: string | null;\n  service: string;\n}\n\nexport interface EnderecoCepV2 extends EnderecoCep {\n  location: {\n    type: string;\n    coordinates: {\n      longitude: string | null;\n      latitude: string | null;\n    };\n  };\n}\n\nclass CepService {\n  private readonly baseUrl = 'https://brasilapi.com.br/api/cep';\n\n  /**\n   * Busca endereço por CEP (versão 1)\n   */\n  async buscarCep(cep: string): Promise<CepResponse> {\n    const cepLimpo = cep.replace(/\\D/g, '');\n    \n    if (cepLimpo.length !== 8) {\n      throw new Error('CEP deve ter 8 dígitos');\n    }\n\n    try {\n      const response = await fetch(`/api/cep?cep=${cepLimpo}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar CEP');\n      }\n\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error('CEP não encontrado');\n      }\n\n      return data.endereco;\n    } catch (error) {\n      console.error('Erro ao buscar CEP:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Busca endereço por CEP com geolocalização (versão 2)\n   */\n  async buscarCepV2(cep: string): Promise<EnderecoCepV2> {\n    const cepLimpo = this.limparCep(cep);\n    \n    if (!this.validarCep(cepLimpo)) {\n      throw new Error('CEP inválido. Use o formato 12345678 ou 12345-678');\n    }\n\n    try {\n      const response = await fetch(`${this.baseUrl}/v2/${cepLimpo}`);\n      \n      if (!response.ok) {\n        if (response.status === 404) {\n          throw new Error('CEP não encontrado');\n        }\n        throw new Error(`Erro ao buscar CEP: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Erro na consulta de CEP V2:', error);\n      if (error instanceof Error) {\n        throw error;\n      }\n      throw new Error('Falha ao consultar CEP');\n    }\n  }\n\n  /**\n   * Remove formatação do CEP\n   */\n  private limparCep(cep: string): string {\n    return cep.replace(/\\D/g, '');\n  }\n\n  /**\n   * Valida formato do CEP\n   */\n  validarCep(cep: string): boolean {\n    const cepLimpo = this.limparCep(cep);\n    return /^\\d{8}$/.test(cepLimpo);\n  }\n\n  /**\n   * Formata CEP para exibição\n   */\n  formatarCep(cep: string): string {\n    const cepLimpo = this.limparCep(cep);\n    if (!this.validarCep(cepLimpo)) return cep;\n    \n    return `${cepLimpo.slice(0, 5)}-${cepLimpo.slice(5)}`;\n  }\n\n  /**\n   * Monta endereço completo para exibição\n   */\n  montarEnderecoCompleto(endereco: EnderecoCep): string {\n    const partes = [\n      endereco.street,\n      endereco.neighborhood,\n      endereco.city,\n      endereco.state\n    ].filter(Boolean);\n    \n    return partes.join(', ');\n  }\n\n  /**\n   * Verifica se o endereço tem coordenadas (apenas V2)\n   */\n  temCoordenadas(endereco: EnderecoCepV2): boolean {\n    return !!(\n      endereco.location?.coordinates?.latitude && \n      endereco.location?.coordinates?.longitude\n    );\n  }\n\n  /**\n   * Converte coordenadas para números\n   */\n  obterCoordenadas(endereco: EnderecoCepV2): { lat: number; lng: number } | null {\n    if (!this.temCoordenadas(endereco)) return null;\n    \n    const lat = parseFloat(endereco.location.coordinates.latitude || '0');\n    const lng = parseFloat(endereco.location.coordinates.longitude || '0');\n    \n    if (isNaN(lat) || isNaN(lng)) return null;\n    \n    return { lat, lng };\n  }\n}\n\n// Singleton instance\nexport const cepService = new CepService();\n\n// Hook personalizado para React\nexport function useCep() {\n  return {\n    buscarCep: cepService.buscarCep.bind(cepService),\n    buscarCepV2: cepService.buscarCepV2.bind(cepService),\n    validarCep: cepService.validarCep.bind(cepService),\n    formatarCep: cepService.formatarCep.bind(cepService),\n    montarEnderecoCompleto: cepService.montarEnderecoCompleto.bind(cepService),\n    temCoordenadas: cepService.temCoordenadas.bind(cepService),\n    obterCoordenadas: cepService.obterCoordenadas.bind(cepService),\n  };\n}\n\n// Utilitários para CEP\nexport const cepUtils = {\n  /**\n   * Estados brasileiros com suas siglas\n   */\n  estados: {\n    'AC': 'Acre',\n    'AL': 'Alagoas', \n    'AP': 'Amapá',\n    'AM': 'Amazonas',\n    'BA': 'Bahia',\n    'CE': 'Ceará',\n    'DF': 'Distrito Federal',\n    'ES': 'Espírito Santo',\n    'GO': 'Goiás',\n    'MA': 'Maranhão',\n    'MT': 'Mato Grosso',\n    'MS': 'Mato Grosso do Sul',\n    'MG': 'Minas Gerais',\n    'PA': 'Pará',\n    'PB': 'Paraíba',\n    'PR': 'Paraná',\n    'PE': 'Pernambuco',\n    'PI': 'Piauí',\n    'RJ': 'Rio de Janeiro',\n    'RN': 'Rio Grande do Norte',\n    'RS': 'Rio Grande do Sul',\n    'RO': 'Rondônia',\n    'RR': 'Roraima',\n    'SC': 'Santa Catarina',\n    'SP': 'São Paulo',\n    'SE': 'Sergipe',\n    'TO': 'Tocantins'\n  },\n\n  /**\n   * Obter nome completo do estado\n   */\n  nomeCompleto(sigla: string): string {\n    return this.estados[sigla as keyof typeof this.estados] || sigla;\n  },\n\n  /**\n   * Calcular distância aproximada entre dois pontos (fórmula de Haversine)\n   */\n  calcularDistancia(\n    coord1: { lat: number; lng: number },\n    coord2: { lat: number; lng: number }\n  ): number {\n    const R = 6371; // Raio da Terra em km\n    const dLat = this.toRad(coord2.lat - coord1.lat);\n    const dLng = this.toRad(coord2.lng - coord1.lng);\n    \n    const a = \n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(this.toRad(coord1.lat)) * Math.cos(this.toRad(coord2.lat)) *\n      Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    \n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distância em km\n  },\n\n  /**\n   * Converter graus para radianos\n   */\n  toRad(valor: number): number {\n    return valor * (Math.PI / 180);\n  },\n\n  /**\n   * Gerar URL do Google Maps\n   */\n  gerarUrlMaps(endereco: EnderecoCep): string {\n    const enderecoCompleto = cepService.montarEnderecoCompleto(endereco);\n    return `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(enderecoCompleto)}`;\n  },\n\n  /**\n   * Verificar se CEP é de determinado estado\n   */\n  verificarEstado(cep: string, siglaEstado: string): boolean {\n    const cepLimpo = cep.replace(/\\D/g, '');\n    if (!cepService.validarCep(cepLimpo)) return false;\n    \n    // Faixas aproximadas de CEP por estado (simplificado)\n    const faixasCep: Record<string, string[]> = {\n      'SP': ['01000', '20000'],\n      'RJ': ['20000', '29000'],\n      'MG': ['30000', '40000'],\n      'BA': ['40000', '49000'],\n      'RS': ['90000', '100000'],\n      // Adicionar outras faixas conforme necessário\n    };\n    \n    const faixa = faixasCep[siglaEstado];\n    if (!faixa) return false;\n    \n    const cepNum = parseInt(cepLimpo.slice(0, 5));\n    const min = parseInt(faixa[0]);\n    const max = parseInt(faixa[1]);\n    \n    return cepNum >= min && cepNum < max;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/cnpj.ts"],"sourcesContent":["// Serviços de integração com CNPJ da BrasilAPI\n// Útil para validação de dados empresariais e busca de informações\n\nimport { EmpresaCnpj } from './types';\n\nexport interface CnpjValidacao {\n  valido: boolean;\n  formatado: string;\n  digitos: string;\n}\n\nclass CnpjService {\n  /**\n   * Busca dados completos da empresa por CNPJ\n   */\n  async buscarEmpresa(cnpj: string): Promise<EmpresaCnpj> {\n    const cnpjLimpo = cnpj.replace(/\\D/g, '');\n    \n    if (cnpjLimpo.length !== 14) {\n      throw new Error('CNPJ deve ter 14 dígitos');\n    }\n\n    try {\n      const response = await fetch(`/api/cnpj?cnpj=${cnpjLimpo}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar CNPJ');\n      }\n\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error('CNPJ não encontrado');\n      }\n\n      return data.empresa;\n    } catch (error) {\n      console.error('Erro ao buscar CNPJ:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Valida CNPJ usando algoritmo oficial\n   */\n  validarCnpj(cnpj: string): boolean {\n    const cnpjLimpo = cnpj.replace(/\\D/g, '');\n    \n    if (cnpjLimpo.length !== 14) return false;\n    \n    // Verifica se todos os dígitos são iguais\n    if (/^(\\d)\\1{13}$/.test(cnpjLimpo)) return false;\n    \n    // Calcula primeiro dígito verificador\n    let soma = 0;\n    let peso = 5;\n    \n    for (let i = 0; i < 12; i++) {\n      soma += parseInt(cnpjLimpo[i]) * peso;\n      peso = peso === 2 ? 9 : peso - 1;\n    }\n    \n    let digito1 = soma % 11;\n    digito1 = digito1 < 2 ? 0 : 11 - digito1;\n    \n    if (parseInt(cnpjLimpo[12]) !== digito1) return false;\n    \n    // Calcula segundo dígito verificador\n    soma = 0;\n    peso = 6;\n    \n    for (let i = 0; i < 13; i++) {\n      soma += parseInt(cnpjLimpo[i]) * peso;\n      peso = peso === 2 ? 9 : peso - 1;\n    }\n    \n    let digito2 = soma % 11;\n    digito2 = digito2 < 2 ? 0 : 11 - digito2;\n    \n    return parseInt(cnpjLimpo[13]) === digito2;\n  }\n\n  /**\n   * Formata CNPJ para exibição\n   */\n  formatarCnpj(cnpj: string): string {\n    const cnpjLimpo = cnpj.replace(/\\D/g, '');\n    if (cnpjLimpo.length !== 14) return cnpj;\n    \n    return cnpjLimpo.replace(\n      /^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/,\n      '$1.$2.$3/$4-$5'\n    );\n  }\n}\n\n// Singleton instance\nexport const cnpjService = new CnpjService();\nexport default cnpjService;\n"],"names":[],"mappings":"AAAA,+CAA+C;AAC/C,mEAAmE;;;;;AAUnE,MAAM;IACJ;;GAEC,GACD,MAAM,cAAc,IAAY,EAAwB;QACtD,MAAM,YAAY,KAAK,OAAO,CAAC,OAAO;QAEtC,IAAI,UAAU,MAAM,KAAK,IAAI;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,AAAC,kBAA2B,OAAV;YAE/C,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI;YACrC;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,KAAK,OAAO,EAAE;gBACjB,MAAM,IAAI,MAAM;YAClB;YAEA,OAAO,KAAK,OAAO;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM;QACR;IACF;IAEA;;GAEC,GACD,YAAY,IAAY,EAAW;QACjC,MAAM,YAAY,KAAK,OAAO,CAAC,OAAO;QAEtC,IAAI,UAAU,MAAM,KAAK,IAAI,OAAO;QAEpC,0CAA0C;QAC1C,IAAI,eAAe,IAAI,CAAC,YAAY,OAAO;QAE3C,sCAAsC;QACtC,IAAI,OAAO;QACX,IAAI,OAAO;QAEX,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;YAC3B,QAAQ,SAAS,SAAS,CAAC,EAAE,IAAI;YACjC,OAAO,SAAS,IAAI,IAAI,OAAO;QACjC;QAEA,IAAI,UAAU,OAAO;QACrB,UAAU,UAAU,IAAI,IAAI,KAAK;QAEjC,IAAI,SAAS,SAAS,CAAC,GAAG,MAAM,SAAS,OAAO;QAEhD,qCAAqC;QACrC,OAAO;QACP,OAAO;QAEP,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;YAC3B,QAAQ,SAAS,SAAS,CAAC,EAAE,IAAI;YACjC,OAAO,SAAS,IAAI,IAAI,OAAO;QACjC;QAEA,IAAI,UAAU,OAAO;QACrB,UAAU,UAAU,IAAI,IAAI,KAAK;QAEjC,OAAO,SAAS,SAAS,CAAC,GAAG,MAAM;IACrC;IAEA;;GAEC,GACD,aAAa,IAAY,EAAU;QACjC,MAAM,YAAY,KAAK,OAAO,CAAC,OAAO;QACtC,IAAI,UAAU,MAAM,KAAK,IAAI,OAAO;QAEpC,OAAO,UAAU,OAAO,CACtB,yCACA;IAEJ;AACF;AAGO,MAAM,cAAc,IAAI;uCAChB","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/cpf.ts"],"sourcesContent":["// Serviços de validação e formatação de CPF\n// Essencial para validação de dados de clientes\n\nexport interface CpfValidacao {\n  valido: boolean;\n  formatado: string;\n  limpo: string;\n  erro?: string;\n}\n\nexport interface CpfInfo {\n  cpf: string;\n  valido: boolean;\n  formatado: string;\n  estado?: string;\n  regiao?: string;\n  digito1: number;\n  digito2: number;\n}\n\nclass CpfService {\n  /**\n   * Valida CPF usando algoritmo oficial\n   */\n  validar(cpf: string): CpfValidacao {\n    const cpfLimpo = this.limparCpf(cpf);\n    \n    // Validações básicas\n    if (!cpfLimpo) {\n      return {\n        valido: false,\n        formatado: '',\n        limpo: '',\n        erro: 'CPF não informado'\n      };\n    }\n\n    if (cpfLimpo.length !== 11) {\n      return {\n        valido: false,\n        formatado: cpf,\n        limpo: cpfLimpo,\n        erro: 'CPF deve ter 11 dígitos'\n      };\n    }\n\n    // Verifica se todos os dígitos são iguais\n    if (this.todosDigitosIguais(cpfLimpo)) {\n      return {\n        valido: false,\n        formatado: this.formatarCpf(cpfLimpo),\n        limpo: cpfLimpo,\n        erro: 'CPF inválido: todos os dígitos são iguais'\n      };\n    }\n\n    // Validação dos dígitos verificadores\n    const valido = this.calcularDigitoVerificador(cpfLimpo);\n    \n    return {\n      valido,\n      formatado: this.formatarCpf(cpfLimpo),\n      limpo: cpfLimpo,\n      erro: valido ? undefined : 'CPF inválido: dígitos verificadores incorretos'\n    };\n  }\n\n  /**\n   * Formata CPF para exibição (000.000.000-00)\n   */\n  formatarCpf(cpf: string): string {\n    const cpfLimpo = this.limparCpf(cpf);\n    \n    if (cpfLimpo.length !== 11) {\n      return cpf; // Retorna como recebido se inválido\n    }\n\n    return cpfLimpo.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n\n  /**\n   * Remove formatação do CPF\n   */\n  limparCpf(cpf: string): string {\n    return cpf.replace(/\\D/g, '');\n  }\n\n  /**\n   * Gera CPF válido para testes (NUNCA usar em produção real)\n   */\n  gerarCpfTeste(): string {\n    // Gera os 9 primeiros dígitos\n    const primeiros9 = Array.from({length: 9}, () => \n      Math.floor(Math.random() * 10)\n    );\n\n    // Calcula os dígitos verificadores\n    const cpfParcial = primeiros9.join('');\n    const digito1 = this.calcularPrimeiroDigito(cpfParcial);\n    const digito2 = this.calcularSegundoDigito(cpfParcial + digito1);\n\n    const cpfCompleto = cpfParcial + digito1 + digito2;\n    return this.formatarCpf(cpfCompleto);\n  }\n\n  /**\n   * Obtém informações detalhadas do CPF\n   */\n  obterInfo(cpf: string): CpfInfo {\n    const validacao = this.validar(cpf);\n    const cpfLimpo = validacao.limpo;\n\n    if (!validacao.valido) {\n      return {\n        cpf: validacao.formatado,\n        valido: false,\n        formatado: validacao.formatado,\n        digito1: 0,\n        digito2: 0\n      };\n    }\n\n    // Determina estado baseado no 9º dígito (região fiscal)\n    const estadoInfo = this.obterEstadoPorDigito(parseInt(cpfLimpo[8]));\n\n    return {\n      cpf: cpfLimpo,\n      valido: true,\n      formatado: validacao.formatado,\n      estado: estadoInfo.estado,\n      regiao: estadoInfo.regiao,\n      digito1: parseInt(cpfLimpo[9]),\n      digito2: parseInt(cpfLimpo[10])\n    };\n  }\n\n  /**\n   * Verifica se todos os dígitos são iguais\n   */\n  private todosDigitosIguais(cpf: string): boolean {\n    return cpf.split('').every(digito => digito === cpf[0]);\n  }\n\n  /**\n   * Calcula e verifica os dígitos verificadores\n   */\n  private calcularDigitoVerificador(cpf: string): boolean {\n    const primeiros9 = cpf.substring(0, 9);\n    const digito1Calculado = this.calcularPrimeiroDigito(primeiros9);\n    const digito2Calculado = this.calcularSegundoDigito(primeiros9 + digito1Calculado);\n\n    const digito1Informado = parseInt(cpf[9]);\n    const digito2Informado = parseInt(cpf[10]);\n\n    return digito1Calculado === digito1Informado && digito2Calculado === digito2Informado;\n  }\n\n  /**\n   * Calcula o primeiro dígito verificador\n   */\n  private calcularPrimeiroDigito(primeiros9: string): number {\n    let soma = 0;\n    for (let i = 0; i < 9; i++) {\n      soma += parseInt(primeiros9[i]) * (10 - i);\n    }\n    \n    const resto = soma % 11;\n    return resto < 2 ? 0 : 11 - resto;\n  }\n\n  /**\n   * Calcula o segundo dígito verificador\n   */\n  private calcularSegundoDigito(primeiros10: string): number {\n    let soma = 0;\n    for (let i = 0; i < 10; i++) {\n      soma += parseInt(primeiros10[i]) * (11 - i);\n    }\n    \n    const resto = soma % 11;\n    return resto < 2 ? 0 : 11 - resto;\n  }\n\n  /**\n   * Determina estado baseado no dígito da região fiscal\n   */\n  private obterEstadoPorDigito(digito: number): { estado: string; regiao: string } {\n    const regioes = {\n      0: { estado: 'RS', regiao: 'Rio Grande do Sul' },\n      1: { estado: 'DF/GO/MS/TO', regiao: 'Distrito Federal, Goiás, Mato Grosso do Sul, Tocantins' },\n      2: { estado: 'AC/AM/AP/PA/RO/RR', regiao: 'Acre, Amazonas, Amapá, Pará, Rondônia, Roraima' },\n      3: { estado: 'CE/MA/PI', regiao: 'Ceará, Maranhão, Piauí' },\n      4: { estado: 'AL/PB/PE/RN', regiao: 'Alagoas, Paraíba, Pernambuco, Rio Grande do Norte' },\n      5: { estado: 'BA/SE', regiao: 'Bahia, Sergipe' },\n      6: { estado: 'MG', regiao: 'Minas Gerais' },\n      7: { estado: 'ES/RJ', regiao: 'Espírito Santo, Rio de Janeiro' },\n      8: { estado: 'SP', regiao: 'São Paulo' },\n      9: { estado: 'PR/SC', regiao: 'Paraná, Santa Catarina' }\n    };\n\n    return regioes[digito as keyof typeof regioes] || { estado: 'Desconhecido', regiao: 'Região não identificada' };\n  }\n\n  /**\n   * Validação em tempo real para formulários\n   */\n  validarEmTempoReal(cpf: string): {\n    status: 'vazio' | 'incompleto' | 'invalido' | 'valido';\n    mensagem: string;\n    formatado: string;\n  } {\n    const cpfLimpo = this.limparCpf(cpf);\n\n    if (!cpfLimpo) {\n      return {\n        status: 'vazio',\n        mensagem: 'Digite o CPF',\n        formatado: ''\n      };\n    }\n\n    if (cpfLimpo.length < 11) {\n      return {\n        status: 'incompleto',\n        mensagem: `${cpfLimpo.length}/11 dígitos`,\n        formatado: this.formatarCpf(cpfLimpo)\n      };\n    }\n\n    const validacao = this.validar(cpfLimpo);\n    \n    return {\n      status: validacao.valido ? 'valido' : 'invalido',\n      mensagem: validacao.valido ? 'CPF válido' : (validacao.erro || 'CPF inválido'),\n      formatado: validacao.formatado\n    };\n  }\n}\n\n// Singleton instance\nexport const cpfService = new CpfService();\n\n// Hook para React\nexport function useCpf() {\n  return {\n    validar: cpfService.validar.bind(cpfService),\n    formatarCpf: cpfService.formatarCpf.bind(cpfService),\n    limparCpf: cpfService.limparCpf.bind(cpfService),\n    obterInfo: cpfService.obterInfo.bind(cpfService),\n    validarEmTempoReal: cpfService.validarEmTempoReal.bind(cpfService),\n    gerarCpfTeste: cpfService.gerarCpfTeste.bind(cpfService)\n  };\n}\n\n// Utilitários adicionais\nexport const cpfUtils = {\n  /**\n   * Máscara para input de CPF\n   */\n  aplicarMascara(valor: string): string {\n    return cpfService.formatarCpf(valor);\n  },\n\n  /**\n   * Validação rápida (apenas boolean)\n   */\n  ehValido(cpf: string): boolean {\n    return cpfService.validar(cpf).valido;\n  },\n\n  /**\n   * Lista de CPFs inválidos conhecidos\n   */\n  cpfsInvalidosConhecidos: [\n    '00000000000', '11111111111', '22222222222', '33333333333',\n    '44444444444', '55555555555', '66666666666', '77777777777',\n    '88888888888', '99999999999', '12345678909', '11144477735'\n  ],\n\n  /**\n   * Verifica se é um CPF de teste/inválido conhecido\n   */\n  ehCpfTeste(cpf: string): boolean {\n    const cpfLimpo = cpfService.limparCpf(cpf);\n    return this.cpfsInvalidosConhecidos.includes(cpfLimpo);\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/fipe.ts"],"sourcesContent":["// Serviços de integração com a API FIPE da BrasilAPI\n// Essencial para consultoria veicular - consulta de preços de mercado\n\nexport interface MarcaFipe {\n  nome: string;\n  valor: string;\n}\n\nexport interface VeiculoFipe {\n  modelo: string;\n}\n\nexport interface PrecoFipe {\n  valor: string;\n  marca: string;\n  modelo: string;\n  anoModelo: number;\n  combustivel: string;\n  codigoFipe: string;\n  mesReferencia: string;\n  tipoVeiculo: number;\n  siglaCombustivel: string;\n  dataConsulta: string;\n}\n\nexport interface TabelaFipe {\n  codigo: number;\n  mes: string;\n}\n\nexport type TipoVeiculo = 'carros' | 'motos' | 'caminhoes';\n\nclass FipeService {\n  private readonly baseUrl = 'https://brasilapi.com.br/api/fipe';\n\n  /**\n   * Busca todas as marcas por tipo de veículo\n   */\n  async getMarcas(tipoVeiculo: TipoVeiculo, tabelaReferencia?: number): Promise<MarcaFipe[]> {\n    try {\n      const params = new URLSearchParams();\n      if (tabelaReferencia) {\n        params.append('tabela_referencia', tabelaReferencia.toString());\n      }\n      \n      const url = `/api/fipe/marcas/${tipoVeiculo}${params.toString() ? `?${params}` : ''}`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ao buscar marcas: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return data.marcas || [];\n    } catch (error) {\n      console.error('Erro na consulta de marcas FIPE:', error);\n      throw new Error('Falha ao consultar marcas na tabela FIPE');\n    }\n  }\n\n  /**\n   * Busca veículos por marca e tipo\n   */\n  async getVeiculos(\n    tipoVeiculo: TipoVeiculo, \n    codigoMarca: string, \n    tabelaReferencia?: number\n  ): Promise<VeiculoFipe[]> {\n    try {\n      const params = new URLSearchParams();\n      if (tabelaReferencia) {\n        params.append('tabela_referencia', tabelaReferencia.toString());\n      }\n      \n      const url = `/api/fipe/veiculo/${tipoVeiculo}/${codigoMarca}${params.toString() ? `?${params}` : ''}`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ao buscar veículos: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return Array.isArray(data.veiculos) ? data.veiculos : [data.veiculos];\n    } catch (error) {\n      console.error('Erro na consulta de veículos FIPE:', error);\n      throw new Error('Falha ao consultar veículos na tabela FIPE');\n    }\n  }\n\n  /**\n   * Consulta preço específico por código FIPE\n   */\n  async getPreco(codigoFipe: string, tabelaReferencia?: number): Promise<PrecoFipe[]> {\n    try {\n      const params = new URLSearchParams();\n      if (tabelaReferencia) {\n        params.append('tabela_referencia', tabelaReferencia.toString());\n      }\n      \n      const url = `/api/fipe/preco/${codigoFipe}${params.toString() ? `?${params}` : ''}`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ao buscar preço: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return Array.isArray(data.preco) ? data.preco : [data.preco];\n    } catch (error) {\n      console.error('Erro na consulta de preço FIPE:', error);\n      throw new Error('Falha ao consultar preço na tabela FIPE');\n    }\n  }\n\n  /**\n   * Lista todas as tabelas de referência disponíveis\n   */\n  async getTabelas(): Promise<TabelaFipe[]> {\n    try {\n      const url = `/api/fipe/tabelas`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ao buscar tabelas: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return data.tabelas || [];\n    } catch (error) {\n      console.error('Erro na consulta de tabelas FIPE:', error);\n      throw new Error('Falha ao consultar tabelas FIPE');\n    }\n  }\n\n  /**\n   * Busca completa: marca -> veículo -> preço\n   * Útil para fluxos completos de consulta\n   */\n  async getBuscaCompleta(\n    tipoVeiculo: TipoVeiculo,\n    nomeMarca: string,\n    nomeVeiculo: string\n  ): Promise<{\n    marca: MarcaFipe | null;\n    veiculo: VeiculoFipe | null;\n    preco: PrecoFipe[] | null;\n  }> {\n    try {\n      // 1. Buscar marcas\n      const marcas = await this.getMarcas(tipoVeiculo);\n      const marca = marcas.find(m => \n        m.nome.toLowerCase().includes(nomeMarca.toLowerCase())\n      );\n      \n      if (!marca) {\n        return { marca: null, veiculo: null, preco: null };\n      }\n\n      // 2. Buscar veículos da marca\n      const veiculos = await this.getVeiculos(tipoVeiculo, marca.valor);\n      const veiculo = veiculos.find(v => \n        v.modelo.toLowerCase().includes(nomeVeiculo.toLowerCase())\n      );\n      \n      if (!veiculo) {\n        return { marca, veiculo: null, preco: null };\n      }\n\n      // 3. Buscar preço do veículo\n      // Nota: A API Brasil não tem endpoint direto para preços por veículo específico\n      // Esta funcionalidade requer implementação personalizada\n      const preco = null; // await this.getPreco(veiculo.codigoFipe);\n      \n      return { marca, veiculo, preco };\n      \n    } catch (error) {\n      console.error('Erro na busca completa FIPE:', error);\n      throw new Error('Falha na consulta completa FIPE');\n    }\n  }\n\n  /**\n   * Formata valor monetário da FIPE\n   */\n  formatarValor(valor: string): string {\n    // Remove \"R$ \" e formata para número\n    const numeroLimpo = valor.replace(/[^\\d,]/g, '').replace(',', '.');\n    const numero = parseFloat(numeroLimpo);\n    \n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(numero);\n  }\n\n  /**\n   * Extrai apenas o valor numérico\n   */\n  extrairValorNumerico(valor: string): number {\n    const numeroLimpo = valor.replace(/[^\\d,]/g, '').replace(',', '.');\n    return parseFloat(numeroLimpo) || 0;\n  }\n}\n\n// Singleton instance\nexport const fipeService = new FipeService();\n\n// Hook personalizado para React (se usando)\nexport function useFipe() {\n  return {\n    getMarcas: fipeService.getMarcas.bind(fipeService),\n    getVeiculos: fipeService.getVeiculos.bind(fipeService),\n    getPreco: fipeService.getPreco.bind(fipeService),\n    getTabelas: fipeService.getTabelas.bind(fipeService),\n    getBuscaCompleta: fipeService.getBuscaCompleta.bind(fipeService),\n    formatarValor: fipeService.formatarValor.bind(fipeService),\n    extrairValorNumerico: fipeService.extrairValorNumerico.bind(fipeService),\n  };\n}\n\n// Utilitários adicionais\nexport const fipeUtils = {\n  /**\n   * Converte tipo de veículo para exibição\n   */\n  tipoVeiculoParaTexto(tipo: TipoVeiculo): string {\n    const tipos = {\n      carros: 'Automóveis',\n      motos: 'Motocicletas',\n      caminhoes: 'Caminhões'\n    };\n    return tipos[tipo];\n  },\n\n  /**\n   * Valida código FIPE\n   */\n  validarCodigoFipe(codigo: string): boolean {\n    // Código FIPE geralmente tem formato XXX-XXX-XX\n    const regex = /^\\d{3}-\\d{3}-\\d{2}$/;\n    return regex.test(codigo);\n  },\n\n  /**\n   * Calcula depreciação baseada no ano\n   */\n  calcularDepreciacao(valorAtual: number, anoVeiculo: number): {\n    valorEstimado: number;\n    percentualDepreciacao: number;\n  } {\n    const anoAtual = new Date().getFullYear();\n    const idadeVeiculo = anoAtual - anoVeiculo;\n    \n    // Estimativa simples: 10% ao ano (pode ser ajustada)\n    const percentualDepreciacao = Math.min(idadeVeiculo * 0.1, 0.8); // Max 80%\n    const valorEstimado = valorAtual * (1 - percentualDepreciacao);\n    \n    return {\n      valorEstimado: Math.round(valorEstimado),\n      percentualDepreciacao: Math.round(percentualDepreciacao * 100)\n    };\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/ddd.ts"],"sourcesContent":["// Serviços de DDD e validação de telefones\n// Útil para validação e formatação de números de telefone brasileiros\n\nexport interface InfoDDD {\n  ddd: string;\n  estado: string;\n  cidades: string[];\n  regiao: string;\n}\n\nexport interface TelefoneInfo {\n  numero: string;\n  ddd: string;\n  tipo: 'fixo' | 'celular';\n  estado: string;\n  valido: boolean;\n  formatado: string;\n}\n\nclass DddService {\n  private readonly baseUrl = 'https://brasilapi.com.br/api/ddd';\n\n  /**\n   * Busca informações de um DDD\n   */\n  async buscarDDD(ddd: string): Promise<InfoDDD> {\n    const dddLimpo = ddd.replace(/\\D/g, '');\n    \n    if (dddLimpo.length !== 2) {\n      throw new Error('DDD deve ter 2 dígitos');\n    }\n\n    try {\n      const response = await fetch(`/api/ddd?ddd=${dddLimpo}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar DDD');\n      }\n\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error('DDD não encontrado');\n      }\n\n      return data.ddd;\n    } catch (error) {\n      console.error('Erro ao buscar DDD:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Valida e analisa um número de telefone brasileiro\n   */\n  async analisarTelefone(telefone: string): Promise<TelefoneInfo> {\n    const numeroLimpo = telefone.replace(/\\D/g, '');\n    \n    if (numeroLimpo.length < 10 || numeroLimpo.length > 11) {\n      throw new Error('Telefone deve ter 10 ou 11 dígitos');\n    }\n\n    const ddd = numeroLimpo.slice(0, 2);\n    const numero = numeroLimpo.slice(2);\n    const tipo = numeroLimpo.length === 11 ? 'celular' : 'fixo';\n\n    try {\n      const infoDdd = await this.buscarDDD(ddd);\n      \n      return {\n        numero: numeroLimpo,\n        ddd,\n        tipo,\n        estado: infoDdd.estado,\n        valido: this.validarTelefone(numeroLimpo),\n        formatado: this.formatarTelefone(numeroLimpo)\n      };\n    } catch (error) {\n      return {\n        numero: numeroLimpo,\n        ddd,\n        tipo,\n        estado: 'Desconhecido',\n        valido: this.validarTelefone(numeroLimpo),\n        formatado: this.formatarTelefone(numeroLimpo)\n      };\n    }\n  }\n\n  /**\n   * Valida formato de telefone\n   */\n  validarTelefone(telefone: string): boolean {\n    const numeroLimpo = telefone.replace(/\\D/g, '');\n    \n    // Deve ter 10 ou 11 dígitos\n    if (numeroLimpo.length < 10 || numeroLimpo.length > 11) {\n      return false;\n    }\n\n    // DDD válido (11-99)\n    const ddd = parseInt(numeroLimpo.slice(0, 2));\n    if (ddd < 11 || ddd > 99) {\n      return false;\n    }\n\n    // Primeiro dígito do número não pode ser 0 ou 1\n    const primeiroDigito = parseInt(numeroLimpo[2]);\n    if (primeiroDigito <= 1) {\n      return false;\n    }\n\n    // Para celular (11 dígitos), deve começar com 9\n    if (numeroLimpo.length === 11 && numeroLimpo[2] !== '9') {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Formata telefone para exibição\n   */\n  formatarTelefone(telefone: string): string {\n    const numeroLimpo = telefone.replace(/\\D/g, '');\n    \n    if (numeroLimpo.length === 10) {\n      // Telefone fixo: (00) 0000-0000\n      return numeroLimpo.replace(/(\\d{2})(\\d{4})(\\d{4})/, '($1) $2-$3');\n    } else if (numeroLimpo.length === 11) {\n      // Celular: (00) 90000-0000\n      return numeroLimpo.replace(/(\\d{2})(\\d{5})(\\d{4})/, '($1) $2-$3');\n    }\n    \n    return telefone;\n  }\n\n  /**\n   * Lista todos os DDDs e seus estados\n   */\n  listarDDDs(): { [ddd: string]: string } {\n    return {\n      '11': 'SP', '12': 'SP', '13': 'SP', '14': 'SP', '15': 'SP', '16': 'SP', '17': 'SP', '18': 'SP', '19': 'SP',\n      '21': 'RJ', '22': 'RJ', '24': 'RJ',\n      '27': 'ES', '28': 'ES',\n      '31': 'MG', '32': 'MG', '33': 'MG', '34': 'MG', '35': 'MG', '37': 'MG', '38': 'MG',\n      '41': 'PR', '42': 'PR', '43': 'PR', '44': 'PR', '45': 'PR', '46': 'PR',\n      '47': 'SC', '48': 'SC', '49': 'SC',\n      '51': 'RS', '53': 'RS', '54': 'RS', '55': 'RS',\n      '61': 'DF', '62': 'GO', '64': 'GO',\n      '63': 'TO',\n      '65': 'MT', '66': 'MT',\n      '67': 'MS',\n      '68': 'AC',\n      '69': 'RO',\n      '71': 'BA', '73': 'BA', '74': 'BA', '75': 'BA', '77': 'BA',\n      '79': 'SE',\n      '81': 'PE', '87': 'PE',\n      '82': 'AL',\n      '83': 'PB',\n      '84': 'RN',\n      '85': 'CE', '88': 'CE',\n      '86': 'PI', '89': 'PI',\n      '91': 'PA', '93': 'PA', '94': 'PA',\n      '92': 'AM', '97': 'AM',\n      '95': 'RR',\n      '96': 'AP',\n      '98': 'MA', '99': 'MA'\n    };\n  }\n}\n\n// Singleton instance\nexport const dddService = new DddService();\n\n// Hook personalizado para React\nexport function useDdd() {\n  return {\n    buscarDDD: dddService.buscarDDD.bind(dddService),\n    analisarTelefone: dddService.analisarTelefone.bind(dddService),\n    validarTelefone: dddService.validarTelefone.bind(dddService),\n    formatarTelefone: dddService.formatarTelefone.bind(dddService),\n    listarDDDs: dddService.listarDDDs.bind(dddService),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/banco.ts"],"sourcesContent":["// Serviços de bancos e PIX\n// Útil para validação de dados bancários e PIX\n\nexport interface BancoInfo {\n  ispb: string;\n  name: string;\n  code: number;\n  fullName: string;\n}\n\nexport interface ParticipantePix {\n  ispb: string;\n  nome: string;\n  nome_reduzido: string;\n  modalidade_participacao: string;\n  tipo_participacao: string;\n  inicio_operacao: string;\n}\n\nexport interface ChavePixInfo {\n  tipo: 'cpf' | 'cnpj' | 'email' | 'telefone' | 'chave_aleatoria';\n  valida: boolean;\n  formatada: string;\n}\n\nclass BancoService {\n  private readonly baseUrl = 'https://brasilapi.com.br/api/banks';\n\n  /**\n   * Lista todos os bancos brasileiros\n   */\n  async listarBancos(): Promise<BancoInfo[]> {\n    try {\n      const response = await fetch('/api/bancos');\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar bancos');\n      }\n\n      const data = await response.json();\n      return data.bancos || [];\n    } catch (error) {\n      console.error('Erro ao buscar bancos:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Busca banco por código\n   */\n  async buscarBancoPorCodigo(codigo: string): Promise<BancoInfo> {\n    try {\n      const response = await fetch(`/api/bancos/${codigo}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Banco não encontrado');\n      }\n\n      const data = await response.json();\n      return data.banco;\n    } catch (error) {\n      console.error('Erro ao buscar banco:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Lista participantes do PIX\n   */\n  async listarParticipantesPix(): Promise<ParticipantePix[]> {\n    try {\n      const response = await fetch('/api/pix/participantes');\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar participantes PIX');\n      }\n\n      const data = await response.json();\n      return data.participantes || [];\n    } catch (error) {\n      console.error('Erro ao buscar participantes PIX:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Valida formato de chave PIX\n   */\n  validarChavePix(chave: string): ChavePixInfo {\n    const chaveLimpa = chave.trim();\n\n    // CPF\n    if (/^\\d{11}$/.test(chaveLimpa.replace(/\\D/g, '')) && chaveLimpa.replace(/\\D/g, '').length === 11) {\n      return {\n        tipo: 'cpf',\n        valida: this.validarCpf(chaveLimpa.replace(/\\D/g, '')),\n        formatada: this.formatarCpf(chaveLimpa.replace(/\\D/g, ''))\n      };\n    }\n\n    // CNPJ\n    if (/^\\d{14}$/.test(chaveLimpa.replace(/\\D/g, '')) && chaveLimpa.replace(/\\D/g, '').length === 14) {\n      return {\n        tipo: 'cnpj',\n        valida: this.validarCnpj(chaveLimpa.replace(/\\D/g, '')),\n        formatada: this.formatarCnpj(chaveLimpa.replace(/\\D/g, ''))\n      };\n    }\n\n    // Email\n    if (/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(chaveLimpa)) {\n      return {\n        tipo: 'email',\n        valida: true,\n        formatada: chaveLimpa.toLowerCase()\n      };\n    }\n\n    // Telefone\n    if (/^\\+55\\d{10,11}$/.test(chaveLimpa.replace(/\\D/g, '+55'))) {\n      const numeroLimpo = chaveLimpa.replace(/\\D/g, '');\n      if (numeroLimpo.length >= 12 && numeroLimpo.length <= 13) {\n        return {\n          tipo: 'telefone',\n          valida: true,\n          formatada: `+55${numeroLimpo.slice(-11)}`\n        };\n      }\n    }\n\n    // Chave aleatória (UUID)\n    if (/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(chaveLimpa)) {\n      return {\n        tipo: 'chave_aleatoria',\n        valida: true,\n        formatada: chaveLimpa.toLowerCase()\n      };\n    }\n\n    return {\n      tipo: 'chave_aleatoria',\n      valida: false,\n      formatada: chaveLimpa\n    };\n  }\n\n  /**\n   * Valida CPF (algoritmo básico)\n   */\n  private validarCpf(cpf: string): boolean {\n    if (cpf.length !== 11 || /^(\\d)\\1{10}$/.test(cpf)) return false;\n    \n    let soma = 0;\n    for (let i = 0; i < 9; i++) {\n      soma += parseInt(cpf[i]) * (10 - i);\n    }\n    \n    let digito1 = soma % 11;\n    digito1 = digito1 < 2 ? 0 : 11 - digito1;\n    \n    if (parseInt(cpf[9]) !== digito1) return false;\n    \n    soma = 0;\n    for (let i = 0; i < 10; i++) {\n      soma += parseInt(cpf[i]) * (11 - i);\n    }\n    \n    let digito2 = soma % 11;\n    digito2 = digito2 < 2 ? 0 : 11 - digito2;\n    \n    return parseInt(cpf[10]) === digito2;\n  }\n\n  /**\n   * Valida CNPJ (algoritmo básico)\n   */\n  private validarCnpj(cnpj: string): boolean {\n    if (cnpj.length !== 14 || /^(\\d)\\1{13}$/.test(cnpj)) return false;\n    \n    let soma = 0;\n    let peso = 5;\n    \n    for (let i = 0; i < 12; i++) {\n      soma += parseInt(cnpj[i]) * peso;\n      peso = peso === 2 ? 9 : peso - 1;\n    }\n    \n    let digito1 = soma % 11;\n    digito1 = digito1 < 2 ? 0 : 11 - digito1;\n    \n    if (parseInt(cnpj[12]) !== digito1) return false;\n    \n    soma = 0;\n    peso = 6;\n    \n    for (let i = 0; i < 13; i++) {\n      soma += parseInt(cnpj[i]) * peso;\n      peso = peso === 2 ? 9 : peso - 1;\n    }\n    \n    let digito2 = soma % 11;\n    digito2 = digito2 < 2 ? 0 : 11 - digito2;\n    \n    return parseInt(cnpj[13]) === digito2;\n  }\n\n  /**\n   * Formata CPF\n   */\n  private formatarCpf(cpf: string): string {\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n\n  /**\n   * Formata CNPJ\n   */\n  private formatarCnpj(cnpj: string): string {\n    return cnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\n  }\n\n  /**\n   * Lista dos principais bancos brasileiros\n   */\n  getBancosPrincipais(): BancoInfo[] {\n    return [\n      { ispb: '00000000', name: 'Banco do Brasil', code: 1, fullName: 'Banco do Brasil S.A.' },\n      { ispb: '00000208', name: 'BTG Pactual', code: 208, fullName: 'Banco BTG Pactual S.A.' },\n      { ispb: '00000237', name: 'Bradesco', code: 237, fullName: 'Banco Bradesco S.A.' },\n      { ispb: '00000341', name: 'Itaú', code: 341, fullName: 'Itaú Unibanco S.A.' },\n      { ispb: '00000104', name: 'Caixa Econômica', code: 104, fullName: 'Caixa Econômica Federal' },\n      { ispb: '00000260', name: 'Nu Pagamentos', code: 260, fullName: 'Nu Pagamentos S.A.' },\n      { ispb: '00000212', name: 'Banco Original', code: 212, fullName: 'Banco Original S.A.' },\n      { ispb: '00000290', name: 'PagSeguro', code: 290, fullName: 'PagSeguro Internet S.A.' },\n      { ispb: '00000323', name: 'Mercado Pago', code: 323, fullName: 'Mercado Pago S.A.' },\n      { ispb: '00000077', name: 'Banco Inter', code: 77, fullName: 'Banco Inter S.A.' }\n    ];\n  }\n}\n\n// Singleton instance\nexport const bancoService = new BancoService();\n\n// Hook personalizado para React\nexport function useBanco() {\n  return {\n    listarBancos: bancoService.listarBancos.bind(bancoService),\n    buscarBancoPorCodigo: bancoService.buscarBancoPorCodigo.bind(bancoService),\n    listarParticipantesPix: bancoService.listarParticipantesPix.bind(bancoService),\n    validarChavePix: bancoService.validarChavePix.bind(bancoService),\n    getBancosPrincipais: bancoService.getBancosPrincipais.bind(bancoService),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1227, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/feriado.ts"],"sourcesContent":["// Serviço de feriados nacionais brasileiros\n// Útil para sistemas de agendamento e calendário\n\nexport interface FeriadoNacional {\n  date: string;        // YYYY-MM-DD\n  name: string;        // Nome do feriado\n  type: string;        // Tipo (national, religious, etc.)\n}\n\nexport interface InfoFeriado {\n  data: Date;\n  nome: string;\n  tipo: string;\n  diaSemana: string;\n  proximoFeriado?: FeriadoNacional;\n  diasAteProximo?: number;\n  ehFimDeSemana: boolean;\n  ehPonteUtil: boolean;\n}\n\nclass FeriadoService {\n  private readonly feriadosFixos = [\n    { date: '01-01', name: 'Confraternização Universal', type: 'national' },\n    { date: '04-21', name: 'Tiradentes', type: 'national' },\n    { date: '05-01', name: 'Dia do Trabalhador', type: 'national' },\n    { date: '09-07', name: 'Independência do Brasil', type: 'national' },\n    { date: '10-12', name: 'Nossa Senhora Aparecida', type: 'religious' },\n    { date: '11-02', name: 'Finados', type: 'religious' },\n    { date: '11-15', name: 'Proclamação da República', type: 'national' },\n    { date: '12-25', name: 'Natal', type: 'religious' }\n  ];\n\n  private readonly diasSemana = [\n    'Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira',\n    'Quinta-feira', 'Sexta-feira', 'Sábado'\n  ];\n\n  /**\n   * Busca feriados de um ano específico\n   */\n  async buscarFeriados(ano: number): Promise<FeriadoNacional[]> {\n    try {\n      const response = await fetch(`/api/feriados/${ano}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar feriados');\n      }\n\n      const data = await response.json();\n      return data.feriados || [];\n    } catch (error) {\n      console.error('Erro ao buscar feriados:', error);\n      // Fallback para feriados fixos\n      return this.getFeriadosFixos(ano);\n    }\n  }\n\n  /**\n   * Verifica se uma data é feriado\n   */\n  async ehFeriado(data: Date | string): Promise<boolean> {\n    try {\n      const dataObj = typeof data === 'string' ? new Date(data) : data;\n      const ano = dataObj.getFullYear();\n      const feriados = await this.buscarFeriados(ano);\n      \n      const dataStr = dataObj.toISOString().split('T')[0];\n      return feriados.some(feriado => feriado.date === dataStr);\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Busca próximo feriado\n   */\n  async buscarProximoFeriado(dataReferencia: Date = new Date()): Promise<FeriadoNacional | null> {\n    try {\n      const ano = dataReferencia.getFullYear();\n      const feriados = await this.buscarFeriados(ano);\n      const feriadosProximoAno = await this.buscarFeriados(ano + 1);\n      \n      const todosFeriados = [...feriados, ...feriadosProximoAno];\n      const dataRef = dataReferencia.toISOString().split('T')[0];\n      \n      const feriadosFuturos = todosFeriados\n        .filter(feriado => feriado.date > dataRef)\n        .sort((a, b) => a.date.localeCompare(b.date));\n      \n      return feriadosFuturos[0] || null;\n    } catch (error) {\n      console.error('Erro ao buscar próximo feriado:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Calcula dias úteis entre duas datas\n   */\n  async calcularDiasUteis(dataInicio: Date, dataFim: Date): Promise<number> {\n    try {\n      let diasUteis = 0;\n      const dataAtual = new Date(dataInicio);\n      const ano = dataInicio.getFullYear();\n      const feriados = await this.buscarFeriados(ano);\n      const feriadosDatas = new Set(feriados.map(f => f.date));\n      \n      while (dataAtual <= dataFim) {\n        const diaSemana = dataAtual.getDay();\n        const dataStr = dataAtual.toISOString().split('T')[0];\n        \n        // Não é fim de semana e não é feriado\n        if (diaSemana !== 0 && diaSemana !== 6 && !feriadosDatas.has(dataStr)) {\n          diasUteis++;\n        }\n        \n        dataAtual.setDate(dataAtual.getDate() + 1);\n      }\n      \n      return diasUteis;\n    } catch (error) {\n      console.error('Erro ao calcular dias úteis:', error);\n      return 0;\n    }\n  }\n\n  /**\n   * Adiciona dias úteis a uma data\n   */\n  async adicionarDiasUteis(dataInicio: Date, diasUteis: number): Promise<Date> {\n    try {\n      const dataResultado = new Date(dataInicio);\n      const ano = dataInicio.getFullYear();\n      const feriados = await this.buscarFeriados(ano);\n      const feriadosDatas = new Set(feriados.map(f => f.date));\n      \n      let diasAdicionados = 0;\n      \n      while (diasAdicionados < diasUteis) {\n        dataResultado.setDate(dataResultado.getDate() + 1);\n        \n        const diaSemana = dataResultado.getDay();\n        const dataStr = dataResultado.toISOString().split('T')[0];\n        \n        // É dia útil\n        if (diaSemana !== 0 && diaSemana !== 6 && !feriadosDatas.has(dataStr)) {\n          diasAdicionados++;\n        }\n      }\n      \n      return dataResultado;\n    } catch (error) {\n      console.error('Erro ao adicionar dias úteis:', error);\n      return dataInicio;\n    }\n  }\n\n  /**\n   * Obtém informações detalhadas sobre uma data\n   */\n  async getInfoData(data: Date): Promise<InfoFeriado> {\n    try {\n      const ehFeriado = await this.ehFeriado(data);\n      const proximoFeriado = await this.buscarProximoFeriado(data);\n      const diaSemana = data.getDay();\n      const ehFimDeSemana = diaSemana === 0 || diaSemana === 6;\n      \n      let diasAteProximo = undefined;\n      if (proximoFeriado) {\n        const dataProximo = new Date(proximoFeriado.date);\n        const diffTime = dataProximo.getTime() - data.getTime();\n        diasAteProximo = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      }\n      \n      // Verifica se é ponte útil (feriado na segunda ou sexta)\n      const ehPonteUtil = ehFeriado && (diaSemana === 1 || diaSemana === 5);\n      \n      return {\n        data,\n        nome: ehFeriado ? 'Feriado' : this.diasSemana[diaSemana],\n        tipo: ehFeriado ? 'feriado' : 'dia_normal',\n        diaSemana: this.diasSemana[diaSemana],\n        proximoFeriado: proximoFeriado || undefined,\n        diasAteProximo,\n        ehFimDeSemana,\n        ehPonteUtil\n      };\n    } catch (error) {\n      console.error('Erro ao obter info da data:', error);\n      return {\n        data,\n        nome: this.diasSemana[data.getDay()],\n        tipo: 'dia_normal',\n        diaSemana: this.diasSemana[data.getDay()],\n        ehFimDeSemana: data.getDay() === 0 || data.getDay() === 6,\n        ehPonteUtil: false\n      };\n    }\n  }\n\n  /**\n   * Feriados fixos como fallback\n   */\n  private getFeriadosFixos(ano: number): FeriadoNacional[] {\n    return this.feriadosFixos.map(feriado => ({\n      date: `${ano}-${feriado.date}`,\n      name: feriado.name,\n      type: feriado.type\n    }));\n  }\n\n  /**\n   * Calcula páscoa para obter feriados móveis\n   */\n  private calcularPascoa(ano: number): Date {\n    const a = ano % 19;\n    const b = Math.floor(ano / 100);\n    const c = ano % 100;\n    const d = Math.floor(b / 4);\n    const e = b % 4;\n    const f = Math.floor((b + 8) / 25);\n    const g = Math.floor((b - f + 1) / 3);\n    const h = (19 * a + b - d - g + 15) % 30;\n    const i = Math.floor(c / 4);\n    const k = c % 4;\n    const l = (32 + 2 * e + 2 * i - h - k) % 7;\n    const m = Math.floor((a + 11 * h + 22 * l) / 451);\n    const mes = Math.floor((h + l - 7 * m + 114) / 31);\n    const dia = ((h + l - 7 * m + 114) % 31) + 1;\n    \n    return new Date(ano, mes - 1, dia);\n  }\n\n  /**\n   * Lista de feriados para planejamento\n   */\n  getFeriadosParaPlanejamento(ano: number): InfoFeriado[] {\n    return this.getFeriadosFixos(ano).map(feriado => ({\n      data: new Date(feriado.date),\n      nome: feriado.name,\n      tipo: feriado.type,\n      diaSemana: this.diasSemana[new Date(feriado.date).getDay()],\n      ehFimDeSemana: [0, 6].includes(new Date(feriado.date).getDay()),\n      ehPonteUtil: [1, 5].includes(new Date(feriado.date).getDay())\n    }));\n  }\n}\n\n// Singleton instance\nexport const feriadoService = new FeriadoService();\n\n// Hook personalizado para React\nexport function useFeriado() {\n  return {\n    buscarFeriados: feriadoService.buscarFeriados.bind(feriadoService),\n    ehFeriado: feriadoService.ehFeriado.bind(feriadoService),\n    buscarProximoFeriado: feriadoService.buscarProximoFeriado.bind(feriadoService),\n    calcularDiasUteis: feriadoService.calcularDiasUteis.bind(feriadoService),\n    adicionarDiasUteis: feriadoService.adicionarDiasUteis.bind(feriadoService),\n    getInfoData: feriadoService.getInfoData.bind(feriadoService),\n    getFeriadosParaPlanejamento: feriadoService.getFeriadosParaPlanejamento.bind(feriadoService),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1493, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/ibge.ts"],"sourcesContent":["// Serviços de dados do IBGE\n// Útil para localização e dados geográficos brasileiros\n\nexport interface Estado {\n  id: number;\n  sigla: string;\n  nome: string;\n  regiao: {\n    id: number;\n    sigla: string;\n    nome: string;\n  };\n}\n\nexport interface Cidade {\n  id: number;\n  nome: string;\n  microrregiao: {\n    id: number;\n    nome: string;\n    mesorregiao: {\n      id: number;\n      nome: string;\n      UF: {\n        id: number;\n        sigla: string;\n        nome: string;\n        regiao: {\n          id: number;\n          sigla: string;\n          nome: string;\n        };\n      };\n    };\n  };\n}\n\nexport interface LocalizacaoCompleta {\n  cidade: Cidade;\n  estado: Estado;\n  regiao: string;\n  codigoIbge: number;\n  populacao?: number;\n  area?: number;\n}\n\nclass IbgeService {\n  /**\n   * Lista todos os estados brasileiros\n   */\n  async listarEstados(): Promise<Estado[]> {\n    try {\n      const response = await fetch('/api/ibge/estados');\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar estados');\n      }\n\n      const data = await response.json();\n      return data.estados || this.getEstadosLocais();\n    } catch (error) {\n      console.error('Erro ao buscar estados:', error);\n      return this.getEstadosLocais();\n    }\n  }\n\n  /**\n   * Busca estado por ID ou sigla\n   */\n  async buscarEstado(identificador: string | number): Promise<Estado | null> {\n    try {\n      const response = await fetch(`/api/ibge/estados/${identificador}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Estado não encontrado');\n      }\n\n      const data = await response.json();\n      return data.estado;\n    } catch (error) {\n      console.error('Erro ao buscar estado:', error);\n      \n      // Fallback para busca local\n      const estados = this.getEstadosLocais();\n      const estado = estados.find(e => \n        e.sigla === String(identificador).toUpperCase() || \n        e.id === Number(identificador)\n      );\n      \n      return estado || null;\n    }\n  }\n\n  /**\n   * Lista cidades de um estado\n   */\n  async listarCidadesPorEstado(estadoId: number | string): Promise<Cidade[]> {\n    try {\n      const response = await fetch(`/api/ibge/estados/${estadoId}/cidades`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar cidades');\n      }\n\n      const data = await response.json();\n      return data.cidades || [];\n    } catch (error) {\n      console.error('Erro ao buscar cidades:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Busca cidade por nome ou ID\n   */\n  async buscarCidade(identificador: string | number, estadoId?: number | string): Promise<Cidade[]> {\n    try {\n      let url = `/api/ibge/cidades/${identificador}`;\n      if (estadoId) {\n        url += `?estado=${estadoId}`;\n      }\n      \n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Cidade não encontrada');\n      }\n\n      const data = await response.json();\n      return Array.isArray(data.cidades) ? data.cidades : [data.cidade];\n    } catch (error) {\n      console.error('Erro ao buscar cidade:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Busca completa por localização\n   */\n  async buscarLocalizacaoCompleta(cidade: string, estado?: string): Promise<LocalizacaoCompleta | null> {\n    try {\n      // Primeiro busca o estado se fornecido\n      let estadoObj: Estado | null = null;\n      if (estado) {\n        estadoObj = await this.buscarEstado(estado);\n      }\n\n      // Busca a cidade\n      const cidades = estadoObj \n        ? await this.listarCidadesPorEstado(estadoObj.id)\n        : await this.buscarCidade(cidade);\n\n      const cidadeEncontrada = cidades.find(c => \n        c.nome.toLowerCase().includes(cidade.toLowerCase())\n      );\n\n      if (!cidadeEncontrada) return null;\n\n      // Busca o estado da cidade se não foi fornecido\n      if (!estadoObj) {\n        estadoObj = await this.buscarEstado(cidadeEncontrada.microrregiao.mesorregiao.UF.id);\n      }\n\n      return {\n        cidade: cidadeEncontrada,\n        estado: estadoObj!,\n        regiao: estadoObj!.regiao.nome,\n        codigoIbge: cidadeEncontrada.id\n      };\n    } catch (error) {\n      console.error('Erro ao buscar localização completa:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Valida se cidade pertence ao estado\n   */\n  async validarCidadeEstado(cidade: string, estado: string): Promise<boolean> {\n    try {\n      const localizacao = await this.buscarLocalizacaoCompleta(cidade, estado);\n      return localizacao !== null;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Lista cidades por região\n   */\n  async listarCidadesPorRegiao(regiao: string): Promise<Cidade[]> {\n    try {\n      const estados = await this.listarEstados();\n      const estadosRegiao = estados.filter(e => \n        e.regiao.nome.toLowerCase() === regiao.toLowerCase() ||\n        e.regiao.sigla.toLowerCase() === regiao.toLowerCase()\n      );\n\n      const todasCidades: Cidade[] = [];\n      \n      for (const estado of estadosRegiao) {\n        const cidades = await this.listarCidadesPorEstado(estado.id);\n        todasCidades.push(...cidades);\n      }\n\n      return todasCidades;\n    } catch (error) {\n      console.error('Erro ao buscar cidades por região:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Busca cidades próximas (por nome similar)\n   */\n  buscarCidadesSimilares(termo: string, cidades: Cidade[]): Cidade[] {\n    const termoLower = termo.toLowerCase();\n    \n    return cidades\n      .filter(cidade => cidade.nome.toLowerCase().includes(termoLower))\n      .sort((a, b) => {\n        // Prioriza matches exatos\n        const aExato = a.nome.toLowerCase() === termoLower;\n        const bExato = b.nome.toLowerCase() === termoLower;\n        \n        if (aExato && !bExato) return -1;\n        if (!aExato && bExato) return 1;\n        \n        // Depois por início da palavra\n        const aInicio = a.nome.toLowerCase().startsWith(termoLower);\n        const bInicio = b.nome.toLowerCase().startsWith(termoLower);\n        \n        if (aInicio && !bInicio) return -1;\n        if (!aInicio && bInicio) return 1;\n        \n        // Por fim, alfabética\n        return a.nome.localeCompare(b.nome);\n      })\n      .slice(0, 10); // Limita a 10 resultados\n  }\n\n  /**\n   * Estados brasileiros como fallback\n   */\n  private getEstadosLocais(): Estado[] {\n    return [\n      { id: 11, sigla: 'RO', nome: 'Rondônia', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 12, sigla: 'AC', nome: 'Acre', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 13, sigla: 'AM', nome: 'Amazonas', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 14, sigla: 'RR', nome: 'Roraima', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 15, sigla: 'PA', nome: 'Pará', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 16, sigla: 'AP', nome: 'Amapá', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 17, sigla: 'TO', nome: 'Tocantins', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 21, sigla: 'MA', nome: 'Maranhão', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 22, sigla: 'PI', nome: 'Piauí', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 23, sigla: 'CE', nome: 'Ceará', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 24, sigla: 'RN', nome: 'Rio Grande do Norte', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 25, sigla: 'PB', nome: 'Paraíba', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 26, sigla: 'PE', nome: 'Pernambuco', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 27, sigla: 'AL', nome: 'Alagoas', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 28, sigla: 'SE', nome: 'Sergipe', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 29, sigla: 'BA', nome: 'Bahia', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 31, sigla: 'MG', nome: 'Minas Gerais', regiao: { id: 3, sigla: 'SE', nome: 'Sudeste' } },\n      { id: 32, sigla: 'ES', nome: 'Espírito Santo', regiao: { id: 3, sigla: 'SE', nome: 'Sudeste' } },\n      { id: 33, sigla: 'RJ', nome: 'Rio de Janeiro', regiao: { id: 3, sigla: 'SE', nome: 'Sudeste' } },\n      { id: 35, sigla: 'SP', nome: 'São Paulo', regiao: { id: 3, sigla: 'SE', nome: 'Sudeste' } },\n      { id: 41, sigla: 'PR', nome: 'Paraná', regiao: { id: 4, sigla: 'S', nome: 'Sul' } },\n      { id: 42, sigla: 'SC', nome: 'Santa Catarina', regiao: { id: 4, sigla: 'S', nome: 'Sul' } },\n      { id: 43, sigla: 'RS', nome: 'Rio Grande do Sul', regiao: { id: 4, sigla: 'S', nome: 'Sul' } },\n      { id: 50, sigla: 'MS', nome: 'Mato Grosso do Sul', regiao: { id: 5, sigla: 'CO', nome: 'Centro-Oeste' } },\n      { id: 51, sigla: 'MT', nome: 'Mato Grosso', regiao: { id: 5, sigla: 'CO', nome: 'Centro-Oeste' } },\n      { id: 52, sigla: 'GO', nome: 'Goiás', regiao: { id: 5, sigla: 'CO', nome: 'Centro-Oeste' } },\n      { id: 53, sigla: 'DF', nome: 'Distrito Federal', regiao: { id: 5, sigla: 'CO', nome: 'Centro-Oeste' } }\n    ];\n  }\n\n  /**\n   * Regiões brasileiras\n   */\n  getRegioes() {\n    return [\n      { id: 1, sigla: 'N', nome: 'Norte' },\n      { id: 2, sigla: 'NE', nome: 'Nordeste' },\n      { id: 3, sigla: 'SE', nome: 'Sudeste' },\n      { id: 4, sigla: 'S', nome: 'Sul' },\n      { id: 5, sigla: 'CO', nome: 'Centro-Oeste' }\n    ];\n  }\n\n  /**\n   * Autocomplete para cidades\n   */\n  async autocompleteCidades(termo: string, estadoId?: number | string): Promise<string[]> {\n    try {\n      let cidades: Cidade[] = [];\n      \n      if (estadoId) {\n        cidades = await this.listarCidadesPorEstado(estadoId);\n      } else {\n        // Busca em alguns estados principais se não especificado\n        const estadosPrincipais = [35, 33, 31, 41, 43]; // SP, RJ, MG, PR, RS\n        for (const id of estadosPrincipais) {\n          const cidadesEstado = await this.listarCidadesPorEstado(id);\n          cidades.push(...cidadesEstado);\n        }\n      }\n      \n      return this.buscarCidadesSimilares(termo, cidades)\n        .map(cidade => cidade.nome)\n        .slice(0, 5);\n    } catch (error) {\n      console.error('Erro no autocomplete:', error);\n      return [];\n    }\n  }\n}\n\n// Singleton instance\nexport const ibgeService = new IbgeService();\n\n// Hook personalizado para React\nexport function useIbge() {\n  return {\n    listarEstados: ibgeService.listarEstados.bind(ibgeService),\n    buscarEstado: ibgeService.buscarEstado.bind(ibgeService),\n    listarCidadesPorEstado: ibgeService.listarCidadesPorEstado.bind(ibgeService),\n    buscarCidade: ibgeService.buscarCidade.bind(ibgeService),\n    buscarLocalizacaoCompleta: ibgeService.buscarLocalizacaoCompleta.bind(ibgeService),\n    validarCidadeEstado: ibgeService.validarCidadeEstado.bind(ibgeService),\n    listarCidadesPorRegiao: ibgeService.listarCidadesPorRegiao.bind(ibgeService),\n    buscarCidadesSimilares: ibgeService.buscarCidadesSimilares.bind(ibgeService),\n    autocompleteCidades: ibgeService.autocompleteCidades.bind(ibgeService),\n    getRegioes: ibgeService.getRegioes.bind(ibgeService),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/lib/brasilapi/index.ts"],"sourcesContent":["// Integração unificada com Brasil API - Todos os serviços essenciais\n// Centraliza todos os serviços de dados brasileiros necessários para o sistema\n\nimport { cepService } from './cep';\nimport { cnpjService } from './cnpj';\nimport { cpfService, type CpfInfo, type CpfValidacao } from './cpf';\nimport { fipeService, type PrecoFipe, type MarcaFipe, type VeiculoFipe, type TipoVeiculo } from './fipe';\nimport { dddService } from './ddd';\nimport { bancoService } from './banco';\nimport { feriadoService } from './feriado';\nimport { ibgeService } from './ibge';\nimport { \n  type EnderecoCep, \n  type EmpresaCnpj \n} from './types';\n\n// Tipos unificados para respostas\nexport interface ValidacaoCompleta {\n  tipo: 'cep' | 'cpf' | 'cnpj';\n  valido: boolean;\n  formatado: string;\n  dados?: any;\n  erro?: string;\n}\n\nexport interface ConsultaVeicular {\n  marca: MarcaFipe | null;\n  veiculo: VeiculoFipe | null;\n  preco: PrecoFipe[] | null;\n  valorFormatado?: string;\n  valorNumerico?: number;\n}\n\nexport interface DadosCliente {\n  cpf?: CpfInfo;\n  cnpj?: EmpresaCnpj;\n  endereco?: EnderecoCep;\n  valido: boolean;\n  erros: string[];\n}\n\nclass BrasilApiService {\n  // Instâncias dos serviços\n  public readonly cep = cepService;\n  public readonly cnpj = cnpjService;\n  public readonly cpf = cpfService;\n  public readonly fipe = fipeService;\n  public readonly ddd = dddService;\n  public readonly banco = bancoService;\n  public readonly feriado = feriadoService;\n  public readonly ibge = ibgeService;\n\n  /**\n   * Validação unificada - detecta tipo automaticamente\n   */\n  async validarDado(valor: string): Promise<ValidacaoCompleta> {\n    const valorLimpo = valor.replace(/\\D/g, '');\n\n    try {\n      // Detecta tipo baseado no comprimento\n      if (valorLimpo.length === 8) {\n        // CEP\n        try {\n          const resultado = await this.cep.buscarCep(valor);\n          return {\n            tipo: 'cep',\n            valido: true,\n            formatado: this.cep.formatarCep(valor),\n            dados: resultado\n          };\n        } catch (error) {\n          return {\n            tipo: 'cep',\n            valido: false,\n            formatado: this.cep.formatarCep(valor),\n            erro: `Erro ao buscar CEP: ${error instanceof Error ? error.message : 'Erro desconhecido'}`\n          };\n        }\n      } else if (valorLimpo.length === 11) {\n        // CPF\n        const resultado = this.cpf.validar(valor);\n        return {\n          tipo: 'cpf',\n          valido: resultado.valido,\n          formatado: resultado.formatado,\n          dados: resultado.valido ? this.cpf.obterInfo(valor) : null,\n          erro: resultado.erro\n        };\n      } else if (valorLimpo.length === 14) {\n        // CNPJ\n        const valido = this.cnpj.validarCnpj(valor);\n        const formatado = this.cnpj.formatarCnpj(valor);\n        \n        if (valido) {\n          try {\n            const empresa = await this.cnpj.buscarEmpresa(valor);\n            return {\n              tipo: 'cnpj',\n              valido: true,\n              formatado,\n              dados: empresa\n            };\n          } catch (error) {\n            return {\n              tipo: 'cnpj',\n              valido: false,\n              formatado,\n              erro: `Erro ao buscar dados da empresa: ${error instanceof Error ? error.message : 'Erro desconhecido'}`\n            };\n          }\n        } else {\n          return {\n            tipo: 'cnpj',\n            valido: false,\n            formatado,\n            erro: 'CNPJ inválido'\n          };\n        }\n      } else {\n        return {\n          tipo: 'cep', // default\n          valido: false,\n          formatado: valor,\n          erro: 'Formato não reconhecido. Use CEP (8 dígitos), CPF (11 dígitos) ou CNPJ (14 dígitos)'\n        };\n      }\n    } catch (error) {\n      return {\n        tipo: 'cep', // default\n        valido: false,\n        formatado: valor,\n        erro: `Erro na validação: ${error instanceof Error ? error.message : 'Erro desconhecido'}`\n      };\n    }\n  }\n\n  /**\n   * Validação completa de dados do cliente\n   */\n  async validarCliente(dados: {\n    cpf?: string;\n    cnpj?: string;\n    cep?: string;\n  }): Promise<DadosCliente> {\n    const resultado: DadosCliente = {\n      valido: true,\n      erros: []\n    };\n\n    try {\n      // Validar CPF se fornecido\n      if (dados.cpf) {\n        const cpfValidacao = this.cpf.validar(dados.cpf);\n        if (cpfValidacao.valido) {\n          resultado.cpf = this.cpf.obterInfo(dados.cpf);\n        } else {\n          resultado.erros.push(`CPF: ${cpfValidacao.erro}`);\n          resultado.valido = false;\n        }\n      }\n\n      // Validar CNPJ se fornecido\n      if (dados.cnpj) {\n        const cnpjValido = this.cnpj.validarCnpj(dados.cnpj);\n        if (cnpjValido) {\n          try {\n            const empresaInfo = await this.cnpj.buscarEmpresa(dados.cnpj);\n            resultado.cnpj = empresaInfo;\n          } catch (error) {\n            resultado.erros.push(`CNPJ: Erro ao buscar dados da empresa`);\n            resultado.valido = false;\n          }\n        } else {\n          resultado.erros.push(`CNPJ: CNPJ inválido`);\n          resultado.valido = false;\n        }\n      }\n\n      // Validar CEP se fornecido\n      if (dados.cep) {\n        try {\n          const cepInfo = await this.cep.buscarCep(dados.cep);\n          // Mapear CepResponse para EnderecoCep\n          const enderecoMapeado: EnderecoCep = {\n            cep: cepInfo.cep,\n            state: cepInfo.uf,\n            city: cepInfo.cidade,\n            neighborhood: cepInfo.bairro,\n            street: cepInfo.logradouro,\n            service: 'brasilapi'\n          };\n          resultado.endereco = enderecoMapeado;\n        } catch (error) {\n          resultado.erros.push(`CEP: Erro ao buscar endereço`);\n          resultado.valido = false;\n        }\n      }\n\n    } catch (error) {\n      resultado.erros.push(`Erro na validação: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n      resultado.valido = false;\n    }\n\n    return resultado;\n  }\n\n  /**\n   * Consulta completa de veículo\n   */\n  async consultarVeiculo(\n    tipoVeiculo: TipoVeiculo,\n    marca: string,\n    modelo: string\n  ): Promise<ConsultaVeicular> {\n    try {\n      const resultado = await this.fipe.getBuscaCompleta(tipoVeiculo, marca, modelo);\n      \n      let valorFormatado: string | undefined;\n      let valorNumerico: number | undefined;\n\n      if (resultado.preco && resultado.preco.length > 0) {\n        const primeiroPreco = resultado.preco[0];\n        valorFormatado = this.fipe.formatarValor(primeiroPreco.valor);\n        valorNumerico = this.fipe.extrairValorNumerico(primeiroPreco.valor);\n      }\n\n      return {\n        ...resultado,\n        valorFormatado,\n        valorNumerico\n      };\n    } catch (error) {\n      console.error('Erro na consulta veicular:', error);\n      return {\n        marca: null,\n        veiculo: null,\n        preco: null\n      };\n    }\n  }\n\n  /**\n   * Autocompletar endereço baseado no CEP\n   */\n  async autocompletarEndereco(cep: string): Promise<{\n    success: boolean;\n    endereco?: {\n      logradouro: string;\n      bairro: string;\n      cidade: string;\n      estado: string;\n      cep: string;\n    };\n    erro?: string;\n  }> {\n    try {\n      // Timeout de 8 segundos para evitar esperas muito longas\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 8000);\n      \n      const cepInfo = await this.cep.buscarCep(cep);\n      clearTimeout(timeoutId);\n      \n      return {\n        success: true,\n        endereco: {\n          logradouro: cepInfo.logradouro || '',\n          bairro: cepInfo.bairro || '',\n          cidade: cepInfo.cidade || '',\n          estado: cepInfo.uf || '',\n          cep: cepInfo.cep || ''\n        }\n      };\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Erro desconhecido';\n      return {\n        success: false,\n        erro: errorMessage.includes('abort') ? \n          'Serviço temporariamente indisponível. Tente novamente.' :\n          `Erro ao buscar endereço: ${errorMessage}`\n      };\n    }\n  }\n\n  /**\n   * Buscar dados da empresa por CNPJ\n   */\n  async buscarEmpresaPorCnpj(cnpj: string): Promise<{\n    success: boolean;\n    empresa?: EmpresaCnpj;\n    erro?: string;\n  }> {\n    try {\n      // Primeiro valida o CNPJ\n      const valido = this.cnpj.validarCnpj(cnpj);\n      if (!valido) {\n        return {\n          success: false,\n          erro: 'CNPJ inválido'\n        };\n      }\n\n      // Busca dados da empresa\n      const empresa = await this.cnpj.buscarEmpresa(cnpj);\n      return {\n        success: true,\n        empresa\n      };\n    } catch (error) {\n      return {\n        success: false,\n        erro: `Erro ao buscar empresa: ${error instanceof Error ? error.message : 'Erro desconhecido'}`\n      };\n    }\n  }\n\n  /**\n   * Formatadores unificados\n   */\n  formatadores = {\n    cpf: (cpf: string) => this.cpf.formatarCpf(cpf),\n    cnpj: (cnpj: string) => this.cnpj.formatarCnpj(cnpj),\n    cep: (cep: string) => this.cep.formatarCep(cep),\n    valor: (valor: string) => this.fipe.formatarValor(valor),\n    \n    // Limpar formatação\n    limpar: (valor: string) => valor.replace(/\\D/g, ''),\n    \n    // Detectar tipo de documento\n    detectarTipo: (valor: string): 'cpf' | 'cnpj' | 'cep' | 'desconhecido' => {\n      const limpo = valor.replace(/\\D/g, '');\n      if (limpo.length === 11) return 'cpf';\n      if (limpo.length === 14) return 'cnpj';\n      if (limpo.length === 8) return 'cep';\n      return 'desconhecido';\n    }\n  };\n\n  /**\n   * Validadores rápidos (apenas boolean)\n   */\n  validadores = {\n    cpf: (cpf: string) => this.cpf.validar(cpf).valido,\n    cep: async (cep: string) => {\n      try {\n        await this.cep.buscarCep(cep);\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    cnpj: (cnpj: string) => this.cnpj.validarCnpj(cnpj)\n  };\n\n  /**\n   * Utilitários para formulários\n   */\n  formularios = {\n    // Máscaras para inputs\n    mascaraCpf: (valor: string) => this.cpf.formatarCpf(valor),\n    mascaraCnpj: (valor: string) => this.cnpj.formatarCnpj(valor),\n    mascaraCep: (valor: string) => this.cep.formatarCep(valor),\n    \n    // Validação em tempo real\n    validarCpfTempoReal: (cpf: string) => this.cpf.validarEmTempoReal(cpf),\n    \n    // Auto-formatação baseada no tipo detectado\n    autoFormatar: (valor: string): string => {\n      const tipo = this.formatadores.detectarTipo(valor);\n      switch (tipo) {\n        case 'cpf': return this.formatadores.cpf(valor);\n        case 'cnpj': return this.formatadores.cnpj(valor);\n        case 'cep': return this.formatadores.cep(valor);\n        default: return valor;\n      }\n    }\n  };\n}\n\n// Singleton instance\nexport const brasilApi = new BrasilApiService();\n\n// Hook para React\nexport function useBrasilApi() {\n  return {\n    // Serviços individuais\n    cep: brasilApi.cep,\n    cnpj: brasilApi.cnpj,\n    cpf: brasilApi.cpf,\n    fipe: brasilApi.fipe,\n    ddd: brasilApi.ddd,\n    banco: brasilApi.banco,\n    feriado: brasilApi.feriado,\n    ibge: brasilApi.ibge,\n    \n    // Serviços unificados\n    validarDado: brasilApi.validarDado.bind(brasilApi),\n    validarCliente: brasilApi.validarCliente.bind(brasilApi),\n    consultarVeiculo: brasilApi.consultarVeiculo.bind(brasilApi),\n    autocompletarEndereco: brasilApi.autocompletarEndereco.bind(brasilApi),\n    buscarEmpresaPorCnpj: brasilApi.buscarEmpresaPorCnpj.bind(brasilApi),\n    \n    // Utilitários\n    formatadores: brasilApi.formatadores,\n    validadores: brasilApi.validadores,\n    formularios: brasilApi.formularios\n  };\n}\n\n// Exportar tipos principais\nexport type {\n  CpfInfo,\n  CpfValidacao,\n  EnderecoCep,\n  EmpresaCnpj,\n  PrecoFipe,\n  MarcaFipe,\n  VeiculoFipe,\n  TipoVeiculo\n};\n\n// Exportar serviços individuais também\nexport { cepService, cnpjService, cpfService, fipeService, dddService, bancoService, feriadoService, ibgeService };\n\n// Utilitários globais\nexport const brasilApiUtils = {\n  // Constantes úteis\n  TIPOS_VEICULO: ['carros', 'motos', 'caminhoes'] as const,\n  ESTADOS_BRASIL: [\n    'AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',\n    'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN',\n    'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'\n  ],\n  \n  // Validações combinadas\n  validarDocumentoCompleto: async (documento: string): Promise<ValidacaoCompleta> => {\n    return brasilApi.validarDado(documento);\n  },\n  \n  // Formatação inteligente\n  formatarDocumento: (documento: string): string => {\n    return brasilApi.formularios.autoFormatar(documento);\n  },\n  \n  // Verificar se valor é um documento brasileiro válido\n  ehDocumentoBrasileiroValido: async (documento: string): Promise<boolean> => {\n    const resultado = await brasilApi.validarDado(documento);\n    return resultado.valido;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2415, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/components/ConsultaFipe.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Search, Car, DollarSign, Calendar, Fuel, Info, Loader, AlertCircle } from 'lucide-react';\nimport { fipeService, type MarcaFipe, type VeiculoFipe, type PrecoFipe, type TipoVeiculo } from '@/lib/brasilapi';\n\ninterface ConsultaFipeProps {\n  onVeiculoSelecionado?: (dados: {\n    marca: string;\n    modelo: string;\n    preco: string;\n    ano: number;\n    combustivel: string;\n  }) => void;\n  className?: string;\n}\n\ninterface EstadoConsulta {\n  status: 'idle' | 'loading' | 'success' | 'error';\n  erro?: string;\n}\n\nexport default function ConsultaFipe({ onVeiculoSelecionado, className = '' }: ConsultaFipeProps) {\n  // Estados principais\n  const [tipoVeiculo, setTipoVeiculo] = useState<TipoVeiculo>('carros');\n  const [marcas, setMarcas] = useState<MarcaFipe[]>([]);\n  const [marcaSelecionada, setMarcaSelecionada] = useState<string>('');\n  const [veiculos, setVeiculos] = useState<VeiculoFipe[]>([]);\n  const [veiculoSelecionado, setVeiculoSelecionado] = useState<string>('');\n  const [precos, setPrecos] = useState<PrecoFipe[]>([]);\n  \n  // Estados de controle\n  const [estadoMarcas, setEstadoMarcas] = useState<EstadoConsulta>({ status: 'idle' });\n  const [estadoVeiculos, setEstadoVeiculos] = useState<EstadoConsulta>({ status: 'idle' });\n  const [estadoPrecos, setEstadoPrecos] = useState<EstadoConsulta>({ status: 'idle' });\n  \n  // Buscar marcas quando tipo de veículo muda\n  useEffect(() => {\n    buscarMarcas();\n  }, [tipoVeiculo]);\n\n  // Buscar veículos quando marca muda\n  useEffect(() => {\n    if (marcaSelecionada) {\n      buscarVeiculos();\n    } else {\n      setVeiculos([]);\n      setVeiculoSelecionado('');\n      setPrecos([]);\n    }\n  }, [marcaSelecionada]);\n\n  // Buscar preços quando veículo muda\n  useEffect(() => {\n    if (veiculoSelecionado) {\n      buscarPrecos();\n    } else {\n      setPrecos([]);\n    }\n  }, [veiculoSelecionado]);\n\n  const buscarMarcas = async () => {\n    setEstadoMarcas({ status: 'loading' });\n    setMarcaSelecionada('');\n    \n    try {\n      const resultados = await fipeService.getMarcas(tipoVeiculo);\n      setMarcas(resultados);\n      setEstadoMarcas({ status: 'success' });\n    } catch (error) {\n      console.error('Erro ao buscar marcas:', error);\n      setEstadoMarcas({ \n        status: 'error', \n        erro: 'Erro ao carregar marcas. Tente novamente.' \n      });\n      setMarcas([]);\n    }\n  };\n\n  const buscarVeiculos = async () => {\n    if (!marcaSelecionada) return;\n    \n    setEstadoVeiculos({ status: 'loading' });\n    setVeiculoSelecionado('');\n    \n    try {\n      const resultados = await fipeService.getVeiculos(tipoVeiculo, marcaSelecionada);\n      setVeiculos(resultados);\n      setEstadoVeiculos({ status: 'success' });\n    } catch (error) {\n      console.error('Erro ao buscar veículos:', error);\n      setEstadoVeiculos({ \n        status: 'error', \n        erro: 'Erro ao carregar veículos. Tente novamente.' \n      });\n      setVeiculos([]);\n    }\n  };\n\n  const buscarPrecos = async () => {\n    if (!veiculoSelecionado || !marcaSelecionada) return;\n    \n    setEstadoPrecos({ status: 'loading' });\n    \n    try {\n      console.log('Buscando preços FIPE reais para:', { \n        tipo: tipoVeiculo, \n        marca: marcaSelecionada, \n        modelo: veiculoSelecionado \n      });\n      \n      const response = await fetch('/api/fipe/precos-reais', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          tipoVeiculo: tipoVeiculo,\n          codigoMarca: marcaSelecionada,\n          modeloNome: veiculoSelecionado\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro na consulta FIPE');\n      }\n\n      const data = await response.json();\n      \n      if (data.success && data.precos?.length > 0) {\n        // Mapear dados da FIPE oficial para o formato esperado\n        const precosFormatados = data.precos.map((preco: any) => ({\n          valor: preco.Valor || 'N/A',\n          marca: marcas.find(m => m.valor === marcaSelecionada)?.nome || '',\n          modelo: data.modelo || veiculoSelecionado,\n          anoModelo: parseInt(preco.AnoModelo) || 0,\n          combustivel: preco.Combustivel || 'N/A',\n          codigoFipe: preco.CodigoFipe || 'N/A',\n          mesReferencia: preco.MesReferencia || 'N/A',\n          tipoVeiculo: preco.TipoVeiculo || 1,\n          siglaCombustivel: preco.SiglaCombustivel || 'N/A',\n          dataConsulta: new Date().toLocaleString('pt-BR')\n        }));\n        \n        setPrecos(precosFormatados);\n        setEstadoPrecos({ status: 'success' });\n        \n        // Notificar componente pai com o primeiro preço (mais recente)\n        if (onVeiculoSelecionado && precosFormatados.length > 0) {\n          const precoMaisRecente = precosFormatados[0];\n          const marcaNome = marcas.find(m => m.valor === marcaSelecionada)?.nome || '';\n          \n          onVeiculoSelecionado({\n            marca: marcaNome,\n            modelo: precoMaisRecente.modelo,\n            preco: precoMaisRecente.valor,\n            ano: precoMaisRecente.anoModelo,\n            combustivel: precoMaisRecente.combustivel\n          });\n        }\n      } else {\n        throw new Error('Nenhum preço encontrado para este veículo');\n      }\n      \n    } catch (error) {\n      console.error('Erro ao buscar preços FIPE:', error);\n      setEstadoPrecos({ \n        status: 'error', \n        erro: error instanceof Error ? error.message : 'Erro ao carregar preços. Tente novamente.' \n      });\n      setPrecos([]);\n    }\n  };\n\n  const formatarValor = (valor: string): string => {\n    return fipeService.formatarValor(valor);\n  };\n\n  const resetarConsulta = () => {\n    setTipoVeiculo('carros');\n    setMarcaSelecionada('');\n    setVeiculoSelecionado('');\n    setVeiculos([]);\n    setPrecos([]);\n  };\n\n  return (\n    <div className={`bg-white rounded-lg shadow-lg p-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"bg-blue-100 p-2 rounded-lg\">\n            <Car className=\"w-5 h-5 text-blue-600\" />\n          </div>\n          <h3 className=\"text-xl font-semibold text-gray-900\">Consulta FIPE</h3>\n        </div>\n        <button\n          onClick={resetarConsulta}\n          className=\"text-sm text-gray-500 hover:text-gray-700 transition-colors\"\n        >\n          Limpar consulta\n        </button>\n      </div>\n\n      <div className=\"space-y-6\">\n        {/* Tipo de Veículo */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Tipo de Veículo\n          </label>\n          <div className=\"grid grid-cols-3 gap-3\">\n            {(['carros', 'motos', 'caminhoes'] as TipoVeiculo[]).map((tipo) => (\n              <button\n                key={tipo}\n                onClick={() => setTipoVeiculo(tipo)}\n                className={`p-3 rounded-lg border-2 transition-all ${\n                  tipoVeiculo === tipo\n                    ? 'border-blue-500 bg-blue-50 text-blue-700'\n                    : 'border-gray-200 hover:border-gray-300 text-gray-700'\n                }`}\n              >\n                <div className=\"text-center\">\n                  <Car className=\"w-5 h-5 mx-auto mb-1\" />\n                  <span className=\"text-sm font-medium capitalize\">{tipo}</span>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Marca */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Marca\n          </label>\n          <div className=\"relative\">\n            <select\n              value={marcaSelecionada}\n              onChange={(e) => setMarcaSelecionada(e.target.value)}\n              disabled={estadoMarcas.status === 'loading'}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:bg-gray-50\"\n            >\n              <option value=\"\">Selecione uma marca</option>\n              {marcas.map((marca, index) => (\n                <option key={`${marca.valor}-${index}`} value={marca.valor}>\n                  {marca.nome}\n                </option>\n              ))}\n            </select>\n            {estadoMarcas.status === 'loading' && (\n              <Loader className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 animate-spin text-blue-500\" />\n            )}\n          </div>\n          {estadoMarcas.status === 'error' && (\n            <div className=\"mt-1 text-sm text-red-600 flex items-center gap-1\">\n              <AlertCircle className=\"w-4 h-4\" />\n              {estadoMarcas.erro}\n            </div>\n          )}\n        </div>\n\n        {/* Veículo */}\n        {marcaSelecionada && (\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Modelo\n            </label>\n            <div className=\"relative\">\n              <select\n                value={veiculoSelecionado}\n                onChange={(e) => setVeiculoSelecionado(e.target.value)}\n                disabled={estadoVeiculos.status === 'loading'}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:bg-gray-50\"\n              >\n                <option value=\"\">Selecione um modelo</option>\n                {veiculos.map((veiculo, index) => (\n                  <option key={`${veiculo.modelo}-${index}`} value={veiculo.modelo}>\n                    {veiculo.modelo}\n                  </option>\n                ))}\n              </select>\n              {estadoVeiculos.status === 'loading' && (\n                <Loader className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 animate-spin text-blue-500\" />\n              )}\n            </div>\n            {estadoVeiculos.status === 'error' && (\n              <div className=\"mt-1 text-sm text-red-600 flex items-center gap-1\">\n                <AlertCircle className=\"w-4 h-4\" />\n                {estadoVeiculos.erro}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Resultados */}\n        {veiculoSelecionado && (\n          <div>\n            <h4 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center gap-2\">\n              <DollarSign className=\"w-5 h-5\" />\n              Informações do Veículo\n            </h4>\n            \n            {estadoPrecos.status === 'loading' && (\n              <div className=\"flex items-center justify-center py-8\">\n                <Loader className=\"w-6 h-6 animate-spin text-blue-500\" />\n                <span className=\"ml-2 text-gray-600\">Buscando preços...</span>\n              </div>\n            )}\n            \n            {estadoPrecos.status === 'error' && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 text-red-600\">\n                  <AlertCircle className=\"w-5 h-5\" />\n                  <span className=\"font-medium\">Erro ao buscar preços</span>\n                </div>\n                <p className=\"text-red-600 text-sm mt-1\">{estadoPrecos.erro}</p>\n              </div>\n            )}\n            \n            {estadoPrecos.status === 'success' && precos.length > 0 && (\n              <div className=\"space-y-4\">\n                {precos.map((preco, index) => (\n                  <div key={index} className=\"bg-gray-50 rounded-lg p-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <div className=\"flex items-center gap-2 mb-2\">\n                          <Car className=\"w-4 h-4 text-gray-500\" />\n                          <span className=\"font-medium text-gray-900\">{preco.modelo}</span>\n                        </div>\n                        <div className=\"space-y-1 text-sm text-gray-600\">\n                          <div className=\"flex items-center gap-2\">\n                            <Calendar className=\"w-4 h-4\" />\n                            <span>Ano: {preco.anoModelo}</span>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Fuel className=\"w-4 h-4\" />\n                            <span>Combustível: {preco.combustivel}</span>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Info className=\"w-4 h-4\" />\n                            <span>Código FIPE: {preco.codigoFipe}</span>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"text-right\">\n                        <div className=\"text-2xl font-bold text-green-600 mb-1\">\n                          {formatarValor(preco.valor)}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          Ref: {preco.mesReferencia}\n                        </div>\n                        <div className=\"text-xs text-gray-400 mt-1\">\n                          Fonte: FIPE\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3176, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/components/ModalConsultaVeiculo.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { X, Car, Plus, Check } from 'lucide-react';\nimport ConsultaFipe from './ConsultaFipe';\n\ninterface ModalConsultaVeiculoProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onVeiculoAdicionado?: (veiculo: {\n    marca: string;\n    modelo: string;\n    preco: string;\n    ano: number;\n    combustivel: string;\n  }) => void;\n  titulo?: string;\n}\n\nexport default function ModalConsultaVeiculo({\n  isOpen,\n  onClose,\n  onVeiculoAdicionado,\n  titulo = \"Consultar Veículo FIPE\"\n}: ModalConsultaVeiculoProps) {\n  const [veiculoSelecionado, setVeiculoSelecionado] = useState<any>(null);\n\n  const handleVeiculoSelecionado = (dados: any) => {\n    setVeiculoSelecionado(dados);\n  };\n\n  const handleAdicionarVeiculo = () => {\n    if (veiculoSelecionado && onVeiculoAdicionado) {\n      onVeiculoAdicionado(veiculoSelecionado);\n      setVeiculoSelecionado(null);\n      onClose();\n    }\n  };\n\n  const handleClose = () => {\n    setVeiculoSelecionado(null);\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"bg-blue-100 p-2 rounded-lg\">\n              <Car className=\"w-5 h-5 text-blue-600\" />\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">{titulo}</h2>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {/* Conteúdo */}\n        <div className=\"p-6\">\n          <ConsultaFipe\n            onVeiculoSelecionado={handleVeiculoSelecionado}\n            className=\"border-0 shadow-none p-0\"\n          />\n\n          {/* Veículo Selecionado */}\n          {veiculoSelecionado && (\n            <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n              <h4 className=\"font-medium text-green-800 mb-2 flex items-center gap-2\">\n                <Check className=\"w-4 h-4\" />\n                Veículo Selecionado\n              </h4>\n              <div className=\"text-sm text-green-700 space-y-1\">\n                <p><strong>Marca:</strong> {veiculoSelecionado.marca}</p>\n                <p><strong>Modelo:</strong> {veiculoSelecionado.modelo}</p>\n                <p><strong>Ano:</strong> {veiculoSelecionado.ano}</p>\n                <p><strong>Combustível:</strong> {veiculoSelecionado.combustivel}</p>\n                <p><strong>Valor FIPE:</strong> {veiculoSelecionado.preco}</p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex gap-3 justify-end p-6 border-t border-gray-200\">\n          <button\n            onClick={handleClose}\n            className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n          >\n            Cancelar\n          </button>\n          {veiculoSelecionado && (\n            <button\n              onClick={handleAdicionarVeiculo}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Adicionar Veículo\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;;AAJA;;;;AAmBe,SAAS,qBAAqB,KAKjB;QALiB,EAC3C,MAAM,EACN,OAAO,EACP,mBAAmB,EACnB,SAAS,wBAAwB,EACP,GALiB;;IAM3C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAElE,MAAM,2BAA2B,CAAC;QAChC,sBAAsB;IACxB;IAEA,MAAM,yBAAyB;QAC7B,IAAI,sBAAsB,qBAAqB;YAC7C,oBAAoB;YACpB,sBAAsB;YACtB;QACF;IACF;IAEA,MAAM,cAAc;QAClB,sBAAsB;QACtB;IACF;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,mMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;;;;;;8CAEjB,6LAAC;oCAAG,WAAU;8CAAuC;;;;;;;;;;;;sCAEvD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAKjB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qIAAA,CAAA,UAAY;4BACX,sBAAsB;4BACtB,WAAU;;;;;;wBAIX,oCACC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;;sDACZ,6LAAC,uMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;wCAAY;;;;;;;8CAG/B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DAAE,6LAAC;8DAAO;;;;;;gDAAe;gDAAE,mBAAmB,KAAK;;;;;;;sDACpD,6LAAC;;8DAAE,6LAAC;8DAAO;;;;;;gDAAgB;gDAAE,mBAAmB,MAAM;;;;;;;sDACtD,6LAAC;;8DAAE,6LAAC;8DAAO;;;;;;gDAAa;gDAAE,mBAAmB,GAAG;;;;;;;sDAChD,6LAAC;;8DAAE,6LAAC;8DAAO;;;;;;gDAAqB;gDAAE,mBAAmB,WAAW;;;;;;;sDAChE,6LAAC;;8DAAE,6LAAC;8DAAO;;;;;;gDAAoB;gDAAE,mBAAmB,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;8BAOjE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;wBAGA,oCACC,6LAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,6LAAC,qMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;;;;;;;;;;;;;;;;;AAQ1C;GA5FwB;KAAA","debugId":null}},
    {"offset": {"line": 3469, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi/despasys/src/app/%28app%29/fipe/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Car, Search, Plus, TrendingUp, Info } from 'lucide-react';\nimport ConsultaFipe from '@/components/ConsultaFipe';\nimport ModalConsultaVeiculo from '@/components/ModalConsultaVeiculo';\n\ninterface VeiculoSalvo {\n  id: string;\n  marca: string;\n  modelo: string;\n  preco: string;\n  ano: number;\n  combustivel: string;\n  dataConsulta: string;\n}\n\nexport default function FipePage() {\n  const [modalAberto, setModalAberto] = useState(false);\n  const [veiculosSalvos, setVeiculosSalvos] = useState<VeiculoSalvo[]>([]);\n\n  const handleVeiculoAdicionado = (veiculo: any) => {\n    const novoVeiculo: VeiculoSalvo = {\n      id: Date.now().toString(),\n      ...veiculo,\n      dataConsulta: new Date().toLocaleDateString('pt-BR')\n    };\n    \n    setVeiculosSalvos(prev => [novoVeiculo, ...prev]);\n  };\n\n  const removerVeiculo = (id: string) => {\n    setVeiculosSalvos(prev => prev.filter(v => v.id !== id));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\n                <Car className=\"w-8 h-8 text-blue-600\" />\n                Consulta FIPE\n              </h1>\n              <p className=\"text-gray-600 mt-2\">\n                Consulte preços de veículos segundo a tabela FIPE\n              </p>\n            </div>\n            \n            <button\n              onClick={() => setModalAberto(true)}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Nova Consulta\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Consulta Principal */}\n          <div className=\"lg:col-span-2\">\n            <ConsultaFipe onVeiculoSelecionado={handleVeiculoAdicionado} />\n          </div>\n\n          {/* Sidebar - Informações e Histórico */}\n          <div className=\"space-y-6\">\n            {/* Informações da FIPE */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n                <Info className=\"w-5 h-5 text-blue-600\" />\n                Sobre a FIPE\n              </h3>\n              <div className=\"text-sm text-gray-600 space-y-2\">\n                <p>\n                  A <strong>FIPE</strong> (Fundação Instituto de Pesquisas Econômicas) \n                  é responsável pela divulgação da Tabela FIPE de preços médios de veículos.\n                </p>\n                <p>\n                  Os preços são atualizados mensalmente e servem como referência \n                  para o mercado de veículos usados no Brasil.\n                </p>\n                <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n                  <div className=\"flex items-center gap-2 text-blue-700\">\n                    <TrendingUp className=\"w-4 h-4\" />\n                    <span className=\"font-medium\">Dica</span>\n                  </div>\n                  <p className=\"text-blue-600 text-xs mt-1\">\n                    Use a consulta FIPE para avaliar veículos em \n                    transferências e documentações.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Veículos Consultados */}\n            {veiculosSalvos.length > 0 && (\n              <div className=\"bg-white rounded-lg shadow-lg p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n                  <Search className=\"w-5 h-5 text-green-600\" />\n                  Últimas Consultas\n                </h3>\n                <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                  {veiculosSalvos.map((veiculo) => (\n                    <div key={veiculo.id} className=\"border border-gray-200 rounded-lg p-3\">\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"flex-1\">\n                          <p className=\"font-medium text-gray-900 text-sm\">\n                            {veiculo.marca} {veiculo.modelo}\n                          </p>\n                          <p className=\"text-xs text-gray-500\">\n                            {veiculo.ano} • {veiculo.combustivel}\n                          </p>\n                          <p className=\"text-sm font-bold text-green-600 mt-1\">\n                            {veiculo.preco}\n                          </p>\n                          <p className=\"text-xs text-gray-400\">\n                            {veiculo.dataConsulta}\n                          </p>\n                        </div>\n                        <button\n                          onClick={() => removerVeiculo(veiculo.id)}\n                          className=\"text-gray-400 hover:text-red-500 transition-colors text-xs\"\n                        >\n                          ✕\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Modal */}\n        <ModalConsultaVeiculo\n          isOpen={modalAberto}\n          onClose={() => setModalAberto(false)}\n          onVeiculoAdicionado={handleVeiculoAdicionado}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}