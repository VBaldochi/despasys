{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/store/processoStore.ts"],"sourcesContent":["import { create } from 'zustand'\nimport { format } from 'date-fns'\nimport { ptBR } from 'date-fns/locale'\n\nexport type ProcessStatus = 'STARTED' | 'DOCUMENTS_RECEIVED' | 'PROCESSING' | 'WAITING_CLIENT' | 'COMPLETED' | 'CANCELLED'\nexport type ProcessPriority = 'LOW' | 'MEDIUM' | 'HIGH' | 'URGENT'\n\nexport interface ProcessStep {\n  id: string\n  title: string\n  description: string\n  status: 'pending' | 'in_progress' | 'completed' | 'cancelled'\n  completedAt?: Date\n  estimatedDate?: Date\n  documents?: string[]\n  notes?: string\n}\n\nexport interface ProcessDocument {\n  id: string\n  name: string\n  type: string\n  url: string\n  uploadedAt: Date\n  size: number\n  status: 'pending' | 'approved' | 'rejected'\n}\n\nexport interface ProcessNotification {\n  id: string\n  title: string\n  message: string\n  type: 'info' | 'success' | 'warning' | 'error'\n  createdAt: Date\n  read: boolean\n}\n\nexport interface Process {\n  id: string\n  customerId: string\n  customerName: string\n  customerPhone: string\n  customerEmail?: string\n  customerCPF?: string\n  title: string\n  description: string\n  serviceType: string\n  status: ProcessStatus\n  priority: ProcessPriority\n  startDate: Date\n  endDate?: Date\n  estimatedEndDate?: Date\n  steps: ProcessStep[]\n  documents: ProcessDocument[]\n  notifications: ProcessNotification[]\n  progress: number\n  totalCost?: number\n  notes?: string\n  createdAt: Date\n  updatedAt: Date\n}\n\ninterface ProcessState {\n  processes: Process[]\n  selectedProcess: Process | null\n  isLoading: boolean\n  searchTerm: string\n  statusFilter: ProcessStatus | 'ALL'\n  priorityFilter: ProcessPriority | 'ALL'\n  \n  // Actions\n  setProcesses: (processes: Process[]) => void\n  setSelectedProcess: (process: Process | null) => void\n  setIsLoading: (loading: boolean) => void\n  setSearchTerm: (term: string) => void\n  setStatusFilter: (status: ProcessStatus | 'ALL') => void\n  setPriorityFilter: (priority: ProcessPriority | 'ALL') => void\n  addProcess: (process: Omit<Process, 'id' | 'createdAt' | 'updatedAt'>) => void\n  updateProcess: (id: string, updates: Partial<Process>) => void\n  deleteProcess: (id: string) => void\n  updateProcessStep: (processId: string, stepId: string, updates: Partial<ProcessStep>) => void\n  addDocument: (processId: string, document: Omit<ProcessDocument, 'id' | 'uploadedAt'>) => void\n  addNotification: (processId: string, notification: Omit<ProcessNotification, 'id' | 'createdAt'>) => void\n  markNotificationAsRead: (processId: string, notificationId: string) => void\n  getProcessById: (id: string) => Process | undefined\n  getProcessesByCustomer: (customerId: string) => Process[]\n  getFilteredProcesses: () => Process[]\n  calculateProgress: (process: Process) => number\n}\n\n// Mock data para demonstração\nconst MOCK_PROCESSES: Process[] = [\n  {\n    id: '1',\n    customerId: 'customer-1',\n    customerName: 'João Silva',\n    customerPhone: '(16) 99999-9999',\n    customerEmail: 'joao@email.com',\n    customerCPF: '12345678900',\n    title: 'Licenciamento Anual - Honda Civic',\n    description: 'Licenciamento anual do veículo Honda Civic 2020',\n    serviceType: 'licenciamento',\n    status: 'PROCESSING',\n    priority: 'MEDIUM',\n    startDate: new Date('2024-01-15'),\n    estimatedEndDate: new Date('2024-01-25'),\n    progress: 75,\n    totalCost: 280.50,\n    steps: [\n      {\n        id: 'step-1',\n        title: 'Recebimento dos Documentos',\n        description: 'Documentos do veículo e proprietário recebidos',\n        status: 'completed',\n        completedAt: new Date('2024-01-16'),\n        documents: ['doc1.pdf', 'doc2.pdf']\n      },\n      {\n        id: 'step-2',\n        title: 'Análise da Documentação',\n        description: 'Verificação e validação dos documentos',\n        status: 'completed',\n        completedAt: new Date('2024-01-18'),\n      },\n      {\n        id: 'step-3',\n        title: 'Pagamento das Taxas',\n        description: 'Pagamento das taxas no DETRAN',\n        status: 'in_progress',\n        estimatedDate: new Date('2024-01-22'),\n      },\n      {\n        id: 'step-4',\n        title: 'Emissão do Licenciamento',\n        description: 'Emissão do documento de licenciamento',\n        status: 'pending',\n        estimatedDate: new Date('2024-01-24'),\n      },\n      {\n        id: 'step-5',\n        title: 'Entrega dos Documentos',\n        description: 'Entrega dos documentos ao cliente',\n        status: 'pending',\n        estimatedDate: new Date('2024-01-25'),\n      }\n    ],\n    documents: [\n      {\n        id: 'doc-1',\n        name: 'CNH.pdf',\n        type: 'application/pdf',\n        url: '/documents/cnh.pdf',\n        uploadedAt: new Date('2024-01-15'),\n        size: 1024000,\n        status: 'approved'\n      },\n      {\n        id: 'doc-2',\n        name: 'CRLV.pdf',\n        type: 'application/pdf',\n        url: '/documents/crlv.pdf',\n        uploadedAt: new Date('2024-01-15'),\n        size: 2048000,\n        status: 'approved'\n      }\n    ],\n    notifications: [\n      {\n        id: 'notif-1',\n        title: 'Processo Iniciado',\n        message: 'Seu processo de licenciamento foi iniciado',\n        type: 'info',\n        createdAt: new Date('2024-01-15'),\n        read: true\n      },\n      {\n        id: 'notif-2',\n        title: 'Documentos Aprovados',\n        message: 'Todos os documentos foram aprovados',\n        type: 'success',\n        createdAt: new Date('2024-01-18'),\n        read: false\n      }\n    ],\n    createdAt: new Date('2024-01-15'),\n    updatedAt: new Date('2024-01-20')\n  },\n  {\n    id: '2',\n    customerId: 'customer-2',\n    customerName: 'Maria Santos',\n    customerPhone: '(16) 88888-8888',\n    customerEmail: 'maria@email.com',\n    customerCPF: '98765432100',\n    title: 'Transferência de Propriedade - Toyota Corolla',\n    description: 'Transferência de propriedade do veículo Toyota Corolla 2019',\n    serviceType: 'transferencia',\n    status: 'WAITING_CLIENT',\n    priority: 'HIGH',\n    startDate: new Date('2024-01-10'),\n    estimatedEndDate: new Date('2024-01-30'),\n    progress: 40,\n    totalCost: 450.00,\n    steps: [\n      {\n        id: 'step-1',\n        title: 'Recebimento dos Documentos',\n        description: 'Documentos do veículo e proprietário recebidos',\n        status: 'completed',\n        completedAt: new Date('2024-01-11'),\n      },\n      {\n        id: 'step-2',\n        title: 'Análise da Documentação',\n        description: 'Verificação e validação dos documentos',\n        status: 'completed',\n        completedAt: new Date('2024-01-13'),\n      },\n      {\n        id: 'step-3',\n        title: 'Aguardando Assinatura',\n        description: 'Aguardando assinatura do comprador',\n        status: 'in_progress',\n        estimatedDate: new Date('2024-01-25'),\n        notes: 'Cliente precisa comparecer para assinatura'\n      },\n      {\n        id: 'step-4',\n        title: 'Protocolo no DETRAN',\n        description: 'Protocolo da transferência no DETRAN',\n        status: 'pending',\n        estimatedDate: new Date('2024-01-28'),\n      }\n    ],\n    documents: [],\n    notifications: [\n      {\n        id: 'notif-1',\n        title: 'Ação Necessária',\n        message: 'Você precisa comparecer ao escritório para assinatura',\n        type: 'warning',\n        createdAt: new Date('2024-01-20'),\n        read: false\n      }\n    ],\n    createdAt: new Date('2024-01-10'),\n    updatedAt: new Date('2024-01-20')\n  }\n]\n\nexport const useProcessStore = create<ProcessState>((set, get) => ({\n  processes: MOCK_PROCESSES,\n  selectedProcess: null,\n  isLoading: false,\n  searchTerm: '',\n  statusFilter: 'ALL',\n  priorityFilter: 'ALL',\n\n  setProcesses: (processes) => set({ processes }),\n  setSelectedProcess: (process) => set({ selectedProcess: process }),\n  setIsLoading: (loading) => set({ isLoading: loading }),\n  setSearchTerm: (term) => set({ searchTerm: term }),\n  setStatusFilter: (status) => set({ statusFilter: status }),\n  setPriorityFilter: (priority) => set({ priorityFilter: priority }),\n\n  addProcess: (processData) => {\n    const newProcess: Process = {\n      ...processData,\n      id: `process-${Date.now()}`,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }\n    set((state) => ({\n      processes: [...state.processes, newProcess]\n    }))\n  },\n\n  updateProcess: (id, updates) => {\n    set((state) => ({\n      processes: state.processes.map(process =>\n        process.id === id\n          ? { ...process, ...updates, updatedAt: new Date() }\n          : process\n      )\n    }))\n  },\n\n  deleteProcess: (id) => {\n    set((state) => ({\n      processes: state.processes.filter(process => process.id !== id)\n    }))\n  },\n\n  updateProcessStep: (processId, stepId, updates) => {\n    set((state) => ({\n      processes: state.processes.map(process =>\n        process.id === processId\n          ? {\n              ...process,\n              steps: process.steps.map(step =>\n                step.id === stepId ? { ...step, ...updates } : step\n              ),\n              updatedAt: new Date()\n            }\n          : process\n      )\n    }))\n  },\n\n  addDocument: (processId, documentData) => {\n    const newDocument: ProcessDocument = {\n      ...documentData,\n      id: `doc-${Date.now()}`,\n      uploadedAt: new Date()\n    }\n    set((state) => ({\n      processes: state.processes.map(process =>\n        process.id === processId\n          ? {\n              ...process,\n              documents: [...process.documents, newDocument],\n              updatedAt: new Date()\n            }\n          : process\n      )\n    }))\n  },\n\n  addNotification: (processId, notificationData) => {\n    const newNotification: ProcessNotification = {\n      ...notificationData,\n      id: `notif-${Date.now()}`,\n      createdAt: new Date(),\n      read: false\n    }\n    set((state) => ({\n      processes: state.processes.map(process =>\n        process.id === processId\n          ? {\n              ...process,\n              notifications: [...process.notifications, newNotification],\n              updatedAt: new Date()\n            }\n          : process\n      )\n    }))\n  },\n\n  markNotificationAsRead: (processId, notificationId) => {\n    set((state) => ({\n      processes: state.processes.map(process =>\n        process.id === processId\n          ? {\n              ...process,\n              notifications: process.notifications.map(notif =>\n                notif.id === notificationId ? { ...notif, read: true } : notif\n              ),\n              updatedAt: new Date()\n            }\n          : process\n      )\n    }))\n  },\n\n  getProcessById: (id) => {\n    return get().processes.find(process => process.id === id)\n  },\n\n  getProcessesByCustomer: (customerId) => {\n    return get().processes.filter(process => process.customerId === customerId)\n  },\n\n  getFilteredProcesses: () => {\n    const { processes, searchTerm, statusFilter, priorityFilter } = get()\n    \n    return processes.filter(process => {\n      const matchesSearch = !searchTerm || \n        process.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        process.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        process.description.toLowerCase().includes(searchTerm.toLowerCase())\n      \n      const matchesStatus = statusFilter === 'ALL' || process.status === statusFilter\n      const matchesPriority = priorityFilter === 'ALL' || process.priority === priorityFilter\n      \n      return matchesSearch && matchesStatus && matchesPriority\n    })\n  },\n\n  calculateProgress: (process) => {\n    const completedSteps = process.steps.filter(step => step.status === 'completed').length\n    const totalSteps = process.steps.length\n    return totalSteps > 0 ? Math.round((completedSteps / totalSteps) * 100) : 0\n  }\n}))\n\n// Utility functions\nexport const formatDate = (date: Date): string => {\n  return format(date, 'dd/MM/yyyy', { locale: ptBR })\n}\n\nexport const formatDateTime = (date: Date): string => {\n  return format(date, 'dd/MM/yyyy HH:mm', { locale: ptBR })\n}\n\nexport const getStatusColor = (status: ProcessStatus): string => {\n  switch (status) {\n    case 'STARTED':\n      return 'bg-blue-100 text-blue-800'\n    case 'DOCUMENTS_RECEIVED':\n      return 'bg-purple-100 text-purple-800'\n    case 'PROCESSING':\n      return 'bg-yellow-100 text-yellow-800'\n    case 'WAITING_CLIENT':\n      return 'bg-orange-100 text-orange-800'\n    case 'COMPLETED':\n      return 'bg-green-100 text-green-800'\n    case 'CANCELLED':\n      return 'bg-red-100 text-red-800'\n    default:\n      return 'bg-gray-100 text-gray-800'\n  }\n}\n\nexport const getStatusLabel = (status: ProcessStatus): string => {\n  switch (status) {\n    case 'STARTED':\n      return 'Iniciado'\n    case 'DOCUMENTS_RECEIVED':\n      return 'Documentos Recebidos'\n    case 'PROCESSING':\n      return 'Em Processamento'\n    case 'WAITING_CLIENT':\n      return 'Aguardando Cliente'\n    case 'COMPLETED':\n      return 'Concluído'\n    case 'CANCELLED':\n      return 'Cancelado'\n    default:\n      return 'Desconhecido'\n  }\n}\n\nexport const getPriorityColor = (priority: ProcessPriority): string => {\n  switch (priority) {\n    case 'LOW':\n      return 'bg-gray-100 text-gray-800'\n    case 'MEDIUM':\n      return 'bg-blue-100 text-blue-800'\n    case 'HIGH':\n      return 'bg-orange-100 text-orange-800'\n    case 'URGENT':\n      return 'bg-red-100 text-red-800'\n    default:\n      return 'bg-gray-100 text-gray-800'\n  }\n}\n\nexport const getPriorityLabel = (priority: ProcessPriority): string => {\n  switch (priority) {\n    case 'LOW':\n      return 'Baixa'\n    case 'MEDIUM':\n      return 'Média'\n    case 'HIGH':\n      return 'Alta'\n    case 'URGENT':\n      return 'Urgente'\n    default:\n      return 'Desconhecida'\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/ChatWidget.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { \n  ChatBubbleLeftRightIcon,\n  PaperAirplaneIcon,\n  XMarkIcon,\n  UserIcon,\n  PhoneIcon\n} from '@heroicons/react/24/outline'\n\ninterface Message {\n  id: string\n  sender: 'client' | 'admin'\n  content: string\n  timestamp: Date\n  processId?: string\n}\n\ninterface ChatWidgetProps {\n  processId?: string\n  customerName?: string\n  customerPhone?: string\n}\n\nexport default function ChatWidget({ \n  processId, \n  customerName, \n  customerPhone \n}: ChatWidgetProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const [messages, setMessages] = useState<Message[]>([])\n  const [newMessage, setNewMessage] = useState('')\n  const [isTyping, setIsTyping] = useState(false)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  // Mock messages para demonstração\n  useEffect(() => {\n    const mockMessages: Message[] = [\n      {\n        id: '1',\n        sender: 'admin',\n        content: 'Olá! Seu processo de licenciamento foi iniciado. Em breve entraremos em contato.',\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\n        processId\n      },\n      {\n        id: '2',\n        sender: 'client',\n        content: 'Obrigado! Quanto tempo leva para ficar pronto?',\n        timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000),\n        processId\n      },\n      {\n        id: '3',\n        sender: 'admin',\n        content: 'Geralmente de 5 a 7 dias úteis. Você será notificado a cada etapa do processo.',\n        timestamp: new Date(Date.now() - 30 * 60 * 1000),\n        processId\n      }\n    ]\n    setMessages(mockMessages)\n  }, [processId])\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return\n\n    const message: Message = {\n      id: Date.now().toString(),\n      sender: 'client',\n      content: newMessage,\n      timestamp: new Date(),\n      processId\n    }\n\n    setMessages([...messages, message])\n    setNewMessage('')\n\n    // Simular resposta do admin\n    setTimeout(() => {\n      setIsTyping(true)\n      setTimeout(() => {\n        const adminResponse: Message = {\n          id: (Date.now() + 1).toString(),\n          sender: 'admin',\n          content: 'Obrigado pela mensagem! Vou verificar e te respondo em breve.',\n          timestamp: new Date(),\n          processId\n        }\n        setMessages(prev => [...prev, adminResponse])\n        setIsTyping(false)\n      }, 2000)\n    }, 500)\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSendMessage()\n    }\n  }\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString('pt-BR', { \n      hour: '2-digit', \n      minute: '2-digit' \n    })\n  }\n\n  return (\n    <>\n      {/* Chat Button */}\n      <motion.button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"fixed bottom-6 right-6 w-14 h-14 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 transition-colors z-50 flex items-center justify-center\"\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.9 }}\n      >\n        {isOpen ? (\n          <XMarkIcon className=\"h-6 w-6\" />\n        ) : (\n          <ChatBubbleLeftRightIcon className=\"h-6 w-6\" />\n        )}\n      </motion.button>\n\n      {/* Chat Window */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8, y: 20 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.8, y: 20 }}\n            transition={{ duration: 0.2 }}\n            className=\"fixed bottom-24 right-6 w-80 h-96 bg-white rounded-xl shadow-2xl border border-gray-200 z-50 flex flex-col\"\n          >\n            {/* Header */}\n            <div className=\"bg-blue-600 text-white p-4 rounded-t-xl\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\n                    <UserIcon className=\"h-4 w-4\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium\">Lazuli Despachante</h3>\n                    <p className=\"text-xs text-blue-100\">Online</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsOpen(false)}\n                  className=\"p-1 hover:bg-blue-700 rounded\"\n                >\n                  <XMarkIcon className=\"h-4 w-4\" />\n                </button>\n              </div>\n              {customerName && (\n                <div className=\"mt-2 text-sm text-blue-100\">\n                  <p>Cliente: {customerName}</p>\n                  {processId && <p>Processo: #{processId}</p>}\n                </div>\n              )}\n            </div>\n\n            {/* Messages */}\n            <div className=\"flex-1 overflow-y-auto p-4 space-y-3\">\n              {messages.map((message) => (\n                <motion.div\n                  key={message.id}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.2 }}\n                  className={`flex ${message.sender === 'client' ? 'justify-end' : 'justify-start'}`}\n                >\n                  <div\n                    className={`max-w-xs p-3 rounded-lg ${\n                      message.sender === 'client'\n                        ? 'bg-blue-600 text-white'\n                        : 'bg-gray-100 text-gray-900'\n                    }`}\n                  >\n                    <p className=\"text-sm\">{message.content}</p>\n                    <p className={`text-xs mt-1 ${\n                      message.sender === 'client' ? 'text-blue-100' : 'text-gray-500'\n                    }`}>\n                      {formatTime(message.timestamp)}\n                    </p>\n                  </div>\n                </motion.div>\n              ))}\n              \n              {/* Typing Indicator */}\n              {isTyping && (\n                <motion.div\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"flex justify-start\"\n                >\n                  <div className=\"bg-gray-100 p-3 rounded-lg\">\n                    <div className=\"flex space-x-1\">\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n              \n              <div ref={messagesEndRef} />\n            </div>\n\n            {/* Input */}\n            <div className=\"p-4 border-t border-gray-200\">\n              <div className=\"flex space-x-2\">\n                <input\n                  type=\"text\"\n                  value={newMessage}\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Digite sua mensagem...\"\n                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                />\n                <button\n                  onClick={handleSendMessage}\n                  disabled={!newMessage.trim()}\n                  className=\"px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  <PaperAirplaneIcon className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/cep.ts"],"sourcesContent":["// Serviços de integração com CEP da BrasilAPI\n// Útil para validação de endereços e auto-preenchimento\n\nexport interface CepResponse {\n  cep: string;\n  logradouro: string;\n  bairro: string;\n  cidade: string;\n  uf: string;\n  ddd: string;\n}\n\nexport interface EnderecoCep {\n  cep: string;\n  state: string;\n  city: string;\n  neighborhood: string | null;\n  street: string | null;\n  service: string;\n}\n\nexport interface EnderecoCepV2 extends EnderecoCep {\n  location: {\n    type: string;\n    coordinates: {\n      longitude: string | null;\n      latitude: string | null;\n    };\n  };\n}\n\nclass CepService {\n  private readonly baseUrl = 'https://brasilapi.com.br/api/cep';\n\n  /**\n   * Busca endereço por CEP (versão 1)\n   */\n  async buscarCep(cep: string): Promise<CepResponse> {\n    const cepLimpo = cep.replace(/\\D/g, '');\n    \n    if (cepLimpo.length !== 8) {\n      throw new Error('CEP deve ter 8 dígitos');\n    }\n\n    try {\n      const response = await fetch(`/api/cep?cep=${cepLimpo}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar CEP');\n      }\n\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error('CEP não encontrado');\n      }\n\n      return data.endereco;\n    } catch (error) {\n      console.error('Erro ao buscar CEP:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Busca endereço por CEP com geolocalização (versão 2)\n   */\n  async buscarCepV2(cep: string): Promise<EnderecoCepV2> {\n    const cepLimpo = this.limparCep(cep);\n    \n    if (!this.validarCep(cepLimpo)) {\n      throw new Error('CEP inválido. Use o formato 12345678 ou 12345-678');\n    }\n\n    try {\n      const response = await fetch(`${this.baseUrl}/v2/${cepLimpo}`);\n      \n      if (!response.ok) {\n        if (response.status === 404) {\n          throw new Error('CEP não encontrado');\n        }\n        throw new Error(`Erro ao buscar CEP: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Erro na consulta de CEP V2:', error);\n      if (error instanceof Error) {\n        throw error;\n      }\n      throw new Error('Falha ao consultar CEP');\n    }\n  }\n\n  /**\n   * Remove formatação do CEP\n   */\n  private limparCep(cep: string): string {\n    return cep.replace(/\\D/g, '');\n  }\n\n  /**\n   * Valida formato do CEP\n   */\n  validarCep(cep: string): boolean {\n    const cepLimpo = this.limparCep(cep);\n    return /^\\d{8}$/.test(cepLimpo);\n  }\n\n  /**\n   * Formata CEP para exibição\n   */\n  formatarCep(cep: string): string {\n    const cepLimpo = this.limparCep(cep);\n    if (!this.validarCep(cepLimpo)) return cep;\n    \n    return `${cepLimpo.slice(0, 5)}-${cepLimpo.slice(5)}`;\n  }\n\n  /**\n   * Monta endereço completo para exibição\n   */\n  montarEnderecoCompleto(endereco: EnderecoCep): string {\n    const partes = [\n      endereco.street,\n      endereco.neighborhood,\n      endereco.city,\n      endereco.state\n    ].filter(Boolean);\n    \n    return partes.join(', ');\n  }\n\n  /**\n   * Verifica se o endereço tem coordenadas (apenas V2)\n   */\n  temCoordenadas(endereco: EnderecoCepV2): boolean {\n    return !!(\n      endereco.location?.coordinates?.latitude && \n      endereco.location?.coordinates?.longitude\n    );\n  }\n\n  /**\n   * Converte coordenadas para números\n   */\n  obterCoordenadas(endereco: EnderecoCepV2): { lat: number; lng: number } | null {\n    if (!this.temCoordenadas(endereco)) return null;\n    \n    const lat = parseFloat(endereco.location.coordinates.latitude || '0');\n    const lng = parseFloat(endereco.location.coordinates.longitude || '0');\n    \n    if (isNaN(lat) || isNaN(lng)) return null;\n    \n    return { lat, lng };\n  }\n}\n\n// Singleton instance\nexport const cepService = new CepService();\n\n// Hook personalizado para React\nexport function useCep() {\n  return {\n    buscarCep: cepService.buscarCep.bind(cepService),\n    buscarCepV2: cepService.buscarCepV2.bind(cepService),\n    validarCep: cepService.validarCep.bind(cepService),\n    formatarCep: cepService.formatarCep.bind(cepService),\n    montarEnderecoCompleto: cepService.montarEnderecoCompleto.bind(cepService),\n    temCoordenadas: cepService.temCoordenadas.bind(cepService),\n    obterCoordenadas: cepService.obterCoordenadas.bind(cepService),\n  };\n}\n\n// Utilitários para CEP\nexport const cepUtils = {\n  /**\n   * Estados brasileiros com suas siglas\n   */\n  estados: {\n    'AC': 'Acre',\n    'AL': 'Alagoas', \n    'AP': 'Amapá',\n    'AM': 'Amazonas',\n    'BA': 'Bahia',\n    'CE': 'Ceará',\n    'DF': 'Distrito Federal',\n    'ES': 'Espírito Santo',\n    'GO': 'Goiás',\n    'MA': 'Maranhão',\n    'MT': 'Mato Grosso',\n    'MS': 'Mato Grosso do Sul',\n    'MG': 'Minas Gerais',\n    'PA': 'Pará',\n    'PB': 'Paraíba',\n    'PR': 'Paraná',\n    'PE': 'Pernambuco',\n    'PI': 'Piauí',\n    'RJ': 'Rio de Janeiro',\n    'RN': 'Rio Grande do Norte',\n    'RS': 'Rio Grande do Sul',\n    'RO': 'Rondônia',\n    'RR': 'Roraima',\n    'SC': 'Santa Catarina',\n    'SP': 'São Paulo',\n    'SE': 'Sergipe',\n    'TO': 'Tocantins'\n  },\n\n  /**\n   * Obter nome completo do estado\n   */\n  nomeCompleto(sigla: string): string {\n    return this.estados[sigla as keyof typeof this.estados] || sigla;\n  },\n\n  /**\n   * Calcular distância aproximada entre dois pontos (fórmula de Haversine)\n   */\n  calcularDistancia(\n    coord1: { lat: number; lng: number },\n    coord2: { lat: number; lng: number }\n  ): number {\n    const R = 6371; // Raio da Terra em km\n    const dLat = this.toRad(coord2.lat - coord1.lat);\n    const dLng = this.toRad(coord2.lng - coord1.lng);\n    \n    const a = \n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(this.toRad(coord1.lat)) * Math.cos(this.toRad(coord2.lat)) *\n      Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    \n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distância em km\n  },\n\n  /**\n   * Converter graus para radianos\n   */\n  toRad(valor: number): number {\n    return valor * (Math.PI / 180);\n  },\n\n  /**\n   * Gerar URL do Google Maps\n   */\n  gerarUrlMaps(endereco: EnderecoCep): string {\n    const enderecoCompleto = cepService.montarEnderecoCompleto(endereco);\n    return `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(enderecoCompleto)}`;\n  },\n\n  /**\n   * Verificar se CEP é de determinado estado\n   */\n  verificarEstado(cep: string, siglaEstado: string): boolean {\n    const cepLimpo = cep.replace(/\\D/g, '');\n    if (!cepService.validarCep(cepLimpo)) return false;\n    \n    // Faixas aproximadas de CEP por estado (simplificado)\n    const faixasCep: Record<string, string[]> = {\n      'SP': ['01000', '20000'],\n      'RJ': ['20000', '29000'],\n      'MG': ['30000', '40000'],\n      'BA': ['40000', '49000'],\n      'RS': ['90000', '100000'],\n      // Adicionar outras faixas conforme necessário\n    };\n    \n    const faixa = faixasCep[siglaEstado];\n    if (!faixa) return false;\n    \n    const cepNum = parseInt(cepLimpo.slice(0, 5));\n    const min = parseInt(faixa[0]);\n    const max = parseInt(faixa[1]);\n    \n    return cepNum >= min && cepNum < max;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1094, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/cnpj.ts"],"sourcesContent":["// Serviços de integração com CNPJ da BrasilAPI\n// Útil para validação de dados empresariais e busca de informações\n\nimport { EmpresaCnpj } from './types';\n\nexport interface CnpjValidacao {\n  valido: boolean;\n  formatado: string;\n  digitos: string;\n}\n\nclass CnpjService {\n  /**\n   * Busca dados completos da empresa por CNPJ\n   */\n  async buscarEmpresa(cnpj: string): Promise<EmpresaCnpj> {\n    const cnpjLimpo = cnpj.replace(/\\D/g, '');\n    \n    if (cnpjLimpo.length !== 14) {\n      throw new Error('CNPJ deve ter 14 dígitos');\n    }\n\n    try {\n      const response = await fetch(`/api/cnpj?cnpj=${cnpjLimpo}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar CNPJ');\n      }\n\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error('CNPJ não encontrado');\n      }\n\n      return data.empresa;\n    } catch (error) {\n      console.error('Erro ao buscar CNPJ:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Valida CNPJ usando algoritmo oficial\n   */\n  validarCnpj(cnpj: string): boolean {\n    const cnpjLimpo = cnpj.replace(/\\D/g, '');\n    \n    if (cnpjLimpo.length !== 14) return false;\n    \n    // Verifica se todos os dígitos são iguais\n    if (/^(\\d)\\1{13}$/.test(cnpjLimpo)) return false;\n    \n    // Calcula primeiro dígito verificador\n    let soma = 0;\n    let peso = 5;\n    \n    for (let i = 0; i < 12; i++) {\n      soma += parseInt(cnpjLimpo[i]) * peso;\n      peso = peso === 2 ? 9 : peso - 1;\n    }\n    \n    let digito1 = soma % 11;\n    digito1 = digito1 < 2 ? 0 : 11 - digito1;\n    \n    if (parseInt(cnpjLimpo[12]) !== digito1) return false;\n    \n    // Calcula segundo dígito verificador\n    soma = 0;\n    peso = 6;\n    \n    for (let i = 0; i < 13; i++) {\n      soma += parseInt(cnpjLimpo[i]) * peso;\n      peso = peso === 2 ? 9 : peso - 1;\n    }\n    \n    let digito2 = soma % 11;\n    digito2 = digito2 < 2 ? 0 : 11 - digito2;\n    \n    return parseInt(cnpjLimpo[13]) === digito2;\n  }\n\n  /**\n   * Formata CNPJ para exibição\n   */\n  formatarCnpj(cnpj: string): string {\n    const cnpjLimpo = cnpj.replace(/\\D/g, '');\n    if (cnpjLimpo.length !== 14) return cnpj;\n    \n    return cnpjLimpo.replace(\n      /^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/,\n      '$1.$2.$3/$4-$5'\n    );\n  }\n}\n\n// Singleton instance\nexport const cnpjService = new CnpjService();\nexport default cnpjService;\n"],"names":[],"mappings":"AAAA,+CAA+C;AAC/C,mEAAmE;;;;;AAUnE,MAAM;IACJ;;GAEC,GACD,MAAM,cAAc,IAAY,EAAwB;QACtD,MAAM,YAAY,KAAK,OAAO,CAAC,OAAO;QAEtC,IAAI,UAAU,MAAM,KAAK,IAAI;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,AAAC,kBAA2B,OAAV;YAE/C,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI;YACrC;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,KAAK,OAAO,EAAE;gBACjB,MAAM,IAAI,MAAM;YAClB;YAEA,OAAO,KAAK,OAAO;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM;QACR;IACF;IAEA;;GAEC,GACD,YAAY,IAAY,EAAW;QACjC,MAAM,YAAY,KAAK,OAAO,CAAC,OAAO;QAEtC,IAAI,UAAU,MAAM,KAAK,IAAI,OAAO;QAEpC,0CAA0C;QAC1C,IAAI,eAAe,IAAI,CAAC,YAAY,OAAO;QAE3C,sCAAsC;QACtC,IAAI,OAAO;QACX,IAAI,OAAO;QAEX,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;YAC3B,QAAQ,SAAS,SAAS,CAAC,EAAE,IAAI;YACjC,OAAO,SAAS,IAAI,IAAI,OAAO;QACjC;QAEA,IAAI,UAAU,OAAO;QACrB,UAAU,UAAU,IAAI,IAAI,KAAK;QAEjC,IAAI,SAAS,SAAS,CAAC,GAAG,MAAM,SAAS,OAAO;QAEhD,qCAAqC;QACrC,OAAO;QACP,OAAO;QAEP,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;YAC3B,QAAQ,SAAS,SAAS,CAAC,EAAE,IAAI;YACjC,OAAO,SAAS,IAAI,IAAI,OAAO;QACjC;QAEA,IAAI,UAAU,OAAO;QACrB,UAAU,UAAU,IAAI,IAAI,KAAK;QAEjC,OAAO,SAAS,SAAS,CAAC,GAAG,MAAM;IACrC;IAEA;;GAEC,GACD,aAAa,IAAY,EAAU;QACjC,MAAM,YAAY,KAAK,OAAO,CAAC,OAAO;QACtC,IAAI,UAAU,MAAM,KAAK,IAAI,OAAO;QAEpC,OAAO,UAAU,OAAO,CACtB,yCACA;IAEJ;AACF;AAGO,MAAM,cAAc,IAAI;uCAChB","debugId":null}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/cpf.ts"],"sourcesContent":["// Serviços de validação e formatação de CPF\n// Essencial para validação de dados de clientes\n\nexport interface CpfValidacao {\n  valido: boolean;\n  formatado: string;\n  limpo: string;\n  erro?: string;\n}\n\nexport interface CpfInfo {\n  cpf: string;\n  valido: boolean;\n  formatado: string;\n  estado?: string;\n  regiao?: string;\n  digito1: number;\n  digito2: number;\n}\n\nclass CpfService {\n  /**\n   * Valida CPF usando algoritmo oficial\n   */\n  validar(cpf: string): CpfValidacao {\n    const cpfLimpo = this.limparCpf(cpf);\n    \n    // Validações básicas\n    if (!cpfLimpo) {\n      return {\n        valido: false,\n        formatado: '',\n        limpo: '',\n        erro: 'CPF não informado'\n      };\n    }\n\n    if (cpfLimpo.length !== 11) {\n      return {\n        valido: false,\n        formatado: cpf,\n        limpo: cpfLimpo,\n        erro: 'CPF deve ter 11 dígitos'\n      };\n    }\n\n    // Verifica se todos os dígitos são iguais\n    if (this.todosDigitosIguais(cpfLimpo)) {\n      return {\n        valido: false,\n        formatado: this.formatarCpf(cpfLimpo),\n        limpo: cpfLimpo,\n        erro: 'CPF inválido: todos os dígitos são iguais'\n      };\n    }\n\n    // Validação dos dígitos verificadores\n    const valido = this.calcularDigitoVerificador(cpfLimpo);\n    \n    return {\n      valido,\n      formatado: this.formatarCpf(cpfLimpo),\n      limpo: cpfLimpo,\n      erro: valido ? undefined : 'CPF inválido: dígitos verificadores incorretos'\n    };\n  }\n\n  /**\n   * Formata CPF para exibição (000.000.000-00)\n   */\n  formatarCpf(cpf: string): string {\n    const cpfLimpo = this.limparCpf(cpf);\n    \n    if (cpfLimpo.length !== 11) {\n      return cpf; // Retorna como recebido se inválido\n    }\n\n    return cpfLimpo.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n\n  /**\n   * Remove formatação do CPF\n   */\n  limparCpf(cpf: string): string {\n    return cpf.replace(/\\D/g, '');\n  }\n\n  /**\n   * Gera CPF válido para testes (NUNCA usar em produção real)\n   */\n  gerarCpfTeste(): string {\n    // Gera os 9 primeiros dígitos\n    const primeiros9 = Array.from({length: 9}, () => \n      Math.floor(Math.random() * 10)\n    );\n\n    // Calcula os dígitos verificadores\n    const cpfParcial = primeiros9.join('');\n    const digito1 = this.calcularPrimeiroDigito(cpfParcial);\n    const digito2 = this.calcularSegundoDigito(cpfParcial + digito1);\n\n    const cpfCompleto = cpfParcial + digito1 + digito2;\n    return this.formatarCpf(cpfCompleto);\n  }\n\n  /**\n   * Obtém informações detalhadas do CPF\n   */\n  obterInfo(cpf: string): CpfInfo {\n    const validacao = this.validar(cpf);\n    const cpfLimpo = validacao.limpo;\n\n    if (!validacao.valido) {\n      return {\n        cpf: validacao.formatado,\n        valido: false,\n        formatado: validacao.formatado,\n        digito1: 0,\n        digito2: 0\n      };\n    }\n\n    // Determina estado baseado no 9º dígito (região fiscal)\n    const estadoInfo = this.obterEstadoPorDigito(parseInt(cpfLimpo[8]));\n\n    return {\n      cpf: cpfLimpo,\n      valido: true,\n      formatado: validacao.formatado,\n      estado: estadoInfo.estado,\n      regiao: estadoInfo.regiao,\n      digito1: parseInt(cpfLimpo[9]),\n      digito2: parseInt(cpfLimpo[10])\n    };\n  }\n\n  /**\n   * Verifica se todos os dígitos são iguais\n   */\n  private todosDigitosIguais(cpf: string): boolean {\n    return cpf.split('').every(digito => digito === cpf[0]);\n  }\n\n  /**\n   * Calcula e verifica os dígitos verificadores\n   */\n  private calcularDigitoVerificador(cpf: string): boolean {\n    const primeiros9 = cpf.substring(0, 9);\n    const digito1Calculado = this.calcularPrimeiroDigito(primeiros9);\n    const digito2Calculado = this.calcularSegundoDigito(primeiros9 + digito1Calculado);\n\n    const digito1Informado = parseInt(cpf[9]);\n    const digito2Informado = parseInt(cpf[10]);\n\n    return digito1Calculado === digito1Informado && digito2Calculado === digito2Informado;\n  }\n\n  /**\n   * Calcula o primeiro dígito verificador\n   */\n  private calcularPrimeiroDigito(primeiros9: string): number {\n    let soma = 0;\n    for (let i = 0; i < 9; i++) {\n      soma += parseInt(primeiros9[i]) * (10 - i);\n    }\n    \n    const resto = soma % 11;\n    return resto < 2 ? 0 : 11 - resto;\n  }\n\n  /**\n   * Calcula o segundo dígito verificador\n   */\n  private calcularSegundoDigito(primeiros10: string): number {\n    let soma = 0;\n    for (let i = 0; i < 10; i++) {\n      soma += parseInt(primeiros10[i]) * (11 - i);\n    }\n    \n    const resto = soma % 11;\n    return resto < 2 ? 0 : 11 - resto;\n  }\n\n  /**\n   * Determina estado baseado no dígito da região fiscal\n   */\n  private obterEstadoPorDigito(digito: number): { estado: string; regiao: string } {\n    const regioes = {\n      0: { estado: 'RS', regiao: 'Rio Grande do Sul' },\n      1: { estado: 'DF/GO/MS/TO', regiao: 'Distrito Federal, Goiás, Mato Grosso do Sul, Tocantins' },\n      2: { estado: 'AC/AM/AP/PA/RO/RR', regiao: 'Acre, Amazonas, Amapá, Pará, Rondônia, Roraima' },\n      3: { estado: 'CE/MA/PI', regiao: 'Ceará, Maranhão, Piauí' },\n      4: { estado: 'AL/PB/PE/RN', regiao: 'Alagoas, Paraíba, Pernambuco, Rio Grande do Norte' },\n      5: { estado: 'BA/SE', regiao: 'Bahia, Sergipe' },\n      6: { estado: 'MG', regiao: 'Minas Gerais' },\n      7: { estado: 'ES/RJ', regiao: 'Espírito Santo, Rio de Janeiro' },\n      8: { estado: 'SP', regiao: 'São Paulo' },\n      9: { estado: 'PR/SC', regiao: 'Paraná, Santa Catarina' }\n    };\n\n    return regioes[digito as keyof typeof regioes] || { estado: 'Desconhecido', regiao: 'Região não identificada' };\n  }\n\n  /**\n   * Validação em tempo real para formulários\n   */\n  validarEmTempoReal(cpf: string): {\n    status: 'vazio' | 'incompleto' | 'invalido' | 'valido';\n    mensagem: string;\n    formatado: string;\n  } {\n    const cpfLimpo = this.limparCpf(cpf);\n\n    if (!cpfLimpo) {\n      return {\n        status: 'vazio',\n        mensagem: 'Digite o CPF',\n        formatado: ''\n      };\n    }\n\n    if (cpfLimpo.length < 11) {\n      return {\n        status: 'incompleto',\n        mensagem: `${cpfLimpo.length}/11 dígitos`,\n        formatado: this.formatarCpf(cpfLimpo)\n      };\n    }\n\n    const validacao = this.validar(cpfLimpo);\n    \n    return {\n      status: validacao.valido ? 'valido' : 'invalido',\n      mensagem: validacao.valido ? 'CPF válido' : (validacao.erro || 'CPF inválido'),\n      formatado: validacao.formatado\n    };\n  }\n}\n\n// Singleton instance\nexport const cpfService = new CpfService();\n\n// Hook para React\nexport function useCpf() {\n  return {\n    validar: cpfService.validar.bind(cpfService),\n    formatarCpf: cpfService.formatarCpf.bind(cpfService),\n    limparCpf: cpfService.limparCpf.bind(cpfService),\n    obterInfo: cpfService.obterInfo.bind(cpfService),\n    validarEmTempoReal: cpfService.validarEmTempoReal.bind(cpfService),\n    gerarCpfTeste: cpfService.gerarCpfTeste.bind(cpfService)\n  };\n}\n\n// Utilitários adicionais\nexport const cpfUtils = {\n  /**\n   * Máscara para input de CPF\n   */\n  aplicarMascara(valor: string): string {\n    return cpfService.formatarCpf(valor);\n  },\n\n  /**\n   * Validação rápida (apenas boolean)\n   */\n  ehValido(cpf: string): boolean {\n    return cpfService.validar(cpf).valido;\n  },\n\n  /**\n   * Lista de CPFs inválidos conhecidos\n   */\n  cpfsInvalidosConhecidos: [\n    '00000000000', '11111111111', '22222222222', '33333333333',\n    '44444444444', '55555555555', '66666666666', '77777777777',\n    '88888888888', '99999999999', '12345678909', '11144477735'\n  ],\n\n  /**\n   * Verifica se é um CPF de teste/inválido conhecido\n   */\n  ehCpfTeste(cpf: string): boolean {\n    const cpfLimpo = cpfService.limparCpf(cpf);\n    return this.cpfsInvalidosConhecidos.includes(cpfLimpo);\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1437, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/fipe.ts"],"sourcesContent":["// Serviços de integração com a API FIPE da BrasilAPI\n// Essencial para consultoria veicular - consulta de preços de mercado\n\nexport interface MarcaFipe {\n  nome: string;\n  valor: string;\n}\n\nexport interface VeiculoFipe {\n  modelo: string;\n}\n\nexport interface PrecoFipe {\n  valor: string;\n  marca: string;\n  modelo: string;\n  anoModelo: number;\n  combustivel: string;\n  codigoFipe: string;\n  mesReferencia: string;\n  tipoVeiculo: number;\n  siglaCombustivel: string;\n  dataConsulta: string;\n}\n\nexport interface TabelaFipe {\n  codigo: number;\n  mes: string;\n}\n\nexport type TipoVeiculo = 'carros' | 'motos' | 'caminhoes';\n\nclass FipeService {\n  private readonly baseUrl = 'https://brasilapi.com.br/api/fipe';\n\n  /**\n   * Busca todas as marcas por tipo de veículo\n   */\n  async getMarcas(tipoVeiculo: TipoVeiculo, tabelaReferencia?: number): Promise<MarcaFipe[]> {\n    try {\n      const params = new URLSearchParams();\n      if (tabelaReferencia) {\n        params.append('tabela_referencia', tabelaReferencia.toString());\n      }\n      \n      const url = `/api/fipe/marcas/${tipoVeiculo}${params.toString() ? `?${params}` : ''}`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ao buscar marcas: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return data.marcas || [];\n    } catch (error) {\n      console.error('Erro na consulta de marcas FIPE:', error);\n      throw new Error('Falha ao consultar marcas na tabela FIPE');\n    }\n  }\n\n  /**\n   * Busca veículos por marca e tipo\n   */\n  async getVeiculos(\n    tipoVeiculo: TipoVeiculo, \n    codigoMarca: string, \n    tabelaReferencia?: number\n  ): Promise<VeiculoFipe[]> {\n    try {\n      const params = new URLSearchParams();\n      if (tabelaReferencia) {\n        params.append('tabela_referencia', tabelaReferencia.toString());\n      }\n      \n      const url = `/api/fipe/veiculo/${tipoVeiculo}/${codigoMarca}${params.toString() ? `?${params}` : ''}`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ao buscar veículos: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return Array.isArray(data.veiculos) ? data.veiculos : [data.veiculos];\n    } catch (error) {\n      console.error('Erro na consulta de veículos FIPE:', error);\n      throw new Error('Falha ao consultar veículos na tabela FIPE');\n    }\n  }\n\n  /**\n   * Consulta preço específico por código FIPE\n   */\n  async getPreco(codigoFipe: string, tabelaReferencia?: number): Promise<PrecoFipe[]> {\n    try {\n      const params = new URLSearchParams();\n      if (tabelaReferencia) {\n        params.append('tabela_referencia', tabelaReferencia.toString());\n      }\n      \n      const url = `/api/fipe/preco/${codigoFipe}${params.toString() ? `?${params}` : ''}`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ao buscar preço: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return Array.isArray(data.preco) ? data.preco : [data.preco];\n    } catch (error) {\n      console.error('Erro na consulta de preço FIPE:', error);\n      throw new Error('Falha ao consultar preço na tabela FIPE');\n    }\n  }\n\n  /**\n   * Lista todas as tabelas de referência disponíveis\n   */\n  async getTabelas(): Promise<TabelaFipe[]> {\n    try {\n      const url = `/api/fipe/tabelas`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ao buscar tabelas: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return data.tabelas || [];\n    } catch (error) {\n      console.error('Erro na consulta de tabelas FIPE:', error);\n      throw new Error('Falha ao consultar tabelas FIPE');\n    }\n  }\n\n  /**\n   * Busca completa: marca -> veículo -> preço\n   * Útil para fluxos completos de consulta\n   */\n  async getBuscaCompleta(\n    tipoVeiculo: TipoVeiculo,\n    nomeMarca: string,\n    nomeVeiculo: string\n  ): Promise<{\n    marca: MarcaFipe | null;\n    veiculo: VeiculoFipe | null;\n    preco: PrecoFipe[] | null;\n  }> {\n    try {\n      // 1. Buscar marcas\n      const marcas = await this.getMarcas(tipoVeiculo);\n      const marca = marcas.find(m => \n        m.nome.toLowerCase().includes(nomeMarca.toLowerCase())\n      );\n      \n      if (!marca) {\n        return { marca: null, veiculo: null, preco: null };\n      }\n\n      // 2. Buscar veículos da marca\n      const veiculos = await this.getVeiculos(tipoVeiculo, marca.valor);\n      const veiculo = veiculos.find(v => \n        v.modelo.toLowerCase().includes(nomeVeiculo.toLowerCase())\n      );\n      \n      if (!veiculo) {\n        return { marca, veiculo: null, preco: null };\n      }\n\n      // 3. Buscar preço do veículo\n      // Nota: A API Brasil não tem endpoint direto para preços por veículo específico\n      // Esta funcionalidade requer implementação personalizada\n      const preco = null; // await this.getPreco(veiculo.codigoFipe);\n      \n      return { marca, veiculo, preco };\n      \n    } catch (error) {\n      console.error('Erro na busca completa FIPE:', error);\n      throw new Error('Falha na consulta completa FIPE');\n    }\n  }\n\n  /**\n   * Formata valor monetário da FIPE\n   */\n  formatarValor(valor: string): string {\n    // Remove \"R$ \" e formata para número\n    const numeroLimpo = valor.replace(/[^\\d,]/g, '').replace(',', '.');\n    const numero = parseFloat(numeroLimpo);\n    \n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(numero);\n  }\n\n  /**\n   * Extrai apenas o valor numérico\n   */\n  extrairValorNumerico(valor: string): number {\n    const numeroLimpo = valor.replace(/[^\\d,]/g, '').replace(',', '.');\n    return parseFloat(numeroLimpo) || 0;\n  }\n}\n\n// Singleton instance\nexport const fipeService = new FipeService();\n\n// Hook personalizado para React (se usando)\nexport function useFipe() {\n  return {\n    getMarcas: fipeService.getMarcas.bind(fipeService),\n    getVeiculos: fipeService.getVeiculos.bind(fipeService),\n    getPreco: fipeService.getPreco.bind(fipeService),\n    getTabelas: fipeService.getTabelas.bind(fipeService),\n    getBuscaCompleta: fipeService.getBuscaCompleta.bind(fipeService),\n    formatarValor: fipeService.formatarValor.bind(fipeService),\n    extrairValorNumerico: fipeService.extrairValorNumerico.bind(fipeService),\n  };\n}\n\n// Utilitários adicionais\nexport const fipeUtils = {\n  /**\n   * Converte tipo de veículo para exibição\n   */\n  tipoVeiculoParaTexto(tipo: TipoVeiculo): string {\n    const tipos = {\n      carros: 'Automóveis',\n      motos: 'Motocicletas',\n      caminhoes: 'Caminhões'\n    };\n    return tipos[tipo];\n  },\n\n  /**\n   * Valida código FIPE\n   */\n  validarCodigoFipe(codigo: string): boolean {\n    // Código FIPE geralmente tem formato XXX-XXX-XX\n    const regex = /^\\d{3}-\\d{3}-\\d{2}$/;\n    return regex.test(codigo);\n  },\n\n  /**\n   * Calcula depreciação baseada no ano\n   */\n  calcularDepreciacao(valorAtual: number, anoVeiculo: number): {\n    valorEstimado: number;\n    percentualDepreciacao: number;\n  } {\n    const anoAtual = new Date().getFullYear();\n    const idadeVeiculo = anoAtual - anoVeiculo;\n    \n    // Estimativa simples: 10% ao ano (pode ser ajustada)\n    const percentualDepreciacao = Math.min(idadeVeiculo * 0.1, 0.8); // Max 80%\n    const valorEstimado = valorAtual * (1 - percentualDepreciacao);\n    \n    return {\n      valorEstimado: Math.round(valorEstimado),\n      percentualDepreciacao: Math.round(percentualDepreciacao * 100)\n    };\n  }\n};\n"],"names":[],"mappings":"AAAA,qDAAqD;AACrD,sEAAsE;;;;;;;;AA+BtE,MAAM;IAGJ;;GAEC,GACD,MAAM,UAAU,WAAwB,EAAE,gBAAyB,EAAwB;QACzF,IAAI;YACF,MAAM,SAAS,IAAI;YACnB,IAAI,kBAAkB;gBACpB,OAAO,MAAM,CAAC,qBAAqB,iBAAiB,QAAQ;YAC9D;YAEA,MAAM,MAAM,AAAC,oBAAiC,OAAd,aAAoD,OAAtC,OAAO,QAAQ,KAAK,AAAC,IAAU,OAAP,UAAW;YACjF,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,AAAC,0BAA6C,OAApB,SAAS,UAAU;YAClF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,KAAK,MAAM,IAAI,EAAE;QAC1B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oCAAoC;YAClD,MAAM,IAAI,MAAM;QAClB;IACF;IAEA;;GAEC,GACD,MAAM,YACJ,WAAwB,EACxB,WAAmB,EACnB,gBAAyB,EACD;QACxB,IAAI;YACF,MAAM,SAAS,IAAI;YACnB,IAAI,kBAAkB;gBACpB,OAAO,MAAM,CAAC,qBAAqB,iBAAiB,QAAQ;YAC9D;YAEA,MAAM,MAAM,AAAC,qBAAmC,OAAf,aAAY,KAAiB,OAAd,aAAoD,OAAtC,OAAO,QAAQ,KAAK,AAAC,IAAU,OAAP,UAAW;YACjG,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,AAAC,4BAA+C,OAApB,SAAS,UAAU;YACpF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,MAAM,OAAO,CAAC,KAAK,QAAQ,IAAI,KAAK,QAAQ,GAAG;gBAAC,KAAK,QAAQ;aAAC;QACvE,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YACpD,MAAM,IAAI,MAAM;QAClB;IACF;IAEA;;GAEC,GACD,MAAM,SAAS,UAAkB,EAAE,gBAAyB,EAAwB;QAClF,IAAI;YACF,MAAM,SAAS,IAAI;YACnB,IAAI,kBAAkB;gBACpB,OAAO,MAAM,CAAC,qBAAqB,iBAAiB,QAAQ;YAC9D;YAEA,MAAM,MAAM,AAAC,mBAA+B,OAAb,YAAmD,OAAtC,OAAO,QAAQ,KAAK,AAAC,IAAU,OAAP,UAAW;YAC/E,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,AAAC,yBAA4C,OAApB,SAAS,UAAU;YACjF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,MAAM,OAAO,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG;gBAAC,KAAK,KAAK;aAAC;QAC9D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;YACjD,MAAM,IAAI,MAAM;QAClB;IACF;IAEA;;GAEC,GACD,MAAM,aAAoC;QACxC,IAAI;YACF,MAAM,MAAO;YACb,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,AAAC,2BAA8C,OAApB,SAAS,UAAU;YACnF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,KAAK,OAAO,IAAI,EAAE;QAC3B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,MAAM,IAAI,MAAM;QAClB;IACF;IAEA;;;GAGC,GACD,MAAM,iBACJ,WAAwB,EACxB,SAAiB,EACjB,WAAmB,EAKlB;QACD,IAAI;YACF,mBAAmB;YACnB,MAAM,SAAS,MAAM,IAAI,CAAC,SAAS,CAAC;YACpC,MAAM,QAAQ,OAAO,IAAI,CAAC,CAAA,IACxB,EAAE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,UAAU,WAAW;YAGrD,IAAI,CAAC,OAAO;gBACV,OAAO;oBAAE,OAAO;oBAAM,SAAS;oBAAM,OAAO;gBAAK;YACnD;YAEA,8BAA8B;YAC9B,MAAM,WAAW,MAAM,IAAI,CAAC,WAAW,CAAC,aAAa,MAAM,KAAK;YAChE,MAAM,UAAU,SAAS,IAAI,CAAC,CAAA,IAC5B,EAAE,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,YAAY,WAAW;YAGzD,IAAI,CAAC,SAAS;gBACZ,OAAO;oBAAE;oBAAO,SAAS;oBAAM,OAAO;gBAAK;YAC7C;YAEA,6BAA6B;YAC7B,gFAAgF;YAChF,yDAAyD;YACzD,MAAM,QAAQ,MAAM,2CAA2C;YAE/D,OAAO;gBAAE;gBAAO;gBAAS;YAAM;QAEjC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,MAAM,IAAI,MAAM;QAClB;IACF;IAEA;;GAEC,GACD,cAAc,KAAa,EAAU;QACnC,qCAAqC;QACrC,MAAM,cAAc,MAAM,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,KAAK;QAC9D,MAAM,SAAS,WAAW;QAE1B,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ;IAEA;;GAEC,GACD,qBAAqB,KAAa,EAAU;QAC1C,MAAM,cAAc,MAAM,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,KAAK;QAC9D,OAAO,WAAW,gBAAgB;IACpC;;QA5KA,+KAAiB,WAAU;;AA6K7B;AAGO,MAAM,cAAc,IAAI;AAGxB,SAAS;IACd,OAAO;QACL,WAAW,YAAY,SAAS,CAAC,IAAI,CAAC;QACtC,aAAa,YAAY,WAAW,CAAC,IAAI,CAAC;QAC1C,UAAU,YAAY,QAAQ,CAAC,IAAI,CAAC;QACpC,YAAY,YAAY,UAAU,CAAC,IAAI,CAAC;QACxC,kBAAkB,YAAY,gBAAgB,CAAC,IAAI,CAAC;QACpD,eAAe,YAAY,aAAa,CAAC,IAAI,CAAC;QAC9C,sBAAsB,YAAY,oBAAoB,CAAC,IAAI,CAAC;IAC9D;AACF;AAGO,MAAM,YAAY;IACvB;;GAEC,GACD,sBAAqB,IAAiB;QACpC,MAAM,QAAQ;YACZ,QAAQ;YACR,OAAO;YACP,WAAW;QACb;QACA,OAAO,KAAK,CAAC,KAAK;IACpB;IAEA;;GAEC,GACD,mBAAkB,MAAc;QAC9B,gDAAgD;QAChD,MAAM,QAAQ;QACd,OAAO,MAAM,IAAI,CAAC;IACpB;IAEA;;GAEC,GACD,qBAAoB,UAAkB,EAAE,UAAkB;QAIxD,MAAM,WAAW,IAAI,OAAO,WAAW;QACvC,MAAM,eAAe,WAAW;QAEhC,qDAAqD;QACrD,MAAM,wBAAwB,KAAK,GAAG,CAAC,eAAe,KAAK,MAAM,UAAU;QAC3E,MAAM,gBAAgB,aAAa,CAAC,IAAI,qBAAqB;QAE7D,OAAO;YACL,eAAe,KAAK,KAAK,CAAC;YAC1B,uBAAuB,KAAK,KAAK,CAAC,wBAAwB;QAC5D;IACF;AACF","debugId":null}},
    {"offset": {"line": 1644, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/ddd.ts"],"sourcesContent":["// Serviços de DDD e validação de telefones\n// Útil para validação e formatação de números de telefone brasileiros\n\nexport interface InfoDDD {\n  ddd: string;\n  estado: string;\n  cidades: string[];\n  regiao: string;\n}\n\nexport interface TelefoneInfo {\n  numero: string;\n  ddd: string;\n  tipo: 'fixo' | 'celular';\n  estado: string;\n  valido: boolean;\n  formatado: string;\n}\n\nclass DddService {\n  private readonly baseUrl = 'https://brasilapi.com.br/api/ddd';\n\n  /**\n   * Busca informações de um DDD\n   */\n  async buscarDDD(ddd: string): Promise<InfoDDD> {\n    const dddLimpo = ddd.replace(/\\D/g, '');\n    \n    if (dddLimpo.length !== 2) {\n      throw new Error('DDD deve ter 2 dígitos');\n    }\n\n    try {\n      const response = await fetch(`/api/ddd?ddd=${dddLimpo}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar DDD');\n      }\n\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error('DDD não encontrado');\n      }\n\n      return data.ddd;\n    } catch (error) {\n      console.error('Erro ao buscar DDD:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Valida e analisa um número de telefone brasileiro\n   */\n  async analisarTelefone(telefone: string): Promise<TelefoneInfo> {\n    const numeroLimpo = telefone.replace(/\\D/g, '');\n    \n    if (numeroLimpo.length < 10 || numeroLimpo.length > 11) {\n      throw new Error('Telefone deve ter 10 ou 11 dígitos');\n    }\n\n    const ddd = numeroLimpo.slice(0, 2);\n    const numero = numeroLimpo.slice(2);\n    const tipo = numeroLimpo.length === 11 ? 'celular' : 'fixo';\n\n    try {\n      const infoDdd = await this.buscarDDD(ddd);\n      \n      return {\n        numero: numeroLimpo,\n        ddd,\n        tipo,\n        estado: infoDdd.estado,\n        valido: this.validarTelefone(numeroLimpo),\n        formatado: this.formatarTelefone(numeroLimpo)\n      };\n    } catch (error) {\n      return {\n        numero: numeroLimpo,\n        ddd,\n        tipo,\n        estado: 'Desconhecido',\n        valido: this.validarTelefone(numeroLimpo),\n        formatado: this.formatarTelefone(numeroLimpo)\n      };\n    }\n  }\n\n  /**\n   * Valida formato de telefone\n   */\n  validarTelefone(telefone: string): boolean {\n    const numeroLimpo = telefone.replace(/\\D/g, '');\n    \n    // Deve ter 10 ou 11 dígitos\n    if (numeroLimpo.length < 10 || numeroLimpo.length > 11) {\n      return false;\n    }\n\n    // DDD válido (11-99)\n    const ddd = parseInt(numeroLimpo.slice(0, 2));\n    if (ddd < 11 || ddd > 99) {\n      return false;\n    }\n\n    // Primeiro dígito do número não pode ser 0 ou 1\n    const primeiroDigito = parseInt(numeroLimpo[2]);\n    if (primeiroDigito <= 1) {\n      return false;\n    }\n\n    // Para celular (11 dígitos), deve começar com 9\n    if (numeroLimpo.length === 11 && numeroLimpo[2] !== '9') {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Formata telefone para exibição\n   */\n  formatarTelefone(telefone: string): string {\n    const numeroLimpo = telefone.replace(/\\D/g, '');\n    \n    if (numeroLimpo.length === 10) {\n      // Telefone fixo: (00) 0000-0000\n      return numeroLimpo.replace(/(\\d{2})(\\d{4})(\\d{4})/, '($1) $2-$3');\n    } else if (numeroLimpo.length === 11) {\n      // Celular: (00) 90000-0000\n      return numeroLimpo.replace(/(\\d{2})(\\d{5})(\\d{4})/, '($1) $2-$3');\n    }\n    \n    return telefone;\n  }\n\n  /**\n   * Lista todos os DDDs e seus estados\n   */\n  listarDDDs(): { [ddd: string]: string } {\n    return {\n      '11': 'SP', '12': 'SP', '13': 'SP', '14': 'SP', '15': 'SP', '16': 'SP', '17': 'SP', '18': 'SP', '19': 'SP',\n      '21': 'RJ', '22': 'RJ', '24': 'RJ',\n      '27': 'ES', '28': 'ES',\n      '31': 'MG', '32': 'MG', '33': 'MG', '34': 'MG', '35': 'MG', '37': 'MG', '38': 'MG',\n      '41': 'PR', '42': 'PR', '43': 'PR', '44': 'PR', '45': 'PR', '46': 'PR',\n      '47': 'SC', '48': 'SC', '49': 'SC',\n      '51': 'RS', '53': 'RS', '54': 'RS', '55': 'RS',\n      '61': 'DF', '62': 'GO', '64': 'GO',\n      '63': 'TO',\n      '65': 'MT', '66': 'MT',\n      '67': 'MS',\n      '68': 'AC',\n      '69': 'RO',\n      '71': 'BA', '73': 'BA', '74': 'BA', '75': 'BA', '77': 'BA',\n      '79': 'SE',\n      '81': 'PE', '87': 'PE',\n      '82': 'AL',\n      '83': 'PB',\n      '84': 'RN',\n      '85': 'CE', '88': 'CE',\n      '86': 'PI', '89': 'PI',\n      '91': 'PA', '93': 'PA', '94': 'PA',\n      '92': 'AM', '97': 'AM',\n      '95': 'RR',\n      '96': 'AP',\n      '98': 'MA', '99': 'MA'\n    };\n  }\n}\n\n// Singleton instance\nexport const dddService = new DddService();\n\n// Hook personalizado para React\nexport function useDdd() {\n  return {\n    buscarDDD: dddService.buscarDDD.bind(dddService),\n    analisarTelefone: dddService.analisarTelefone.bind(dddService),\n    validarTelefone: dddService.validarTelefone.bind(dddService),\n    formatarTelefone: dddService.formatarTelefone.bind(dddService),\n    listarDDDs: dddService.listarDDDs.bind(dddService),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1840, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/banco.ts"],"sourcesContent":["// Serviços de bancos e PIX\n// Útil para validação de dados bancários e PIX\n\nexport interface BancoInfo {\n  ispb: string;\n  name: string;\n  code: number;\n  fullName: string;\n}\n\nexport interface ParticipantePix {\n  ispb: string;\n  nome: string;\n  nome_reduzido: string;\n  modalidade_participacao: string;\n  tipo_participacao: string;\n  inicio_operacao: string;\n}\n\nexport interface ChavePixInfo {\n  tipo: 'cpf' | 'cnpj' | 'email' | 'telefone' | 'chave_aleatoria';\n  valida: boolean;\n  formatada: string;\n}\n\nclass BancoService {\n  private readonly baseUrl = 'https://brasilapi.com.br/api/banks';\n\n  /**\n   * Lista todos os bancos brasileiros\n   */\n  async listarBancos(): Promise<BancoInfo[]> {\n    try {\n      const response = await fetch('/api/bancos');\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar bancos');\n      }\n\n      const data = await response.json();\n      return data.bancos || [];\n    } catch (error) {\n      console.error('Erro ao buscar bancos:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Busca banco por código\n   */\n  async buscarBancoPorCodigo(codigo: string): Promise<BancoInfo> {\n    try {\n      const response = await fetch(`/api/bancos/${codigo}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Banco não encontrado');\n      }\n\n      const data = await response.json();\n      return data.banco;\n    } catch (error) {\n      console.error('Erro ao buscar banco:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Lista participantes do PIX\n   */\n  async listarParticipantesPix(): Promise<ParticipantePix[]> {\n    try {\n      const response = await fetch('/api/pix/participantes');\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar participantes PIX');\n      }\n\n      const data = await response.json();\n      return data.participantes || [];\n    } catch (error) {\n      console.error('Erro ao buscar participantes PIX:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Valida formato de chave PIX\n   */\n  validarChavePix(chave: string): ChavePixInfo {\n    const chaveLimpa = chave.trim();\n\n    // CPF\n    if (/^\\d{11}$/.test(chaveLimpa.replace(/\\D/g, '')) && chaveLimpa.replace(/\\D/g, '').length === 11) {\n      return {\n        tipo: 'cpf',\n        valida: this.validarCpf(chaveLimpa.replace(/\\D/g, '')),\n        formatada: this.formatarCpf(chaveLimpa.replace(/\\D/g, ''))\n      };\n    }\n\n    // CNPJ\n    if (/^\\d{14}$/.test(chaveLimpa.replace(/\\D/g, '')) && chaveLimpa.replace(/\\D/g, '').length === 14) {\n      return {\n        tipo: 'cnpj',\n        valida: this.validarCnpj(chaveLimpa.replace(/\\D/g, '')),\n        formatada: this.formatarCnpj(chaveLimpa.replace(/\\D/g, ''))\n      };\n    }\n\n    // Email\n    if (/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(chaveLimpa)) {\n      return {\n        tipo: 'email',\n        valida: true,\n        formatada: chaveLimpa.toLowerCase()\n      };\n    }\n\n    // Telefone\n    if (/^\\+55\\d{10,11}$/.test(chaveLimpa.replace(/\\D/g, '+55'))) {\n      const numeroLimpo = chaveLimpa.replace(/\\D/g, '');\n      if (numeroLimpo.length >= 12 && numeroLimpo.length <= 13) {\n        return {\n          tipo: 'telefone',\n          valida: true,\n          formatada: `+55${numeroLimpo.slice(-11)}`\n        };\n      }\n    }\n\n    // Chave aleatória (UUID)\n    if (/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(chaveLimpa)) {\n      return {\n        tipo: 'chave_aleatoria',\n        valida: true,\n        formatada: chaveLimpa.toLowerCase()\n      };\n    }\n\n    return {\n      tipo: 'chave_aleatoria',\n      valida: false,\n      formatada: chaveLimpa\n    };\n  }\n\n  /**\n   * Valida CPF (algoritmo básico)\n   */\n  private validarCpf(cpf: string): boolean {\n    if (cpf.length !== 11 || /^(\\d)\\1{10}$/.test(cpf)) return false;\n    \n    let soma = 0;\n    for (let i = 0; i < 9; i++) {\n      soma += parseInt(cpf[i]) * (10 - i);\n    }\n    \n    let digito1 = soma % 11;\n    digito1 = digito1 < 2 ? 0 : 11 - digito1;\n    \n    if (parseInt(cpf[9]) !== digito1) return false;\n    \n    soma = 0;\n    for (let i = 0; i < 10; i++) {\n      soma += parseInt(cpf[i]) * (11 - i);\n    }\n    \n    let digito2 = soma % 11;\n    digito2 = digito2 < 2 ? 0 : 11 - digito2;\n    \n    return parseInt(cpf[10]) === digito2;\n  }\n\n  /**\n   * Valida CNPJ (algoritmo básico)\n   */\n  private validarCnpj(cnpj: string): boolean {\n    if (cnpj.length !== 14 || /^(\\d)\\1{13}$/.test(cnpj)) return false;\n    \n    let soma = 0;\n    let peso = 5;\n    \n    for (let i = 0; i < 12; i++) {\n      soma += parseInt(cnpj[i]) * peso;\n      peso = peso === 2 ? 9 : peso - 1;\n    }\n    \n    let digito1 = soma % 11;\n    digito1 = digito1 < 2 ? 0 : 11 - digito1;\n    \n    if (parseInt(cnpj[12]) !== digito1) return false;\n    \n    soma = 0;\n    peso = 6;\n    \n    for (let i = 0; i < 13; i++) {\n      soma += parseInt(cnpj[i]) * peso;\n      peso = peso === 2 ? 9 : peso - 1;\n    }\n    \n    let digito2 = soma % 11;\n    digito2 = digito2 < 2 ? 0 : 11 - digito2;\n    \n    return parseInt(cnpj[13]) === digito2;\n  }\n\n  /**\n   * Formata CPF\n   */\n  private formatarCpf(cpf: string): string {\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n\n  /**\n   * Formata CNPJ\n   */\n  private formatarCnpj(cnpj: string): string {\n    return cnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\n  }\n\n  /**\n   * Lista dos principais bancos brasileiros\n   */\n  getBancosPrincipais(): BancoInfo[] {\n    return [\n      { ispb: '00000000', name: 'Banco do Brasil', code: 1, fullName: 'Banco do Brasil S.A.' },\n      { ispb: '00000208', name: 'BTG Pactual', code: 208, fullName: 'Banco BTG Pactual S.A.' },\n      { ispb: '00000237', name: 'Bradesco', code: 237, fullName: 'Banco Bradesco S.A.' },\n      { ispb: '00000341', name: 'Itaú', code: 341, fullName: 'Itaú Unibanco S.A.' },\n      { ispb: '00000104', name: 'Caixa Econômica', code: 104, fullName: 'Caixa Econômica Federal' },\n      { ispb: '00000260', name: 'Nu Pagamentos', code: 260, fullName: 'Nu Pagamentos S.A.' },\n      { ispb: '00000212', name: 'Banco Original', code: 212, fullName: 'Banco Original S.A.' },\n      { ispb: '00000290', name: 'PagSeguro', code: 290, fullName: 'PagSeguro Internet S.A.' },\n      { ispb: '00000323', name: 'Mercado Pago', code: 323, fullName: 'Mercado Pago S.A.' },\n      { ispb: '00000077', name: 'Banco Inter', code: 77, fullName: 'Banco Inter S.A.' }\n    ];\n  }\n}\n\n// Singleton instance\nexport const bancoService = new BancoService();\n\n// Hook personalizado para React\nexport function useBanco() {\n  return {\n    listarBancos: bancoService.listarBancos.bind(bancoService),\n    buscarBancoPorCodigo: bancoService.buscarBancoPorCodigo.bind(bancoService),\n    listarParticipantesPix: bancoService.listarParticipantesPix.bind(bancoService),\n    validarChavePix: bancoService.validarChavePix.bind(bancoService),\n    getBancosPrincipais: bancoService.getBancosPrincipais.bind(bancoService),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2091, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/feriado.ts"],"sourcesContent":["// Serviço de feriados nacionais brasileiros\n// Útil para sistemas de agendamento e calendário\n\nexport interface FeriadoNacional {\n  date: string;        // YYYY-MM-DD\n  name: string;        // Nome do feriado\n  type: string;        // Tipo (national, religious, etc.)\n}\n\nexport interface InfoFeriado {\n  data: Date;\n  nome: string;\n  tipo: string;\n  diaSemana: string;\n  proximoFeriado?: FeriadoNacional;\n  diasAteProximo?: number;\n  ehFimDeSemana: boolean;\n  ehPonteUtil: boolean;\n}\n\nclass FeriadoService {\n  private readonly feriadosFixos = [\n    { date: '01-01', name: 'Confraternização Universal', type: 'national' },\n    { date: '04-21', name: 'Tiradentes', type: 'national' },\n    { date: '05-01', name: 'Dia do Trabalhador', type: 'national' },\n    { date: '09-07', name: 'Independência do Brasil', type: 'national' },\n    { date: '10-12', name: 'Nossa Senhora Aparecida', type: 'religious' },\n    { date: '11-02', name: 'Finados', type: 'religious' },\n    { date: '11-15', name: 'Proclamação da República', type: 'national' },\n    { date: '12-25', name: 'Natal', type: 'religious' }\n  ];\n\n  private readonly diasSemana = [\n    'Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira',\n    'Quinta-feira', 'Sexta-feira', 'Sábado'\n  ];\n\n  /**\n   * Busca feriados de um ano específico\n   */\n  async buscarFeriados(ano: number): Promise<FeriadoNacional[]> {\n    try {\n      const response = await fetch(`/api/feriados/${ano}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar feriados');\n      }\n\n      const data = await response.json();\n      return data.feriados || [];\n    } catch (error) {\n      console.error('Erro ao buscar feriados:', error);\n      // Fallback para feriados fixos\n      return this.getFeriadosFixos(ano);\n    }\n  }\n\n  /**\n   * Verifica se uma data é feriado\n   */\n  async ehFeriado(data: Date | string): Promise<boolean> {\n    try {\n      const dataObj = typeof data === 'string' ? new Date(data) : data;\n      const ano = dataObj.getFullYear();\n      const feriados = await this.buscarFeriados(ano);\n      \n      const dataStr = dataObj.toISOString().split('T')[0];\n      return feriados.some(feriado => feriado.date === dataStr);\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Busca próximo feriado\n   */\n  async buscarProximoFeriado(dataReferencia: Date = new Date()): Promise<FeriadoNacional | null> {\n    try {\n      const ano = dataReferencia.getFullYear();\n      const feriados = await this.buscarFeriados(ano);\n      const feriadosProximoAno = await this.buscarFeriados(ano + 1);\n      \n      const todosFeriados = [...feriados, ...feriadosProximoAno];\n      const dataRef = dataReferencia.toISOString().split('T')[0];\n      \n      const feriadosFuturos = todosFeriados\n        .filter(feriado => feriado.date > dataRef)\n        .sort((a, b) => a.date.localeCompare(b.date));\n      \n      return feriadosFuturos[0] || null;\n    } catch (error) {\n      console.error('Erro ao buscar próximo feriado:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Calcula dias úteis entre duas datas\n   */\n  async calcularDiasUteis(dataInicio: Date, dataFim: Date): Promise<number> {\n    try {\n      let diasUteis = 0;\n      const dataAtual = new Date(dataInicio);\n      const ano = dataInicio.getFullYear();\n      const feriados = await this.buscarFeriados(ano);\n      const feriadosDatas = new Set(feriados.map(f => f.date));\n      \n      while (dataAtual <= dataFim) {\n        const diaSemana = dataAtual.getDay();\n        const dataStr = dataAtual.toISOString().split('T')[0];\n        \n        // Não é fim de semana e não é feriado\n        if (diaSemana !== 0 && diaSemana !== 6 && !feriadosDatas.has(dataStr)) {\n          diasUteis++;\n        }\n        \n        dataAtual.setDate(dataAtual.getDate() + 1);\n      }\n      \n      return diasUteis;\n    } catch (error) {\n      console.error('Erro ao calcular dias úteis:', error);\n      return 0;\n    }\n  }\n\n  /**\n   * Adiciona dias úteis a uma data\n   */\n  async adicionarDiasUteis(dataInicio: Date, diasUteis: number): Promise<Date> {\n    try {\n      const dataResultado = new Date(dataInicio);\n      const ano = dataInicio.getFullYear();\n      const feriados = await this.buscarFeriados(ano);\n      const feriadosDatas = new Set(feriados.map(f => f.date));\n      \n      let diasAdicionados = 0;\n      \n      while (diasAdicionados < diasUteis) {\n        dataResultado.setDate(dataResultado.getDate() + 1);\n        \n        const diaSemana = dataResultado.getDay();\n        const dataStr = dataResultado.toISOString().split('T')[0];\n        \n        // É dia útil\n        if (diaSemana !== 0 && diaSemana !== 6 && !feriadosDatas.has(dataStr)) {\n          diasAdicionados++;\n        }\n      }\n      \n      return dataResultado;\n    } catch (error) {\n      console.error('Erro ao adicionar dias úteis:', error);\n      return dataInicio;\n    }\n  }\n\n  /**\n   * Obtém informações detalhadas sobre uma data\n   */\n  async getInfoData(data: Date): Promise<InfoFeriado> {\n    try {\n      const ehFeriado = await this.ehFeriado(data);\n      const proximoFeriado = await this.buscarProximoFeriado(data);\n      const diaSemana = data.getDay();\n      const ehFimDeSemana = diaSemana === 0 || diaSemana === 6;\n      \n      let diasAteProximo = undefined;\n      if (proximoFeriado) {\n        const dataProximo = new Date(proximoFeriado.date);\n        const diffTime = dataProximo.getTime() - data.getTime();\n        diasAteProximo = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      }\n      \n      // Verifica se é ponte útil (feriado na segunda ou sexta)\n      const ehPonteUtil = ehFeriado && (diaSemana === 1 || diaSemana === 5);\n      \n      return {\n        data,\n        nome: ehFeriado ? 'Feriado' : this.diasSemana[diaSemana],\n        tipo: ehFeriado ? 'feriado' : 'dia_normal',\n        diaSemana: this.diasSemana[diaSemana],\n        proximoFeriado: proximoFeriado || undefined,\n        diasAteProximo,\n        ehFimDeSemana,\n        ehPonteUtil\n      };\n    } catch (error) {\n      console.error('Erro ao obter info da data:', error);\n      return {\n        data,\n        nome: this.diasSemana[data.getDay()],\n        tipo: 'dia_normal',\n        diaSemana: this.diasSemana[data.getDay()],\n        ehFimDeSemana: data.getDay() === 0 || data.getDay() === 6,\n        ehPonteUtil: false\n      };\n    }\n  }\n\n  /**\n   * Feriados fixos como fallback\n   */\n  private getFeriadosFixos(ano: number): FeriadoNacional[] {\n    return this.feriadosFixos.map(feriado => ({\n      date: `${ano}-${feriado.date}`,\n      name: feriado.name,\n      type: feriado.type\n    }));\n  }\n\n  /**\n   * Calcula páscoa para obter feriados móveis\n   */\n  private calcularPascoa(ano: number): Date {\n    const a = ano % 19;\n    const b = Math.floor(ano / 100);\n    const c = ano % 100;\n    const d = Math.floor(b / 4);\n    const e = b % 4;\n    const f = Math.floor((b + 8) / 25);\n    const g = Math.floor((b - f + 1) / 3);\n    const h = (19 * a + b - d - g + 15) % 30;\n    const i = Math.floor(c / 4);\n    const k = c % 4;\n    const l = (32 + 2 * e + 2 * i - h - k) % 7;\n    const m = Math.floor((a + 11 * h + 22 * l) / 451);\n    const mes = Math.floor((h + l - 7 * m + 114) / 31);\n    const dia = ((h + l - 7 * m + 114) % 31) + 1;\n    \n    return new Date(ano, mes - 1, dia);\n  }\n\n  /**\n   * Lista de feriados para planejamento\n   */\n  getFeriadosParaPlanejamento(ano: number): InfoFeriado[] {\n    return this.getFeriadosFixos(ano).map(feriado => ({\n      data: new Date(feriado.date),\n      nome: feriado.name,\n      tipo: feriado.type,\n      diaSemana: this.diasSemana[new Date(feriado.date).getDay()],\n      ehFimDeSemana: [0, 6].includes(new Date(feriado.date).getDay()),\n      ehPonteUtil: [1, 5].includes(new Date(feriado.date).getDay())\n    }));\n  }\n}\n\n// Singleton instance\nexport const feriadoService = new FeriadoService();\n\n// Hook personalizado para React\nexport function useFeriado() {\n  return {\n    buscarFeriados: feriadoService.buscarFeriados.bind(feriadoService),\n    ehFeriado: feriadoService.ehFeriado.bind(feriadoService),\n    buscarProximoFeriado: feriadoService.buscarProximoFeriado.bind(feriadoService),\n    calcularDiasUteis: feriadoService.calcularDiasUteis.bind(feriadoService),\n    adicionarDiasUteis: feriadoService.adicionarDiasUteis.bind(feriadoService),\n    getInfoData: feriadoService.getInfoData.bind(feriadoService),\n    getFeriadosParaPlanejamento: feriadoService.getFeriadosParaPlanejamento.bind(feriadoService),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2357, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/ibge.ts"],"sourcesContent":["// Serviços de dados do IBGE\n// Útil para localização e dados geográficos brasileiros\n\nexport interface Estado {\n  id: number;\n  sigla: string;\n  nome: string;\n  regiao: {\n    id: number;\n    sigla: string;\n    nome: string;\n  };\n}\n\nexport interface Cidade {\n  id: number;\n  nome: string;\n  microrregiao: {\n    id: number;\n    nome: string;\n    mesorregiao: {\n      id: number;\n      nome: string;\n      UF: {\n        id: number;\n        sigla: string;\n        nome: string;\n        regiao: {\n          id: number;\n          sigla: string;\n          nome: string;\n        };\n      };\n    };\n  };\n}\n\nexport interface LocalizacaoCompleta {\n  cidade: Cidade;\n  estado: Estado;\n  regiao: string;\n  codigoIbge: number;\n  populacao?: number;\n  area?: number;\n}\n\nclass IbgeService {\n  /**\n   * Lista todos os estados brasileiros\n   */\n  async listarEstados(): Promise<Estado[]> {\n    try {\n      const response = await fetch('/api/ibge/estados');\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar estados');\n      }\n\n      const data = await response.json();\n      return data.estados || this.getEstadosLocais();\n    } catch (error) {\n      console.error('Erro ao buscar estados:', error);\n      return this.getEstadosLocais();\n    }\n  }\n\n  /**\n   * Busca estado por ID ou sigla\n   */\n  async buscarEstado(identificador: string | number): Promise<Estado | null> {\n    try {\n      const response = await fetch(`/api/ibge/estados/${identificador}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Estado não encontrado');\n      }\n\n      const data = await response.json();\n      return data.estado;\n    } catch (error) {\n      console.error('Erro ao buscar estado:', error);\n      \n      // Fallback para busca local\n      const estados = this.getEstadosLocais();\n      const estado = estados.find(e => \n        e.sigla === String(identificador).toUpperCase() || \n        e.id === Number(identificador)\n      );\n      \n      return estado || null;\n    }\n  }\n\n  /**\n   * Lista cidades de um estado\n   */\n  async listarCidadesPorEstado(estadoId: number | string): Promise<Cidade[]> {\n    try {\n      const response = await fetch(`/api/ibge/estados/${estadoId}/cidades`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Erro ao buscar cidades');\n      }\n\n      const data = await response.json();\n      return data.cidades || [];\n    } catch (error) {\n      console.error('Erro ao buscar cidades:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Busca cidade por nome ou ID\n   */\n  async buscarCidade(identificador: string | number, estadoId?: number | string): Promise<Cidade[]> {\n    try {\n      let url = `/api/ibge/cidades/${identificador}`;\n      if (estadoId) {\n        url += `?estado=${estadoId}`;\n      }\n      \n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Cidade não encontrada');\n      }\n\n      const data = await response.json();\n      return Array.isArray(data.cidades) ? data.cidades : [data.cidade];\n    } catch (error) {\n      console.error('Erro ao buscar cidade:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Busca completa por localização\n   */\n  async buscarLocalizacaoCompleta(cidade: string, estado?: string): Promise<LocalizacaoCompleta | null> {\n    try {\n      // Primeiro busca o estado se fornecido\n      let estadoObj: Estado | null = null;\n      if (estado) {\n        estadoObj = await this.buscarEstado(estado);\n      }\n\n      // Busca a cidade\n      const cidades = estadoObj \n        ? await this.listarCidadesPorEstado(estadoObj.id)\n        : await this.buscarCidade(cidade);\n\n      const cidadeEncontrada = cidades.find(c => \n        c.nome.toLowerCase().includes(cidade.toLowerCase())\n      );\n\n      if (!cidadeEncontrada) return null;\n\n      // Busca o estado da cidade se não foi fornecido\n      if (!estadoObj) {\n        estadoObj = await this.buscarEstado(cidadeEncontrada.microrregiao.mesorregiao.UF.id);\n      }\n\n      return {\n        cidade: cidadeEncontrada,\n        estado: estadoObj!,\n        regiao: estadoObj!.regiao.nome,\n        codigoIbge: cidadeEncontrada.id\n      };\n    } catch (error) {\n      console.error('Erro ao buscar localização completa:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Valida se cidade pertence ao estado\n   */\n  async validarCidadeEstado(cidade: string, estado: string): Promise<boolean> {\n    try {\n      const localizacao = await this.buscarLocalizacaoCompleta(cidade, estado);\n      return localizacao !== null;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Lista cidades por região\n   */\n  async listarCidadesPorRegiao(regiao: string): Promise<Cidade[]> {\n    try {\n      const estados = await this.listarEstados();\n      const estadosRegiao = estados.filter(e => \n        e.regiao.nome.toLowerCase() === regiao.toLowerCase() ||\n        e.regiao.sigla.toLowerCase() === regiao.toLowerCase()\n      );\n\n      const todasCidades: Cidade[] = [];\n      \n      for (const estado of estadosRegiao) {\n        const cidades = await this.listarCidadesPorEstado(estado.id);\n        todasCidades.push(...cidades);\n      }\n\n      return todasCidades;\n    } catch (error) {\n      console.error('Erro ao buscar cidades por região:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Busca cidades próximas (por nome similar)\n   */\n  buscarCidadesSimilares(termo: string, cidades: Cidade[]): Cidade[] {\n    const termoLower = termo.toLowerCase();\n    \n    return cidades\n      .filter(cidade => cidade.nome.toLowerCase().includes(termoLower))\n      .sort((a, b) => {\n        // Prioriza matches exatos\n        const aExato = a.nome.toLowerCase() === termoLower;\n        const bExato = b.nome.toLowerCase() === termoLower;\n        \n        if (aExato && !bExato) return -1;\n        if (!aExato && bExato) return 1;\n        \n        // Depois por início da palavra\n        const aInicio = a.nome.toLowerCase().startsWith(termoLower);\n        const bInicio = b.nome.toLowerCase().startsWith(termoLower);\n        \n        if (aInicio && !bInicio) return -1;\n        if (!aInicio && bInicio) return 1;\n        \n        // Por fim, alfabética\n        return a.nome.localeCompare(b.nome);\n      })\n      .slice(0, 10); // Limita a 10 resultados\n  }\n\n  /**\n   * Estados brasileiros como fallback\n   */\n  private getEstadosLocais(): Estado[] {\n    return [\n      { id: 11, sigla: 'RO', nome: 'Rondônia', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 12, sigla: 'AC', nome: 'Acre', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 13, sigla: 'AM', nome: 'Amazonas', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 14, sigla: 'RR', nome: 'Roraima', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 15, sigla: 'PA', nome: 'Pará', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 16, sigla: 'AP', nome: 'Amapá', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 17, sigla: 'TO', nome: 'Tocantins', regiao: { id: 1, sigla: 'N', nome: 'Norte' } },\n      { id: 21, sigla: 'MA', nome: 'Maranhão', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 22, sigla: 'PI', nome: 'Piauí', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 23, sigla: 'CE', nome: 'Ceará', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 24, sigla: 'RN', nome: 'Rio Grande do Norte', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 25, sigla: 'PB', nome: 'Paraíba', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 26, sigla: 'PE', nome: 'Pernambuco', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 27, sigla: 'AL', nome: 'Alagoas', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 28, sigla: 'SE', nome: 'Sergipe', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 29, sigla: 'BA', nome: 'Bahia', regiao: { id: 2, sigla: 'NE', nome: 'Nordeste' } },\n      { id: 31, sigla: 'MG', nome: 'Minas Gerais', regiao: { id: 3, sigla: 'SE', nome: 'Sudeste' } },\n      { id: 32, sigla: 'ES', nome: 'Espírito Santo', regiao: { id: 3, sigla: 'SE', nome: 'Sudeste' } },\n      { id: 33, sigla: 'RJ', nome: 'Rio de Janeiro', regiao: { id: 3, sigla: 'SE', nome: 'Sudeste' } },\n      { id: 35, sigla: 'SP', nome: 'São Paulo', regiao: { id: 3, sigla: 'SE', nome: 'Sudeste' } },\n      { id: 41, sigla: 'PR', nome: 'Paraná', regiao: { id: 4, sigla: 'S', nome: 'Sul' } },\n      { id: 42, sigla: 'SC', nome: 'Santa Catarina', regiao: { id: 4, sigla: 'S', nome: 'Sul' } },\n      { id: 43, sigla: 'RS', nome: 'Rio Grande do Sul', regiao: { id: 4, sigla: 'S', nome: 'Sul' } },\n      { id: 50, sigla: 'MS', nome: 'Mato Grosso do Sul', regiao: { id: 5, sigla: 'CO', nome: 'Centro-Oeste' } },\n      { id: 51, sigla: 'MT', nome: 'Mato Grosso', regiao: { id: 5, sigla: 'CO', nome: 'Centro-Oeste' } },\n      { id: 52, sigla: 'GO', nome: 'Goiás', regiao: { id: 5, sigla: 'CO', nome: 'Centro-Oeste' } },\n      { id: 53, sigla: 'DF', nome: 'Distrito Federal', regiao: { id: 5, sigla: 'CO', nome: 'Centro-Oeste' } }\n    ];\n  }\n\n  /**\n   * Regiões brasileiras\n   */\n  getRegioes() {\n    return [\n      { id: 1, sigla: 'N', nome: 'Norte' },\n      { id: 2, sigla: 'NE', nome: 'Nordeste' },\n      { id: 3, sigla: 'SE', nome: 'Sudeste' },\n      { id: 4, sigla: 'S', nome: 'Sul' },\n      { id: 5, sigla: 'CO', nome: 'Centro-Oeste' }\n    ];\n  }\n\n  /**\n   * Autocomplete para cidades\n   */\n  async autocompleteCidades(termo: string, estadoId?: number | string): Promise<string[]> {\n    try {\n      let cidades: Cidade[] = [];\n      \n      if (estadoId) {\n        cidades = await this.listarCidadesPorEstado(estadoId);\n      } else {\n        // Busca em alguns estados principais se não especificado\n        const estadosPrincipais = [35, 33, 31, 41, 43]; // SP, RJ, MG, PR, RS\n        for (const id of estadosPrincipais) {\n          const cidadesEstado = await this.listarCidadesPorEstado(id);\n          cidades.push(...cidadesEstado);\n        }\n      }\n      \n      return this.buscarCidadesSimilares(termo, cidades)\n        .map(cidade => cidade.nome)\n        .slice(0, 5);\n    } catch (error) {\n      console.error('Erro no autocomplete:', error);\n      return [];\n    }\n  }\n}\n\n// Singleton instance\nexport const ibgeService = new IbgeService();\n\n// Hook personalizado para React\nexport function useIbge() {\n  return {\n    listarEstados: ibgeService.listarEstados.bind(ibgeService),\n    buscarEstado: ibgeService.buscarEstado.bind(ibgeService),\n    listarCidadesPorEstado: ibgeService.listarCidadesPorEstado.bind(ibgeService),\n    buscarCidade: ibgeService.buscarCidade.bind(ibgeService),\n    buscarLocalizacaoCompleta: ibgeService.buscarLocalizacaoCompleta.bind(ibgeService),\n    validarCidadeEstado: ibgeService.validarCidadeEstado.bind(ibgeService),\n    listarCidadesPorRegiao: ibgeService.listarCidadesPorRegiao.bind(ibgeService),\n    buscarCidadesSimilares: ibgeService.buscarCidadesSimilares.bind(ibgeService),\n    autocompleteCidades: ibgeService.autocompleteCidades.bind(ibgeService),\n    getRegioes: ibgeService.getRegioes.bind(ibgeService),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2870, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/lib/brasilapi/index.ts"],"sourcesContent":["// Integração unificada com Brasil API - Todos os serviços essenciais\n// Centraliza todos os serviços de dados brasileiros necessários para o sistema\n\nimport { cepService } from './cep';\nimport { cnpjService } from './cnpj';\nimport { cpfService, type CpfInfo, type CpfValidacao } from './cpf';\nimport { fipeService, type PrecoFipe, type MarcaFipe, type VeiculoFipe, type TipoVeiculo } from './fipe';\nimport { dddService } from './ddd';\nimport { bancoService } from './banco';\nimport { feriadoService } from './feriado';\nimport { ibgeService } from './ibge';\nimport { \n  type EnderecoCep, \n  type EmpresaCnpj \n} from './types';\n\n// Tipos unificados para respostas\nexport interface ValidacaoCompleta {\n  tipo: 'cep' | 'cpf' | 'cnpj';\n  valido: boolean;\n  formatado: string;\n  dados?: any;\n  erro?: string;\n}\n\nexport interface ConsultaVeicular {\n  marca: MarcaFipe | null;\n  veiculo: VeiculoFipe | null;\n  preco: PrecoFipe[] | null;\n  valorFormatado?: string;\n  valorNumerico?: number;\n}\n\nexport interface DadosCliente {\n  cpf?: CpfInfo;\n  cnpj?: EmpresaCnpj;\n  endereco?: EnderecoCep;\n  valido: boolean;\n  erros: string[];\n}\n\nclass BrasilApiService {\n  // Instâncias dos serviços\n  public readonly cep = cepService;\n  public readonly cnpj = cnpjService;\n  public readonly cpf = cpfService;\n  public readonly fipe = fipeService;\n  public readonly ddd = dddService;\n  public readonly banco = bancoService;\n  public readonly feriado = feriadoService;\n  public readonly ibge = ibgeService;\n\n  /**\n   * Validação unificada - detecta tipo automaticamente\n   */\n  async validarDado(valor: string): Promise<ValidacaoCompleta> {\n    const valorLimpo = valor.replace(/\\D/g, '');\n\n    try {\n      // Detecta tipo baseado no comprimento\n      if (valorLimpo.length === 8) {\n        // CEP\n        try {\n          const resultado = await this.cep.buscarCep(valor);\n          return {\n            tipo: 'cep',\n            valido: true,\n            formatado: this.cep.formatarCep(valor),\n            dados: resultado\n          };\n        } catch (error) {\n          return {\n            tipo: 'cep',\n            valido: false,\n            formatado: this.cep.formatarCep(valor),\n            erro: `Erro ao buscar CEP: ${error instanceof Error ? error.message : 'Erro desconhecido'}`\n          };\n        }\n      } else if (valorLimpo.length === 11) {\n        // CPF\n        const resultado = this.cpf.validar(valor);\n        return {\n          tipo: 'cpf',\n          valido: resultado.valido,\n          formatado: resultado.formatado,\n          dados: resultado.valido ? this.cpf.obterInfo(valor) : null,\n          erro: resultado.erro\n        };\n      } else if (valorLimpo.length === 14) {\n        // CNPJ\n        const valido = this.cnpj.validarCnpj(valor);\n        const formatado = this.cnpj.formatarCnpj(valor);\n        \n        if (valido) {\n          try {\n            const empresa = await this.cnpj.buscarEmpresa(valor);\n            return {\n              tipo: 'cnpj',\n              valido: true,\n              formatado,\n              dados: empresa\n            };\n          } catch (error) {\n            return {\n              tipo: 'cnpj',\n              valido: false,\n              formatado,\n              erro: `Erro ao buscar dados da empresa: ${error instanceof Error ? error.message : 'Erro desconhecido'}`\n            };\n          }\n        } else {\n          return {\n            tipo: 'cnpj',\n            valido: false,\n            formatado,\n            erro: 'CNPJ inválido'\n          };\n        }\n      } else {\n        return {\n          tipo: 'cep', // default\n          valido: false,\n          formatado: valor,\n          erro: 'Formato não reconhecido. Use CEP (8 dígitos), CPF (11 dígitos) ou CNPJ (14 dígitos)'\n        };\n      }\n    } catch (error) {\n      return {\n        tipo: 'cep', // default\n        valido: false,\n        formatado: valor,\n        erro: `Erro na validação: ${error instanceof Error ? error.message : 'Erro desconhecido'}`\n      };\n    }\n  }\n\n  /**\n   * Validação completa de dados do cliente\n   */\n  async validarCliente(dados: {\n    cpf?: string;\n    cnpj?: string;\n    cep?: string;\n  }): Promise<DadosCliente> {\n    const resultado: DadosCliente = {\n      valido: true,\n      erros: []\n    };\n\n    try {\n      // Validar CPF se fornecido\n      if (dados.cpf) {\n        const cpfValidacao = this.cpf.validar(dados.cpf);\n        if (cpfValidacao.valido) {\n          resultado.cpf = this.cpf.obterInfo(dados.cpf);\n        } else {\n          resultado.erros.push(`CPF: ${cpfValidacao.erro}`);\n          resultado.valido = false;\n        }\n      }\n\n      // Validar CNPJ se fornecido\n      if (dados.cnpj) {\n        const cnpjValido = this.cnpj.validarCnpj(dados.cnpj);\n        if (cnpjValido) {\n          try {\n            const empresaInfo = await this.cnpj.buscarEmpresa(dados.cnpj);\n            resultado.cnpj = empresaInfo;\n          } catch (error) {\n            resultado.erros.push(`CNPJ: Erro ao buscar dados da empresa`);\n            resultado.valido = false;\n          }\n        } else {\n          resultado.erros.push(`CNPJ: CNPJ inválido`);\n          resultado.valido = false;\n        }\n      }\n\n      // Validar CEP se fornecido\n      if (dados.cep) {\n        try {\n          const cepInfo = await this.cep.buscarCep(dados.cep);\n          // Mapear CepResponse para EnderecoCep\n          const enderecoMapeado: EnderecoCep = {\n            cep: cepInfo.cep,\n            state: cepInfo.uf,\n            city: cepInfo.cidade,\n            neighborhood: cepInfo.bairro,\n            street: cepInfo.logradouro,\n            service: 'brasilapi'\n          };\n          resultado.endereco = enderecoMapeado;\n        } catch (error) {\n          resultado.erros.push(`CEP: Erro ao buscar endereço`);\n          resultado.valido = false;\n        }\n      }\n\n    } catch (error) {\n      resultado.erros.push(`Erro na validação: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n      resultado.valido = false;\n    }\n\n    return resultado;\n  }\n\n  /**\n   * Consulta completa de veículo\n   */\n  async consultarVeiculo(\n    tipoVeiculo: TipoVeiculo,\n    marca: string,\n    modelo: string\n  ): Promise<ConsultaVeicular> {\n    try {\n      const resultado = await this.fipe.getBuscaCompleta(tipoVeiculo, marca, modelo);\n      \n      let valorFormatado: string | undefined;\n      let valorNumerico: number | undefined;\n\n      if (resultado.preco && resultado.preco.length > 0) {\n        const primeiroPreco = resultado.preco[0];\n        valorFormatado = this.fipe.formatarValor(primeiroPreco.valor);\n        valorNumerico = this.fipe.extrairValorNumerico(primeiroPreco.valor);\n      }\n\n      return {\n        ...resultado,\n        valorFormatado,\n        valorNumerico\n      };\n    } catch (error) {\n      console.error('Erro na consulta veicular:', error);\n      return {\n        marca: null,\n        veiculo: null,\n        preco: null\n      };\n    }\n  }\n\n  /**\n   * Autocompletar endereço baseado no CEP\n   */\n  async autocompletarEndereco(cep: string): Promise<{\n    success: boolean;\n    endereco?: {\n      logradouro: string;\n      bairro: string;\n      cidade: string;\n      estado: string;\n      cep: string;\n    };\n    erro?: string;\n  }> {\n    try {\n      // Timeout de 8 segundos para evitar esperas muito longas\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 8000);\n      \n      const cepInfo = await this.cep.buscarCep(cep);\n      clearTimeout(timeoutId);\n      \n      return {\n        success: true,\n        endereco: {\n          logradouro: cepInfo.logradouro || '',\n          bairro: cepInfo.bairro || '',\n          cidade: cepInfo.cidade || '',\n          estado: cepInfo.uf || '',\n          cep: cepInfo.cep || ''\n        }\n      };\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Erro desconhecido';\n      return {\n        success: false,\n        erro: errorMessage.includes('abort') ? \n          'Serviço temporariamente indisponível. Tente novamente.' :\n          `Erro ao buscar endereço: ${errorMessage}`\n      };\n    }\n  }\n\n  /**\n   * Buscar dados da empresa por CNPJ\n   */\n  async buscarEmpresaPorCnpj(cnpj: string): Promise<{\n    success: boolean;\n    empresa?: EmpresaCnpj;\n    erro?: string;\n  }> {\n    try {\n      // Primeiro valida o CNPJ\n      const valido = this.cnpj.validarCnpj(cnpj);\n      if (!valido) {\n        return {\n          success: false,\n          erro: 'CNPJ inválido'\n        };\n      }\n\n      // Busca dados da empresa\n      const empresa = await this.cnpj.buscarEmpresa(cnpj);\n      return {\n        success: true,\n        empresa\n      };\n    } catch (error) {\n      return {\n        success: false,\n        erro: `Erro ao buscar empresa: ${error instanceof Error ? error.message : 'Erro desconhecido'}`\n      };\n    }\n  }\n\n  /**\n   * Formatadores unificados\n   */\n  formatadores = {\n    cpf: (cpf: string) => this.cpf.formatarCpf(cpf),\n    cnpj: (cnpj: string) => this.cnpj.formatarCnpj(cnpj),\n    cep: (cep: string) => this.cep.formatarCep(cep),\n    valor: (valor: string) => this.fipe.formatarValor(valor),\n    \n    // Limpar formatação\n    limpar: (valor: string) => valor.replace(/\\D/g, ''),\n    \n    // Detectar tipo de documento\n    detectarTipo: (valor: string): 'cpf' | 'cnpj' | 'cep' | 'desconhecido' => {\n      const limpo = valor.replace(/\\D/g, '');\n      if (limpo.length === 11) return 'cpf';\n      if (limpo.length === 14) return 'cnpj';\n      if (limpo.length === 8) return 'cep';\n      return 'desconhecido';\n    }\n  };\n\n  /**\n   * Validadores rápidos (apenas boolean)\n   */\n  validadores = {\n    cpf: (cpf: string) => this.cpf.validar(cpf).valido,\n    cep: async (cep: string) => {\n      try {\n        await this.cep.buscarCep(cep);\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    cnpj: (cnpj: string) => this.cnpj.validarCnpj(cnpj)\n  };\n\n  /**\n   * Utilitários para formulários\n   */\n  formularios = {\n    // Máscaras para inputs\n    mascaraCpf: (valor: string) => this.cpf.formatarCpf(valor),\n    mascaraCnpj: (valor: string) => this.cnpj.formatarCnpj(valor),\n    mascaraCep: (valor: string) => this.cep.formatarCep(valor),\n    \n    // Validação em tempo real\n    validarCpfTempoReal: (cpf: string) => this.cpf.validarEmTempoReal(cpf),\n    \n    // Auto-formatação baseada no tipo detectado\n    autoFormatar: (valor: string): string => {\n      const tipo = this.formatadores.detectarTipo(valor);\n      switch (tipo) {\n        case 'cpf': return this.formatadores.cpf(valor);\n        case 'cnpj': return this.formatadores.cnpj(valor);\n        case 'cep': return this.formatadores.cep(valor);\n        default: return valor;\n      }\n    }\n  };\n}\n\n// Singleton instance\nexport const brasilApi = new BrasilApiService();\n\n// Hook para React\nexport function useBrasilApi() {\n  return {\n    // Serviços individuais\n    cep: brasilApi.cep,\n    cnpj: brasilApi.cnpj,\n    cpf: brasilApi.cpf,\n    fipe: brasilApi.fipe,\n    ddd: brasilApi.ddd,\n    banco: brasilApi.banco,\n    feriado: brasilApi.feriado,\n    ibge: brasilApi.ibge,\n    \n    // Serviços unificados\n    validarDado: brasilApi.validarDado.bind(brasilApi),\n    validarCliente: brasilApi.validarCliente.bind(brasilApi),\n    consultarVeiculo: brasilApi.consultarVeiculo.bind(brasilApi),\n    autocompletarEndereco: brasilApi.autocompletarEndereco.bind(brasilApi),\n    buscarEmpresaPorCnpj: brasilApi.buscarEmpresaPorCnpj.bind(brasilApi),\n    \n    // Utilitários\n    formatadores: brasilApi.formatadores,\n    validadores: brasilApi.validadores,\n    formularios: brasilApi.formularios\n  };\n}\n\n// Exportar tipos principais\nexport type {\n  CpfInfo,\n  CpfValidacao,\n  EnderecoCep,\n  EmpresaCnpj,\n  PrecoFipe,\n  MarcaFipe,\n  VeiculoFipe,\n  TipoVeiculo\n};\n\n// Exportar serviços individuais também\nexport { cepService, cnpjService, cpfService, fipeService, dddService, bancoService, feriadoService, ibgeService };\n\n// Utilitários globais\nexport const brasilApiUtils = {\n  // Constantes úteis\n  TIPOS_VEICULO: ['carros', 'motos', 'caminhoes'] as const,\n  ESTADOS_BRASIL: [\n    'AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',\n    'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN',\n    'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'\n  ],\n  \n  // Validações combinadas\n  validarDocumentoCompleto: async (documento: string): Promise<ValidacaoCompleta> => {\n    return brasilApi.validarDado(documento);\n  },\n  \n  // Formatação inteligente\n  formatarDocumento: (documento: string): string => {\n    return brasilApi.formularios.autoFormatar(documento);\n  },\n  \n  // Verificar se valor é um documento brasileiro válido\n  ehDocumentoBrasileiroValido: async (documento: string): Promise<boolean> => {\n    const resultado = await brasilApi.validarDado(documento);\n    return resultado.valido;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3279, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/PortalCliente.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { z } from 'zod'\nimport { \n  MagnifyingGlassIcon,\n  FunnelIcon,\n  EyeIcon,\n  ClockIcon,\n  DocumentTextIcon,\n  BellIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  XCircleIcon,\n  PlayIcon,\n  PauseIcon,\n  StopIcon\n} from '@heroicons/react/24/outline'\nimport { \n  useProcessStore, \n  formatDate, \n  formatDateTime, \n  getStatusColor, \n  getStatusLabel, \n  getPriorityColor, \n  getPriorityLabel,\n  ProcessStatus,\n  ProcessPriority,\n  Process,\n  ProcessStep,\n  ProcessDocument,\n  ProcessNotification\n} from '@/store/processoStore'\nimport ChatWidget from './ChatWidget'\nimport { brasilApi } from '@/lib/brasilapi'\n\nconst searchSchema = z.object({\n  phone: z.string().optional(),\n  cpf: z.string().optional(),\n  processId: z.string().optional()\n}).refine(data => data.phone || data.cpf || data.processId, {\n  message: \"Informe pelo menos um campo: telefone, CPF ou código do processo\",\n  path: [\"phone\"]\n})\n\ntype SearchForm = z.infer<typeof searchSchema>\n\nexport default function ClientPortal() {\n  const [showDetails, setShowDetails] = useState<string | null>(null)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [customerPhone, setCustomerPhone] = useState('')\n  const [cpfValidation, setCpfValidation] = useState<{\n    status: 'vazio' | 'incompleto' | 'invalido' | 'valido';\n    mensagem: string;\n    formatado: string;\n  }>({ status: 'vazio', mensagem: '', formatado: '' })\n  \n  const {\n    processes,\n    searchTerm,\n    statusFilter,\n    priorityFilter,\n    setSearchTerm,\n    setStatusFilter,\n    setPriorityFilter,\n    getFilteredProcesses,\n    getProcessesByCustomer\n  } = useProcessStore()\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm<SearchForm>({\n    resolver: zodResolver(searchSchema)\n  })\n\n  const [customerProcesses, setCustomerProcesses] = useState<Process[]>([])\n\n  // Funções de validação e formatação com Brasil API\n  const handleCpfChange = (value: string) => {\n    const validation = brasilApi.formularios.validarCpfTempoReal(value)\n    setCpfValidation(validation)\n    return validation.formatado\n  }\n\n  const onSubmit = async (data: SearchForm) => {\n    // Validar CPF se fornecido\n    if (data.cpf && cpfValidation.status !== 'valido') {\n      alert('Por favor, digite um CPF válido')\n      return\n    }\n\n    // Simular busca por telefone ou CPF\n    const foundProcesses = processes.filter(process => {\n      const phoneMatch = data.phone && process.customerPhone.replace(/\\D/g, '') === data.phone.replace(/\\D/g, '')\n      const cpfMatch = data.cpf && process.customerCPF?.replace(/\\D/g, '') === data.cpf.replace(/\\D/g, '')\n      const processIdMatch = data.processId && process.id === data.processId\n      \n      return phoneMatch || cpfMatch || processIdMatch\n    })\n    \n    if (foundProcesses.length > 0) {\n      setIsAuthenticated(true)\n      setCustomerPhone(data.phone || data.cpf || '')\n      setCustomerProcesses(foundProcesses)\n    } else {\n      alert('Nenhum processo encontrado com esses dados')\n    }\n  }\n\n  const logout = () => {\n    setIsAuthenticated(false)\n    setCustomerPhone('')\n    setCustomerProcesses([])\n    reset()\n  }\n\n  const getStepIcon = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return <CheckCircleIcon className=\"h-5 w-5 text-green-500\" />\n      case 'in_progress':\n        return <PlayIcon className=\"h-5 w-5 text-blue-500\" />\n      case 'pending':\n        return <ClockIcon className=\"h-5 w-5 text-gray-400\" />\n      case 'cancelled':\n        return <XCircleIcon className=\"h-5 w-5 text-red-500\" />\n      default:\n        return <ClockIcon className=\"h-5 w-5 text-gray-400\" />\n    }\n  }\n\n  const getProgressColor = (progress: number) => {\n    if (progress >= 80) return 'bg-green-500'\n    if (progress >= 60) return 'bg-blue-500'\n    if (progress >= 40) return 'bg-yellow-500'\n    return 'bg-red-500'\n  }\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md\"\n        >\n          <div className=\"text-center mb-8\">\n            <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <DocumentTextIcon className=\"h-8 w-8 text-blue-600\" />\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Portal do Cliente\n            </h1>\n            <p className=\"text-gray-600\">\n              Acompanhe seus processos em tempo real\n            </p>\n            <p className=\"text-sm text-gray-500 mt-2\">\n              Informe pelo menos um dos campos abaixo para acessar\n            </p>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Telefone/WhatsApp (opcional)\n              </label>\n              <input\n                {...register('phone')}\n                type=\"tel\"\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"(16) 99999-9999\"\n              />\n              {errors.phone && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.phone.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                CPF (opcional)\n              </label>\n              <input\n                {...register('cpf')}\n                type=\"text\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:border-blue-500 ${\n                  cpfValidation.status === 'valido' \n                    ? 'border-green-300 focus:ring-green-500' \n                    : cpfValidation.status === 'invalido' \n                    ? 'border-red-300 focus:ring-red-500' \n                    : 'border-gray-300 focus:ring-blue-500'\n                }`}\n                placeholder=\"123.456.789-00\"\n                maxLength={14}\n                onChange={(e) => {\n                  const formatted = handleCpfChange(e.target.value)\n                  e.target.value = formatted\n                }}\n              />\n              {cpfValidation.status !== 'vazio' && (\n                <div className={`mt-1 text-sm flex items-center gap-1 ${\n                  cpfValidation.status === 'valido' \n                    ? 'text-green-600' \n                    : cpfValidation.status === 'invalido' \n                    ? 'text-red-600' \n                    : 'text-gray-600'\n                }`}>\n                  {cpfValidation.status === 'valido' && <CheckCircleIcon className=\"w-4 h-4\" />}\n                  {cpfValidation.status === 'invalido' && <XCircleIcon className=\"w-4 h-4\" />}\n                  {cpfValidation.status === 'incompleto' && <ClockIcon className=\"w-4 h-4\" />}\n                  {cpfValidation.mensagem}\n                </div>\n              )}\n              {errors.cpf && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.cpf.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Código do Processo (opcional)\n              </label>\n              <input\n                {...register('processId')}\n                type=\"text\"\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Ex: 123456\"\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n            >\n              Acessar Meus Processos\n            </button>\n          </form>\n\n          <div className=\"mt-8 text-center text-sm text-gray-500\">\n            <p>Não consegue acessar? Entre em contato:</p>\n            <p className=\"font-medium text-blue-600\">(16) 98247-7126</p>\n            <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n              <p className=\"text-xs text-blue-800\">\n                <strong>Dados para teste:</strong><br/>\n                CPF: 123.456.789-00 ou 987.654.321-00<br/>\n                Telefone: (16) 99999-9999 ou (16) 88888-8888\n              </p>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Meus Processos</h1>\n              <p className=\"text-gray-600\">Acompanhe o andamento dos seus processos</p>\n            </div>\n            <button\n              onClick={logout}\n              className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              Sair\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Process List */}\n        <div className=\"space-y-6\">\n          {customerProcesses.map((process) => (\n            <motion.div\n              key={process.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\"\n            >\n              {/* Process Header */}\n              <div className=\"p-6 border-b border-gray-200\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      <DocumentTextIcon className=\"h-5 w-5 text-blue-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">\n                        {process.title}\n                      </h3>\n                      <p className=\"text-sm text-gray-600\">\n                        Processo #{process.id}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(process.status)}`}>\n                      {getStatusLabel(process.status)}\n                    </span>\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${getPriorityColor(process.priority)}`}>\n                      {getPriorityLabel(process.priority)}\n                    </span>\n                  </div>\n                </div>\n\n                {/* Progress Bar */}\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                    <span>Progresso</span>\n                    <span>{process.progress}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full transition-all duration-300 ${getProgressColor(process.progress)}`}\n                      style={{ width: `${process.progress}%` }}\n                    />\n                  </div>\n                </div>\n\n                {/* Process Info */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                  <div>\n                    <span className=\"text-gray-500\">Data de Início:</span>\n                    <p className=\"font-medium\">{formatDate(process.startDate)}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-500\">Previsão de Conclusão:</span>\n                    <p className=\"font-medium\">\n                      {process.estimatedEndDate ? formatDate(process.estimatedEndDate) : 'A definir'}\n                    </p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-500\">Valor Total:</span>\n                    <p className=\"font-medium text-green-600\">\n                      {process.totalCost ? `R$ ${process.totalCost.toFixed(2)}` : 'A definir'}\n                    </p>\n                  </div>\n                </div>\n\n                <button\n                  onClick={() => setShowDetails(showDetails === process.id ? null : process.id)}\n                  className=\"mt-4 flex items-center space-x-2 text-blue-600 hover:text-blue-700 transition-colors\"\n                >\n                  <EyeIcon className=\"h-4 w-4\" />\n                  <span>{showDetails === process.id ? 'Ocultar Detalhes' : 'Ver Detalhes'}</span>\n                </button>\n              </div>\n\n              {/* Process Details */}\n              {showDetails === process.id && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  transition={{ duration: 0.3 }}\n                  className=\"p-6 bg-gray-50\"\n                >\n                  {/* Timeline */}\n                  <div className=\"mb-8\">\n                    <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                      Andamento do Processo\n                    </h4>\n                    <div className=\"space-y-4\">\n                      {process.steps.map((step: ProcessStep, index: number) => (\n                        <div key={step.id} className=\"flex items-start space-x-4\">\n                          <div className=\"flex-shrink-0 mt-1\">\n                            {getStepIcon(step.status)}\n                          </div>\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center justify-between\">\n                              <h5 className=\"font-medium text-gray-900\">{step.title}</h5>\n                              <span className=\"text-sm text-gray-500\">\n                                {step.completedAt \n                                  ? formatDateTime(step.completedAt)\n                                  : step.estimatedDate \n                                  ? `Previsto: ${formatDate(step.estimatedDate)}`\n                                  : ''\n                                }\n                              </span>\n                            </div>\n                            <p className=\"text-sm text-gray-600 mt-1\">{step.description}</p>\n                            {step.notes && (\n                              <p className=\"text-sm text-orange-600 mt-1 font-medium\">\n                                📝 {step.notes}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Documents */}\n                  {process.documents.length > 0 && (\n                    <div className=\"mb-8\">\n                      <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                        Documentos\n                      </h4>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        {process.documents.map((doc: ProcessDocument) => (\n                          <div key={doc.id} className=\"bg-white rounded-lg p-4 border border-gray-200\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <h5 className=\"font-medium text-gray-900\">{doc.name}</h5>\n                              <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                                doc.status === 'approved' ? 'bg-green-100 text-green-800' :\n                                doc.status === 'rejected' ? 'bg-red-100 text-red-800' :\n                                'bg-yellow-100 text-yellow-800'\n                              }`}>\n                                {doc.status === 'approved' ? 'Aprovado' :\n                                 doc.status === 'rejected' ? 'Rejeitado' : 'Pendente'}\n                              </span>\n                            </div>\n                            <p className=\"text-sm text-gray-600\">\n                              Enviado em {formatDateTime(doc.uploadedAt)}\n                            </p>\n                            <p className=\"text-sm text-gray-500\">\n                              {(doc.size / 1024 / 1024).toFixed(2)} MB\n                            </p>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Notifications */}\n                  {process.notifications.length > 0 && (\n                    <div>\n                      <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                        Notificações Recentes\n                      </h4>\n                      <div className=\"space-y-3\">\n                        {process.notifications.slice(0, 3).map((notification: ProcessNotification) => (\n                          <div\n                            key={notification.id}\n                            className={`p-4 rounded-lg border ${\n                              notification.type === 'success' ? 'bg-green-50 border-green-200' :\n                              notification.type === 'warning' ? 'bg-yellow-50 border-yellow-200' :\n                              notification.type === 'error' ? 'bg-red-50 border-red-200' :\n                              'bg-blue-50 border-blue-200'\n                            }`}\n                          >\n                            <div className=\"flex items-start space-x-3\">\n                              <div className=\"flex-shrink-0\">\n                                {notification.type === 'success' ? (\n                                  <CheckCircleIcon className=\"h-5 w-5 text-green-500\" />\n                                ) : notification.type === 'warning' ? (\n                                  <ExclamationTriangleIcon className=\"h-5 w-5 text-yellow-500\" />\n                                ) : notification.type === 'error' ? (\n                                  <XCircleIcon className=\"h-5 w-5 text-red-500\" />\n                                ) : (\n                                  <BellIcon className=\"h-5 w-5 text-blue-500\" />\n                                )}\n                              </div>\n                              <div className=\"flex-1\">\n                                <h5 className=\"font-medium text-gray-900\">{notification.title}</h5>\n                                <p className=\"text-sm text-gray-600 mt-1\">{notification.message}</p>\n                                <p className=\"text-xs text-gray-500 mt-2\">\n                                  {formatDateTime(notification.createdAt)}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </motion.div>\n              )}\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Empty State */}\n        {customerProcesses.length === 0 && (\n          <div className=\"text-center py-12\">\n            <DocumentTextIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Nenhum processo encontrado\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              Não encontramos processos para o telefone informado.\n            </p>\n            <button\n              onClick={logout}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Tentar Novamente\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Chat Widget */}\n      {isAuthenticated && customerProcesses.length > 0 && (\n        <ChatWidget\n          processId={customerProcesses[0]?.id}\n          customerName={customerProcesses[0]?.customerName}\n          customerPhone={customerPhone}\n        />\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4433, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/ImprovedHeader.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { \n  MenuIcon, \n  XIcon, \n  HomeIcon, \n  CalculatorIcon, \n  CalendarIcon, \n  SearchIcon, \n  FileTextIcon, \n  InfoIcon, \n  PhoneIcon,\n  UserIcon,\n  ChevronDownIcon\n} from 'lucide-react'\n\nexport default function ImprovedHeader() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const [isServicesOpen, setIsServicesOpen] = useState(false)\n  const pathname = usePathname()\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen)\n  }\n\n  const navItems = [\n    { \n      href: '/', \n      label: 'Início', \n      icon: HomeIcon, \n      description: 'Página inicial' \n    },\n    { \n      href: '/servicos', \n      label: 'Serviços', \n      icon: FileTextIcon, \n      description: 'Nossos serviços',\n      hasDropdown: true,\n      subItems: [\n        { href: '/calculadora', label: 'Calculadora', icon: CalculatorIcon },\n        { href: '/agendamento', label: 'Agendamento', icon: CalendarIcon },\n        { href: '/consultas', label: 'Consultas', icon: SearchIcon },\n        { href: '/processos', label: 'Processos', icon: FileTextIcon },\n      ]\n    },\n    { \n      href: '/consultas', \n      label: 'Consultas', \n      icon: SearchIcon, \n      description: 'DETRAN e documentos' \n    },\n    { \n      href: '/processos', \n      label: 'Processos', \n      icon: FileTextIcon, \n      description: 'Acompanhe seus processos' \n    },\n    { \n      href: '/sobre', \n      label: 'Sobre', \n      icon: InfoIcon, \n      description: 'Sobre a empresa' \n    },\n    { \n      href: '/contato', \n      label: 'Contato', \n      icon: PhoneIcon, \n      description: 'Fale conosco' \n    },\n  ]\n\n  const isActive = (href: string) => {\n    if (!pathname) return false\n    if (href === '/') return pathname === '/'\n    return pathname.startsWith(href)\n  }\n\n  return (\n    <header className=\"fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200 shadow-sm\">\n      <nav className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-3 group\">\n            <div className=\"relative\">\n              <Image\n                src=\"/logo/333639480_607887381351075_3074158683519753451_n.jpg\"\n                alt=\"Lazuli Despachante\"\n                width={40}\n                height={40}\n                className=\"rounded-full object-cover transition-transform group-hover:scale-105\"\n              />\n              <div className=\"absolute inset-0 rounded-full bg-blue-600/20 opacity-0 group-hover:opacity-100 transition-opacity\"></div>\n            </div>\n            <div>\n              <span className=\"text-xl font-bold text-gray-900 group-hover:text-blue-600 transition-colors\">\n                Lazuli Despachante\n              </span>\n              <p className=\"text-xs text-gray-500 -mt-1\">Franca-SP</p>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-1\">\n            {navItems.map((item) => (\n              <div key={item.href} className=\"relative group\">\n                {item.hasDropdown ? (\n                  <div\n                    className=\"relative\"\n                    onMouseEnter={() => setIsServicesOpen(true)}\n                    onMouseLeave={() => setIsServicesOpen(false)}\n                  >\n                    <button className=\"flex items-center px-4 py-2 text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200 rounded-lg hover:bg-blue-50\">\n                      <item.icon className=\"h-4 w-4 mr-2\" />\n                      {item.label}\n                      <ChevronDownIcon className=\"h-4 w-4 ml-1 transition-transform group-hover:rotate-180\" />\n                    </button>\n                    \n                    <AnimatePresence>\n                      {isServicesOpen && (\n                        <motion.div\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          exit={{ opacity: 0, y: 10 }}\n                          transition={{ duration: 0.2 }}\n                          className=\"absolute top-full left-0 mt-2 w-64 bg-white rounded-xl shadow-lg border border-gray-200 py-2 z-50\"\n                        >\n                          {item.subItems?.map((subItem) => (\n                            <Link\n                              key={subItem.href}\n                              href={subItem.href}\n                              className=\"flex items-center px-4 py-3 text-gray-700 hover:text-blue-600 hover:bg-blue-50 transition-colors\"\n                            >\n                              <subItem.icon className=\"h-4 w-4 mr-3 text-gray-400\" />\n                              {subItem.label}\n                            </Link>\n                          ))}\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                  </div>\n                ) : (\n                  <Link\n                    href={item.href}\n                    className={`flex items-center px-4 py-2 font-medium transition-colors duration-200 rounded-lg relative group ${\n                      isActive(item.href)\n                        ? 'text-blue-600 bg-blue-50'\n                        : 'text-gray-700 hover:text-blue-600 hover:bg-blue-50'\n                    }`}\n                  >\n                    <item.icon className=\"h-4 w-4 mr-2\" />\n                    {item.label}\n                    {isActive(item.href) && (\n                      <motion.div\n                        className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600 rounded-full\"\n                        layoutId=\"activeTab\"\n                      />\n                    )}\n                  </Link>\n                )}\n              </div>\n            ))}\n          </div>\n\n          {/* CTA Button */}\n          <div className=\"hidden lg:flex items-center space-x-4\">\n            <Link\n              href=\"/admin/dashboard\"\n              className=\"flex items-center px-3 py-2 text-gray-600 hover:text-blue-600 transition-colors\"\n            >\n              <UserIcon className=\"h-4 w-4 mr-2\" />\n              Admin\n            </Link>\n            <Link\n              href=\"/#calculator\"\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg font-semibold hover:bg-blue-700 transition-colors shadow-md hover:shadow-lg\"\n            >\n              Calcular Preço\n            </Link>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            onClick={toggleMenu}\n            className=\"lg:hidden p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n          >\n            {isMenuOpen ? (\n              <XIcon className=\"h-6 w-6 text-gray-600\" />\n            ) : (\n              <MenuIcon className=\"h-6 w-6 text-gray-600\" />\n            )}\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        <AnimatePresence>\n          {isMenuOpen && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"lg:hidden mt-4 overflow-hidden\"\n            >\n              <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-4\">\n                <div className=\"space-y-2\">\n                  {navItems.map((item) => (\n                    <div key={item.href}>\n                      <Link\n                        href={item.href}\n                        onClick={() => setIsMenuOpen(false)}\n                        className={`flex items-center justify-between p-3 rounded-lg transition-colors ${\n                          isActive(item.href)\n                            ? 'text-blue-600 bg-blue-50'\n                            : 'text-gray-700 hover:text-blue-600 hover:bg-gray-50'\n                        }`}\n                      >\n                        <div className=\"flex items-center\">\n                          <item.icon className=\"h-5 w-5 mr-3\" />\n                          <div>\n                            <span className=\"font-medium\">{item.label}</span>\n                            <p className=\"text-xs text-gray-500 mt-0.5\">\n                              {item.description}\n                            </p>\n                          </div>\n                        </div>\n                        {isActive(item.href) && (\n                          <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                        )}\n                      </Link>\n                      \n                      {item.hasDropdown && (\n                        <div className=\"ml-8 mt-2 space-y-1\">\n                          {item.subItems?.map((subItem) => (\n                            <Link\n                              key={subItem.href}\n                              href={subItem.href}\n                              onClick={() => setIsMenuOpen(false)}\n                              className=\"flex items-center p-2 text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\"\n                            >\n                              <subItem.icon className=\"h-4 w-4 mr-2\" />\n                              {subItem.label}\n                            </Link>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n                \n                <div className=\"border-t border-gray-200 mt-4 pt-4\">\n                  <Link\n                    href=\"/admin/dashboard\"\n                    onClick={() => setIsMenuOpen(false)}\n                    className=\"flex items-center p-3 text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-lg transition-colors mb-2\"\n                  >\n                    <UserIcon className=\"h-5 w-5 mr-3\" />\n                    Área Administrativa\n                  </Link>\n                  <Link\n                    href=\"/#calculator\"\n                    onClick={() => setIsMenuOpen(false)}\n                    className=\"block w-full bg-blue-600 text-white text-center py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors\"\n                  >\n                    Calcular Preço\n                  </Link>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </nav>\n    </header>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4998, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/Breadcrumb.tsx"],"sourcesContent":["'use client'\n\nimport { usePathname } from 'next/navigation'\nimport Link from 'next/link'\nimport { ChevronRightIcon, HomeIcon } from 'lucide-react'\n\ninterface BreadcrumbItem {\n  label: string\n  href: string\n  icon?: React.ComponentType<{ className?: string }>\n}\n\nexport default function Breadcrumb() {\n  const pathname = usePathname()\n\n  const getBreadcrumbs = (): BreadcrumbItem[] => {\n    const breadcrumbs: BreadcrumbItem[] = [\n      { label: 'Início', href: '/', icon: HomeIcon }\n    ]\n\n    if (!pathname || pathname === '/') {\n      return breadcrumbs\n    }\n\n    const pathSegments = pathname.split('/').filter(Boolean)\n    \n    pathSegments.forEach((segment, index) => {\n      const href = '/' + pathSegments.slice(0, index + 1).join('/')\n      \n      let label = segment\n      \n      // Mapear segmentos para labels mais amigáveis\n      switch (segment) {\n        case 'consultas':\n          label = 'Consultas DETRAN'\n          break\n        case 'processos':\n          label = 'Meus Processos'\n          break\n        case 'admin':\n          label = 'Administração'\n          break\n        case 'dashboard':\n          label = 'Dashboard'\n          break\n        case 'login':\n          label = 'Login'\n          break\n        default:\n          label = segment.charAt(0).toUpperCase() + segment.slice(1)\n      }\n      \n      breadcrumbs.push({ label, href })\n    })\n\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs()\n\n  // Não mostrar breadcrumb na página inicial\n  if (pathname === '/') {\n    return null\n  }\n\n  return (\n    <nav className=\"bg-gray-50 border-b border-gray-200\">\n      <div className=\"container mx-auto px-4 py-3\">\n        <ol className=\"flex items-center space-x-2 text-sm\">\n          {breadcrumbs.map((item, index) => (\n            <li key={item.href} className=\"flex items-center\">\n              {index > 0 && (\n                <ChevronRightIcon className=\"h-4 w-4 text-gray-400 mr-2\" />\n              )}\n              \n              {index === breadcrumbs.length - 1 ? (\n                <span className=\"flex items-center font-medium text-blue-600\">\n                  {item.icon && <item.icon className=\"h-4 w-4 mr-1\" />}\n                  {item.label}\n                </span>\n              ) : (\n                <Link\n                  href={item.href}\n                  className=\"flex items-center text-gray-600 hover:text-blue-600 transition-colors\"\n                >\n                  {item.icon && <item.icon className=\"h-4 w-4 mr-1\" />}\n                  {item.label}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ol>\n      </div>\n    </nav>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;;;AAJA;;;;AAYe,SAAS;;IACtB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,iBAAiB;QACrB,MAAM,cAAgC;YACpC;gBAAE,OAAO;gBAAU,MAAM;gBAAK,MAAM,0MAAA,CAAA,WAAQ;YAAC;SAC9C;QAED,IAAI,CAAC,YAAY,aAAa,KAAK;YACjC,OAAO;QACT;QAEA,MAAM,eAAe,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC;QAEhD,aAAa,OAAO,CAAC,CAAC,SAAS;YAC7B,MAAM,OAAO,MAAM,aAAa,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;YAEzD,IAAI,QAAQ;YAEZ,8CAA8C;YAC9C,OAAQ;gBACN,KAAK;oBACH,QAAQ;oBACR;gBACF,KAAK;oBACH,QAAQ;oBACR;gBACF,KAAK;oBACH,QAAQ;oBACR;gBACF,KAAK;oBACH,QAAQ;oBACR;gBACF,KAAK;oBACH,QAAQ;oBACR;gBACF;oBACE,QAAQ,QAAQ,MAAM,CAAC,GAAG,WAAW,KAAK,QAAQ,KAAK,CAAC;YAC5D;YAEA,YAAY,IAAI,CAAC;gBAAE;gBAAO;YAAK;QACjC;QAEA,OAAO;IACT;IAEA,MAAM,cAAc;IAEpB,2CAA2C;IAC3C,IAAI,aAAa,KAAK;QACpB,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAG,WAAU;0BACX,YAAY,GAAG,CAAC,CAAC,MAAM,sBACtB,6LAAC;wBAAmB,WAAU;;4BAC3B,QAAQ,mBACP,6LAAC,6NAAA,CAAA,mBAAgB;gCAAC,WAAU;;;;;;4BAG7B,UAAU,YAAY,MAAM,GAAG,kBAC9B,6LAAC;gCAAK,WAAU;;oCACb,KAAK,IAAI,kBAAI,6LAAC,KAAK,IAAI;wCAAC,WAAU;;;;;;oCAClC,KAAK,KAAK;;;;;;qDAGb,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAM,KAAK,IAAI;gCACf,WAAU;;oCAET,KAAK,IAAI,kBAAI,6LAAC,KAAK,IAAI;wCAAC,WAAU;;;;;;oCAClC,KAAK,KAAK;;;;;;;;uBAhBR,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;AAyB9B;GAnFwB;;QACL,qIAAA,CAAA,cAAW;;;KADN","debugId":null}},
    {"offset": {"line": 5151, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/ScrollToTop.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { ArrowUpIcon } from 'lucide-react'\n\nexport default function ScrollToTop() {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true)\n      } else {\n        setIsVisible(false)\n      }\n    }\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    })\n  }\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <motion.button\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 0.8 }}\n          transition={{ duration: 0.3 }}\n          onClick={scrollToTop}\n          className=\"fixed bottom-6 right-6 z-50 bg-blue-600 hover:bg-blue-700 text-white p-3 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 group\"\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }}\n        >\n          <ArrowUpIcon className=\"h-5 w-5 group-hover:animate-bounce\" />\n        </motion.button>\n      )}\n    </AnimatePresence>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,MAAM;0DAAmB;oBACvB,IAAI,OAAO,WAAW,GAAG,KAAK;wBAC5B,aAAa;oBACf,OAAO;wBACL,aAAa;oBACf;gBACF;;YAEA,OAAO,gBAAgB,CAAC,UAAU;YAClC;yCAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;;QACpD;gCAAG,EAAE;IAEL,MAAM,cAAc;QAClB,OAAO,QAAQ,CAAC;YACd,KAAK;YACL,UAAU;QACZ;IACF;IAEA,qBACE,6LAAC,4LAAA,CAAA,kBAAe;kBACb,2BACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,MAAM;YACZ,SAAS;gBAAE,SAAS;gBAAG,OAAO;YAAI;YAClC,SAAS;gBAAE,SAAS;gBAAG,OAAO;YAAE;YAChC,MAAM;gBAAE,SAAS;gBAAG,OAAO;YAAI;YAC/B,YAAY;gBAAE,UAAU;YAAI;YAC5B,SAAS;YACT,WAAU;YACV,YAAY;gBAAE,OAAO;YAAI;YACzB,UAAU;gBAAE,OAAO;YAAI;sBAEvB,cAAA,6LAAC,mNAAA,CAAA,cAAW;gBAAC,WAAU;;;;;;;;;;;;;;;;AAKjC;GAzCwB;KAAA","debugId":null}},
    {"offset": {"line": 5247, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/FloatingActionButton.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { \n  PlusIcon, \n  PhoneIcon, \n  MessageCircleIcon, \n  CalculatorIcon, \n  CalendarIcon,\n  XIcon\n} from 'lucide-react'\n\ninterface FABAction {\n  icon: React.ComponentType<{ className?: string }>\n  label: string\n  onClick: () => void\n  color?: string\n}\n\nexport default function FloatingActionButton() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const actions: FABAction[] = [\n    {\n      icon: CalculatorIcon,\n      label: 'Calcular Preço',\n      onClick: () => {\n        const calculatorElement = document.getElementById('calculator')\n        if (calculatorElement) {\n          calculatorElement.scrollIntoView({ behavior: 'smooth' })\n        }\n        setIsOpen(false)\n      },\n      color: 'bg-blue-600 hover:bg-blue-700'\n    },\n    {\n      icon: CalendarIcon,\n      label: 'Agendar Atendimento',\n      onClick: () => {\n        const agendamentoElement = document.getElementById('agendamento')\n        if (agendamentoElement) {\n          agendamentoElement.scrollIntoView({ behavior: 'smooth' })\n        }\n        setIsOpen(false)\n      },\n      color: 'bg-green-600 hover:bg-green-700'\n    },\n    {\n      icon: MessageCircleIcon,\n      label: 'WhatsApp',\n      onClick: () => {\n        window.open('https://wa.me/5516982477126?text=Olá! Gostaria de mais informações sobre os serviços da Lazuli Despachante.', '_blank')\n        setIsOpen(false)\n      },\n      color: 'bg-green-500 hover:bg-green-600'\n    },\n    {\n      icon: PhoneIcon,\n      label: 'Ligar',\n      onClick: () => {\n        window.location.href = 'tel:+5516982477126'\n        setIsOpen(false)\n      },\n      color: 'bg-orange-600 hover:bg-orange-700'\n    }\n  ]\n\n  return (\n    <div className=\"fixed bottom-6 left-6 z-50\">\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"mb-4 space-y-3\"\n          >\n            {actions.map((action, index) => (\n              <motion.button\n                key={action.label}\n                initial={{ opacity: 0, x: -20, scale: 0.8 }}\n                animate={{ \n                  opacity: 1, \n                  x: 0, \n                  scale: 1,\n                  transition: { delay: index * 0.1 }\n                }}\n                exit={{ \n                  opacity: 0, \n                  x: -20, \n                  scale: 0.8,\n                  transition: { delay: (actions.length - index - 1) * 0.1 }\n                }}\n                onClick={action.onClick}\n                className={`flex items-center p-3 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 text-white group ${action.color}`}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <action.icon className=\"h-5 w-5\" />\n                <span className=\"ml-3 text-sm font-medium whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity\">\n                  {action.label}\n                </span>\n              </motion.button>\n            ))}\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      <motion.button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"bg-blue-600 hover:bg-blue-700 text-white p-4 rounded-full shadow-lg hover:shadow-xl transition-all duration-300\"\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.9 }}\n        animate={{ rotate: isOpen ? 45 : 0 }}\n      >\n        {isOpen ? (\n          <XIcon className=\"h-6 w-6\" />\n        ) : (\n          <PlusIcon className=\"h-6 w-6\" />\n        )}\n      </motion.button>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAJA;;;;AAoBe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,UAAuB;QAC3B;YACE,MAAM,qNAAA,CAAA,iBAAc;YACpB,OAAO;YACP,SAAS;gBACP,MAAM,oBAAoB,SAAS,cAAc,CAAC;gBAClD,IAAI,mBAAmB;oBACrB,kBAAkB,cAAc,CAAC;wBAAE,UAAU;oBAAS;gBACxD;gBACA,UAAU;YACZ;YACA,OAAO;QACT;QACA;YACE,MAAM,iNAAA,CAAA,eAAY;YAClB,OAAO;YACP,SAAS;gBACP,MAAM,qBAAqB,SAAS,cAAc,CAAC;gBACnD,IAAI,oBAAoB;oBACtB,mBAAmB,cAAc,CAAC;wBAAE,UAAU;oBAAS;gBACzD;gBACA,UAAU;YACZ;YACA,OAAO;QACT;QACA;YACE,MAAM,+NAAA,CAAA,oBAAiB;YACvB,OAAO;YACP,SAAS;gBACP,OAAO,IAAI,CAAC,+GAA+G;gBAC3H,UAAU;YACZ;YACA,OAAO;QACT;QACA;YACE,MAAM,2MAAA,CAAA,YAAS;YACf,OAAO;YACP,SAAS;gBACP,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB,UAAU;YACZ;YACA,OAAO;QACT;KACD;IAED,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,4LAAA,CAAA,kBAAe;0BACb,wBACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;oBAAE;oBACtB,SAAS;wBAAE,SAAS;oBAAE;oBACtB,MAAM;wBAAE,SAAS;oBAAE;oBACnB,WAAU;8BAET,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,6LAAC,6LAAA,CAAA,SAAM,CAAC,MAAM;4BAEZ,SAAS;gCAAE,SAAS;gCAAG,GAAG,CAAC;gCAAI,OAAO;4BAAI;4BAC1C,SAAS;gCACP,SAAS;gCACT,GAAG;gCACH,OAAO;gCACP,YAAY;oCAAE,OAAO,QAAQ;gCAAI;4BACnC;4BACA,MAAM;gCACJ,SAAS;gCACT,GAAG,CAAC;gCACJ,OAAO;gCACP,YAAY;oCAAE,OAAO,CAAC,QAAQ,MAAM,GAAG,QAAQ,CAAC,IAAI;gCAAI;4BAC1D;4BACA,SAAS,OAAO,OAAO;4BACvB,WAAW,AAAC,6GAAyH,OAAb,OAAO,KAAK;4BACpI,YAAY;gCAAE,OAAO;4BAAK;4BAC1B,UAAU;gCAAE,OAAO;4BAAK;;8CAExB,6LAAC,OAAO,IAAI;oCAAC,WAAU;;;;;;8CACvB,6LAAC;oCAAK,WAAU;8CACb,OAAO,KAAK;;;;;;;2BArBV,OAAO,KAAK;;;;;;;;;;;;;;;0BA6B3B,6LAAC,6LAAA,CAAA,SAAM,CAAC,MAAM;gBACZ,SAAS,IAAM,UAAU,CAAC;gBAC1B,WAAU;gBACV,YAAY;oBAAE,OAAO;gBAAI;gBACzB,UAAU;oBAAE,OAAO;gBAAI;gBACvB,SAAS;oBAAE,QAAQ,SAAS,KAAK;gBAAE;0BAElC,uBACC,6LAAC,mMAAA,CAAA,QAAK;oBAAC,WAAU;;;;;yCAEjB,6LAAC,yMAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAK9B;GAxGwB;KAAA","debugId":null}},
    {"offset": {"line": 5444, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/Footer.tsx"],"sourcesContent":["import Image from 'next/image'\nimport Link from 'next/link'\n\nconst footerSections = [\n  {\n    title: 'Serviços',\n    links: [\n      { name: 'Licenciamentos', href: '#services' },\n      { name: 'Transferências', href: '#services' },\n      { name: '1° Registro', href: '#services' },\n      { name: 'Desbloqueios', href: '#services' },\n    ],\n  },\n  {\n    title: 'Empresa',\n    links: [\n      { name: 'Sobre', href: '#about' },\n      { name: 'Serviços', href: '#services' },\n      { name: 'Contato', href: '#contact' },\n    ],\n  },\n]\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <Image\n                src=\"/logo/333639480_607887381351075_3074158683519753451_n.jpg\"\n                alt=\"Lazuli Despachante\"\n                width={40}\n                height={40}\n                className=\"rounded-full object-cover\"\n              />\n              <span className=\"text-xl font-semibold\">Lazuli Despachante</span>\n            </div>\n            <p className=\"text-gray-400 mb-4 max-w-md\">\n              Despachante credenciado ao Detran-SP, oferecendo serviços automotivos \n              com qualidade e agilidade em Franca-SP.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a\n                href=\"tel:+5516982477126\"\n                className=\"flex items-center space-x-2 text-gray-400 hover:text-white transition-colors\"\n              >\n                <span>📞</span>\n                <span>(16) 98247-7126</span>\n              </a>\n            </div>\n          </div>\n\n          {/* Footer Sections */}\n          {footerSections.map((section) => (\n            <div key={section.title}>\n              <h3 className=\"text-lg font-semibold mb-4\">{section.title}</h3>\n              <ul className=\"space-y-2\">\n                {section.links.map((link) => (\n                  <li key={link.name}>\n                    <Link\n                      href={link.href}\n                      className=\"text-gray-400 hover:text-white transition-colors\"\n                    >\n                      {link.name}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n\n        {/* Bottom Section */}\n        <div className=\"border-t border-gray-800 mt-12 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n            <div className=\"flex flex-col md:flex-row items-center space-y-2 md:space-y-0 md:space-x-4 text-gray-400\">\n              <p>&copy; 2025 Lazuli Despachante. Todos os direitos reservados.</p>\n              <div className=\"flex items-center space-x-2\">\n                <span>📍</span>\n                <span>Av. Alagoas, 882 - Vila Aparecida, Franca-SP</span>\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-4\">\n              <a\n                href=\"https://wa.me/5516982477126\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-full transition-colors duration-300 flex items-center space-x-2\"\n              >\n                <span>💬</span>\n                <span>WhatsApp</span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,iBAAiB;IACrB;QACE,OAAO;QACP,OAAO;YACL;gBAAE,MAAM;gBAAkB,MAAM;YAAY;YAC5C;gBAAE,MAAM;gBAAkB,MAAM;YAAY;YAC5C;gBAAE,MAAM;gBAAe,MAAM;YAAY;YACzC;gBAAE,MAAM;gBAAgB,MAAM;YAAY;SAC3C;IACH;IACA;QACE,OAAO;QACP,OAAO;YACL;gBAAE,MAAM;gBAAS,MAAM;YAAS;YAChC;gBAAE,MAAM;gBAAY,MAAM;YAAY;YACtC;gBAAE,MAAM;gBAAW,MAAM;YAAW;SACrC;IACH;CACD;AAEc,SAAS;IACtB,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,gIAAA,CAAA,UAAK;4CACJ,KAAI;4CACJ,KAAI;4CACJ,OAAO;4CACP,QAAQ;4CACR,WAAU;;;;;;sDAEZ,6LAAC;4CAAK,WAAU;sDAAwB;;;;;;;;;;;;8CAE1C,6LAAC;oCAAE,WAAU;8CAA8B;;;;;;8CAI3C,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCACC,MAAK;wCACL,WAAU;;0DAEV,6LAAC;0DAAK;;;;;;0DACN,6LAAC;0DAAK;;;;;;;;;;;;;;;;;;;;;;;wBAMX,eAAe,GAAG,CAAC,CAAC,wBACnB,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAA8B,QAAQ,KAAK;;;;;;kDACzD,6LAAC;wCAAG,WAAU;kDACX,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,qBAClB,6LAAC;0DACC,cAAA,6LAAC,+JAAA,CAAA,UAAI;oDACH,MAAM,KAAK,IAAI;oDACf,WAAU;8DAET,KAAK,IAAI;;;;;;+CALL,KAAK,IAAI;;;;;;;;;;;+BAJd,QAAQ,KAAK;;;;;;;;;;;8BAmB3B,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;kDAAE;;;;;;kDACH,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;0DAAK;;;;;;0DACN,6LAAC;0DAAK;;;;;;;;;;;;;;;;;;0CAIV,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,MAAK;oCACL,QAAO;oCACP,KAAI;oCACJ,WAAU;;sDAEV,6LAAC;sDAAK;;;;;;sDACN,6LAAC;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtB;KA/EwB","debugId":null}},
    {"offset": {"line": 5734, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/components/Layout.tsx"],"sourcesContent":["'use client'\n\nimport { ReactNode } from 'react'\nimport ImprovedHeader from './ImprovedHeader'\nimport Breadcrumb from './Breadcrumb'\nimport ScrollToTop from './ScrollToTop'\nimport FloatingActionButton from './FloatingActionButton'\nimport { ToastProvider } from './Toast'\nimport Footer from './Footer'\n\ninterface LayoutProps {\n  children: ReactNode\n  showBreadcrumb?: boolean\n  showFAB?: boolean\n  showScrollToTop?: boolean\n}\n\nexport default function Layout({ \n  children, \n  showBreadcrumb = true, \n  showFAB = true,\n  showScrollToTop = true \n}: LayoutProps) {\n  return (\n    <ToastProvider>\n      <div className=\"min-h-screen bg-gray-50\">\n        <ImprovedHeader />\n        {showBreadcrumb && <Breadcrumb />}\n        \n        <main className=\"pt-20\">\n          {children}\n        </main>\n        \n        <Footer />\n        \n        {showScrollToTop && <ScrollToTop />}\n        {showFAB && <FloatingActionButton />}\n      </div>\n    </ToastProvider>\n  )\n}\n\n// Layout específico para páginas administrativas\nexport function AdminLayout({ children }: { children: ReactNode }) {\n  return (\n    <ToastProvider>\n      <div className=\"min-h-screen bg-gray-100\">\n        <ImprovedHeader />\n        <Breadcrumb />\n        \n        <main className=\"pt-20\">\n          {children}\n        </main>\n        \n        <ScrollToTop />\n      </div>\n    </ToastProvider>\n  )\n}\n\n// Layout limpo para páginas de login/auth\nexport function AuthLayout({ children }: { children: ReactNode }) {\n  return (\n    <ToastProvider>\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n        {children}\n      </div>\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;AAiBe,SAAS,OAAO,KAKjB;QALiB,EAC7B,QAAQ,EACR,iBAAiB,IAAI,EACrB,UAAU,IAAI,EACd,kBAAkB,IAAI,EACV,GALiB;IAM7B,qBACE,6LAAC,8HAAA,CAAA,gBAAa;kBACZ,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,uIAAA,CAAA,UAAc;;;;;gBACd,gCAAkB,6LAAC,mIAAA,CAAA,UAAU;;;;;8BAE9B,6LAAC;oBAAK,WAAU;8BACb;;;;;;8BAGH,6LAAC,+HAAA,CAAA,UAAM;;;;;gBAEN,iCAAmB,6LAAC,oIAAA,CAAA,UAAW;;;;;gBAC/B,yBAAW,6LAAC,6IAAA,CAAA,UAAoB;;;;;;;;;;;;;;;;AAIzC;KAvBwB;AA0BjB,SAAS,YAAY,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;IAC1B,qBACE,6LAAC,8HAAA,CAAA,gBAAa;kBACZ,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,uIAAA,CAAA,UAAc;;;;;8BACf,6LAAC,mIAAA,CAAA,UAAU;;;;;8BAEX,6LAAC;oBAAK,WAAU;8BACb;;;;;;8BAGH,6LAAC,oIAAA,CAAA,UAAW;;;;;;;;;;;;;;;;AAIpB;MAfgB;AAkBT,SAAS,WAAW,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;IACzB,qBACE,6LAAC,8HAAA,CAAA,gBAAa;kBACZ,cAAA,6LAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;MARgB","debugId":null}},
    {"offset": {"line": 5879, "column": 0}, "map": {"version":3,"sources":["file:///Users/viniciusbaldochi1/Desktop/despasys/src/app/processos/page.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport ClientPortal from '@/components/PortalCliente';\nimport Layout from '@/components/Layout';\n\nexport default function ClientPortalPage() {\n  return (\n    <Layout>\n      <div className=\"container mx-auto px-4 py-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"mb-8\"\n        >\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Portal do Cliente</h1>\n          <p className=\"text-gray-600\">\n            Acompanhe seus processos de documentação veicular\n          </p>\n        </motion.div>\n\n        <ClientPortal />\n      </div>\n    </Layout>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AAOe,SAAS;IACtB,qBACE,6LAAC,+HAAA,CAAA,UAAM;kBACL,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAG;oBAC7B,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAE;oBAC5B,YAAY;wBAAE,UAAU;oBAAI;oBAC5B,WAAU;;sCAEV,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,6LAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;8BAK/B,6LAAC,sIAAA,CAAA,UAAY;;;;;;;;;;;;;;;;AAIrB;KApBwB","debugId":null}}]
}